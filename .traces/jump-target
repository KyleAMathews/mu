c{0: 0 ((1 integer) <- copy (8 literal)) -- nil
c{0: 1 (jump (1 offset)) -- nil
c{0: 2 ((2 integer) <- copy (3 literal)) -- nil
c{0: 3 (reply) -- nil
c{0: 4 ((3 integer) <- copy (34 literal)) -- nil
c{1: 0 copy ((1 integer))
c{1: 1 jump nil
c{1: 2 copy ((2 integer))
c{1: 3 reply nil
c{1: 4 copy ((3 integer))
cn0: ((1 integer) <- copy (8 literal)) nil nil
maybe-add: (8 literal)
cn0: checking (1 integer)
maybe-add: (1 integer)
cn0: (jump (1 offset)) nil nil
maybe-add: (1 offset)
cn0: ((2 integer) <- copy (3 literal)) nil nil
maybe-add: (3 literal)
cn0: checking (2 integer)
maybe-add: (2 integer)
cn0: (reply) nil nil
cn0: ((3 integer) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (3 integer)
maybe-add: (3 integer)
cn1: update names nil nil
schedule: main
run: -- nil
run: 1 main 0: ((1 integer) <- copy (8 literal))
run: 8 => (1 integer)
setm: (1 integer) <= 8
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 8
run: -- ((1 8))
run: 2 main 1: (jump (1 offset))
jump: jumping to 3
run: -- ((1 8))
run: 3 main 3: (reply)
