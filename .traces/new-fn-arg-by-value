cvt0: 0 ((1 integer) <- copy (0 literal)) -- nil
cvt0: 1 ((2 integer) <- arg) -- nil
cvt1: 0 copy ((1 integer))
cvt1: 1 arg ((2 integer))
cvt0: 0 ((1 integer) <- copy (34 literal)) -- nil
cvt0: 1 (test1 (1 integer)) -- nil
cvt1: 0 copy ((1 integer))
cvt1: 1 test1 nil
schedule: main
run: -- nil
run: main 0: ((1 integer) <- copy (34 literal))
run: writing to oarg 34 => (1 integer)
setm: (1 integer) <= 34
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 34
run: -- ((1 34))
run: main 1: (test1 (1 integer))
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
run: -- ((1 34))
run: test1 0: ((1 integer) <- copy (0 literal))
run: writing to oarg 0 => (1 integer)
setm: (1 integer) <= 0
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 0
run: -- ((1 0))
run: test1 1: ((2 integer) <- arg)
arg: nil 0 (34)
setm: (2 integer) <= 34
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 34
