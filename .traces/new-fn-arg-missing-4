cvt0: 0 ((4 integer) <- arg) -- nil
cvt0: 1 ((5 integer) (6 boolean) <- arg) -- nil
cvt0: 2 (break-if (6 boolean)) -- ((open 2))
cvt0: 3 ((5 integer) <- copy (1 literal)) -- ((open 2))
cvt0: 4 ((7 integer) <- add (4 integer) (5 integer)) -- ((close 4) (open 2))
cvt1: 0 arg ((4 integer))
cvt1: 1 arg ((5 integer) (6 boolean))
cvt1: 2 begin nil
cvt1: 2 break-if nil
cvt1: 3 copy ((5 integer))
cvt1: 4 add ((7 integer))
cvt0: 0 (test1 (34 literal)) -- nil
cvt1: 0 test1 nil
schedule: main
run: -- nil
run: main 0: (test1 (34 literal))
run: -- nil
run: test1 0: ((4 integer) <- arg)
arg: nil 0 (34)
setm: (4 integer) <= 34
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
setm: size of (4 integer) is 1
setm: (4 integer): setting 4 to 34
run: -- ((4 34))
run: test1 1: ((5 integer) (6 boolean) <- arg)
arg: nil 1 (34)
setm: (5 integer) <= nil
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
setm: size of (5 integer) is 1
setm: (5 integer): setting 5 to nil
setm: (6 boolean) <= nil
sz: (6 boolean)
addr: (6 boolean)
addr: initial result: 6
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 6 to nil
run: -- ((4 34))
run: test1 2: (jump-if (6 boolean) (1 offset))
m: (6 boolean)
sz: (6 boolean)
addr: (6 boolean)
addr: initial result: 6
run: -- ((4 34))
run: test1 3: ((5 integer) <- copy (1 literal))
run: writing to oarg 1 => (5 integer)
setm: (5 integer) <= 1
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
setm: size of (5 integer) is 1
setm: (5 integer): setting 5 to 1
run: -- ((4 34) (5 1))
run: test1 4: ((7 integer) <- add (4 integer) (5 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
m: (5 integer)
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
add: 34 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
m: (5 integer)
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
run: writing to oarg 35 => (7 integer)
setm: (7 integer) <= 35
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
setm: size of (7 integer) is 1
setm: (7 integer): setting 7 to 35
