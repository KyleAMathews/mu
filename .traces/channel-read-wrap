c{0: 0 ((1 channel-address) <- new-channel (1 literal)) -- nil
c{0: 1 ((2 integer-address) <- new (integer literal)) -- nil
c{0: 2 ((2 integer-address deref) <- copy (34 literal)) -- nil
c{0: 3 ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) -- nil
c{0: 4 ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref)) -- nil
c{0: 5 (_ (1 channel-address deref) <- read (1 channel-address)) -- nil
c{0: 6 ((4 integer) <- get (1 channel-address deref) (first-full offset)) -- nil
c{0: 7 ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref)) -- nil
c{0: 8 (_ (1 channel-address deref) <- read (1 channel-address)) -- nil
c{0: 9 ((5 integer) <- get (1 channel-address deref) (first-full offset)) -- nil
c{1: 0 new-channel ((1 channel-address))
c{1: 1 new ((2 integer-address))
c{1: 2 copy ((2 integer-address deref))
c{1: 3 new-tagged-value ((3 tagged-value-address))
c{1: 4 write ((1 channel-address deref))
c{1: 5 read (_ (1 channel-address deref))
c{1: 6 get ((4 integer))
c{1: 7 write ((1 channel-address deref))
c{1: 8 read (_ (1 channel-address deref))
c{1: 9 get ((5 integer))
cn0: ((1 channel-address) <- new-channel (1 literal)) nil nil
maybe-add: (1 literal)
cn0: checking (1 channel-address)
maybe-add: (1 channel-address)
cn0: ((2 integer-address) <- new (integer literal)) nil nil
maybe-add: (integer literal)
cn0: checking (2 integer-address)
maybe-add: (2 integer-address)
cn0: ((2 integer-address deref) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (2 integer-address deref)
maybe-add: (2 integer-address deref)
cn0: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) nil nil
maybe-add: (integer-address literal)
maybe-add: (2 integer-address)
cn0: checking (3 tagged-value-address)
maybe-add: (3 tagged-value-address)
cn0: ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref)) nil nil
maybe-add: (1 channel-address)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: (_ (1 channel-address deref) <- read (1 channel-address)) nil nil
maybe-add: (1 channel-address)
cn0: checking _
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((4 integer) <- get (1 channel-address deref) (first-full offset)) nil nil
cn0: field-access first-full
cn0: field-access deref
cn0: new field; computing location
cn0: field location 2
cn0: checking (4 integer)
maybe-add: (4 integer)
cn0: ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref)) ((first-full 2)) ((first-full t))
maybe-add: (1 channel-address)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: (_ (1 channel-address deref) <- read (1 channel-address)) ((first-full 2)) ((first-full t))
maybe-add: (1 channel-address)
cn0: checking _
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((5 integer) <- get (1 channel-address deref) (first-full offset)) ((first-full 2)) ((first-full t))
cn0: field-access first-full
cn0: field-access deref
cn0: checking (5 integer)
maybe-add: (5 integer)
cn1: update names ((first-full 2)) ((first-full t))
schedule: main
run: -- nil
run: 1 main 0: ((1 channel-address) <- new-channel (1 literal))
run: -- nil
run: 2 new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-channel 1: ((1 channel-address) <- new (channel literal))
sizeof: channel
sizeof: boolean
sizeof: boolean
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1001 to 1031
run: -- ((1000 30) (1001 1031))
run: 4 new-channel 2: ((2 integer-address) <- get-address (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1000
addr: deref 1001 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (2 offset) => 1033
run: 1033 => (2 integer-address)
setm: (2 integer-address) <= 1033
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
addr: incrementing by 1000
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 1002 to 1033
run: -- ((1000 30) (1001 1031) (1002 1033))
run: 5 new-channel 3: ((2 integer-address deref) <- copy (0 literal))
run: 0 => (2 integer-address deref)
setm: (2 integer-address deref) <= 0
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
addr: (2 location)
addr: initial result: 2
addr: incrementing by 1000
sz: (1033 integer)
addr: (2 integer-address deref)
addr: initial result: 2
addr: incrementing by 1000
addr: deref 1002 => 1033
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1033 to 0
run: -- ((1000 30) (1001 1031) (1002 1033) (1033 0))
run: 6 new-channel 4: ((3 integer-address) <- get-address (1 channel-address deref) (3 offset))
record-info: (1 channel-address deref) (3 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1000
addr: deref 1001 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (3 offset) => 1034
run: 1034 => (3 integer-address)
setm: (3 integer-address) <= 1034
sz: (3 integer-address)
addr: (3 integer-address)
addr: initial result: 3
addr: incrementing by 1000
setm: size of (3 integer-address) is 1
setm: (3 integer-address): setting 1003 to 1034
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1033 0))
run: 7 new-channel 5: ((3 integer-address deref) <- copy (0 literal))
run: 0 => (3 integer-address deref)
setm: (3 integer-address deref) <= 0
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1000
sz: (1034 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1034
setm: size of (3 integer-address deref) is 1
setm: (3 integer-address deref): setting 1034 to 0
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1033 0) (1034 0))
run: 8 new-channel 6: ((4 integer) <- arg)
arg: nil 0 (1)
run: 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 1
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 1) (1033 0) (1034 0))
run: 9 new-channel 7: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
add: 1 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
run: 2 => (4 integer)
setm: (4 integer) <= 2
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 2
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1033 0) (1034 0))
run: 10 new-channel 8: ((5 tagged-value-array-address-address) <- get-address (1 channel-address deref) (4 offset))
record-info: (1 channel-address deref) (4 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1000
addr: deref 1001 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (4 offset) => 1035
run: 1035 => (5 tagged-value-array-address-address)
setm: (5 tagged-value-array-address-address) <= 1035
sz: (5 tagged-value-array-address-address)
addr: (5 tagged-value-array-address-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 tagged-value-array-address-address) is 1
setm: (5 tagged-value-array-address-address): setting 1005 to 1035
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0))
run: 11 new-channel 9: ((5 tagged-value-array-address-address deref) <- new (tagged-value-array literal) (4 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1036 => (5 tagged-value-array-address-address deref)
setm: (5 tagged-value-array-address-address deref) <= 1036
sz: (5 tagged-value-array-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1035 tagged-value-array-address)
addr: (5 tagged-value-array-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1035
setm: size of (5 tagged-value-array-address-address deref) is 1
setm: (5 tagged-value-array-address-address deref): setting 1035 to 1036
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2))
run: 12 new-channel 10: (reply (1 channel-address))
m: (1 channel-address)
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1000
reply: ((1 channel-address)) ((1 channel-address))
reply: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1 to 1031
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2))
run: 13 main 1: ((2 integer-address) <- new (integer literal))
sizeof: integer
run: 1041 => (2 integer-address)
setm: (2 integer-address) <= 1041
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 2 to 1041
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2))
run: 14 main 2: ((2 integer-address deref) <- copy (34 literal))
run: 34 => (2 integer-address deref)
setm: (2 integer-address deref) <= 34
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
addr: (2 location)
addr: initial result: 2
sz: (1041 integer)
addr: (2 integer-address deref)
addr: initial result: 2
addr: deref 2 => 1041
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1041 to 34
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34))
run: 15 main 3: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address))
m: (2 integer-address)
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34))
run: 16 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1042 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30))
run: 17 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer-address 1041)
run: integer-address => (1 type)
setm: (1 type) <= integer-address
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
setm: size of (1 type) is 1
setm: (1 type): setting 1043 to integer-address
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address))
run: 18 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
sizeof: integer-address
run: 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1042
setm: size of (2 integer) is 1
setm: (2 integer): setting 1044 to 1
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1))
run: 19 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1042
run: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1042
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1045 to t
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t))
run: 20 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1042
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t))
run: 21 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1073 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1073
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1042
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1046 to 1073
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073))
run: 22 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1042
addr: deref 1046 => 1073
record-info: initial base 1073 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1073
run: 1073 => (5 location)
setm: (5 location) <= 1073
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1042
setm: size of (5 location) is 1
setm: (5 location): setting 1047 to 1073
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073))
run: 23 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
run: integer-address => (5 location deref)
setm: (5 location deref) <= integer-address
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1042
sz: (1073 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1042
addr: deref 1047 => 1073
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1073 to integer-address
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1073 integer-address))
run: 24 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1042
addr: deref 1046 => 1073
record-info: initial base 1073 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1074
run: 1074 => (6 location)
setm: (6 location) <= 1074
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1042
setm: size of (6 location) is 1
setm: (6 location): setting 1048 to 1074
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address))
run: 25 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer-address 1041)
run: 1041 => (6 location deref)
setm: (6 location deref) <= 1041
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1042
sz: (1074 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1042
addr: deref 1048 => 1074
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1074 to 1041
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 26 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1042
reply: ((4 tagged-value-address)) ((3 tagged-value-address))
reply: 1073 => (3 tagged-value-address)
setm: (3 tagged-value-address) <= 1073
sz: (3 tagged-value-address)
addr: (3 tagged-value-address)
addr: initial result: 3
setm: size of (3 tagged-value-address) is 1
setm: (3 tagged-value-address): setting 3 to 1073
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 27 main 4: ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref))
m: (1 channel-address)
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1073
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 28 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1075 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30))
run: 29 write 1: ((1 channel-address) <- arg)
arg: nil 0 (1031 #(tagged record (integer-address 1041 . nil)))
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1075
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1076 to 1031
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031))
run: 30 write 2: ((2 tagged-value) <- arg)
arg: nil 1 (1031 #(tagged record (integer-address 1041 . nil)))
run: #(tagged record (integer-address 1041 . nil)) => (2 tagged-value)
setm: (2 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (2 tagged-value)
addr: (2 tagged-value)
addr: initial result: 2
addr: incrementing by 1075
setm: size of (2 tagged-value) is 2
setm: (2 tagged-value): setting 1077 to integer-address
setm: (2 tagged-value): setting 1078 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041))
run: 31 write 3: ((4 boolean) <- full? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1075
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1075
addr: deref 1076 => 1031
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041))
run: 32 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1106 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30))
run: 33 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1036 . nil)))
run: #(tagged record (nil nil 0 0 1036 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (nil nil 0 0 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
setm: size of (1 channel) is 5
setm: (1 channel): setting 1107 to nil
setm: (1 channel): setting 1108 to nil
setm: (1 channel): setting 1109 to 0
setm: (1 channel): setting 1110 to 0
setm: (1 channel): setting 1111 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036))
run: 34 full? 2: ((6 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1110 integer
m: (1110 integer global)
sz: (1110 integer global)
addr: (1110 integer global)
addr: initial result: 1110
run: 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
setm: size of (6 integer) is 1
setm: (6 integer): setting 1112 to 0
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 0))
run: 35 full? 3: ((6 integer) <- add (6 integer) (1 literal))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
add: 0 1
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
run: 1 => (6 integer)
setm: (6 integer) <= 1
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
setm: size of (6 integer) is 1
setm: (6 integer): setting 1112 to 1
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1))
run: 36 full? 4: ((7 integer) <- capacity (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1))
run: 37 capacity 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1137 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1137 30))
run: 38 capacity 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1036 . nil)))
run: #(tagged record (nil nil 0 0 1036 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (nil nil 0 0 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
setm: size of (1 channel) is 5
setm: (1 channel): setting 1138 to nil
setm: (1 channel): setting 1139 to nil
setm: (1 channel): setting 1140 to 0
setm: (1 channel): setting 1141 to 0
setm: (1 channel): setting 1142 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1137 30) (1140 0) (1141 0) (1142 1036))
run: 39 capacity 2: ((6 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
record-info: initial base 1138 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1142 tagged-value-array-address
m: (1142 tagged-value-array-address global)
sz: (1142 tagged-value-array-address global)
addr: (1142 tagged-value-array-address global)
addr: initial result: 1142
run: 1036 => (6 tagged-value-array-address)
setm: (6 tagged-value-array-address) <= 1036
sz: (6 tagged-value-array-address)
addr: (6 tagged-value-array-address)
addr: initial result: 6
addr: incrementing by 1137
setm: size of (6 tagged-value-array-address) is 1
setm: (6 tagged-value-array-address): setting 1143 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036))
run: 40 capacity 3: ((7 integer) <- len (6 tagged-value-array-address deref))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1137
sz: (1036 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1137
addr: deref 1143 => 1036
run: 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1137
setm: size of (7 integer) is 1
setm: (7 integer): setting 1144 to 2
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 41 capacity 4: (reply (7 integer))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1137
reply: ((7 integer)) ((7 integer))
reply: 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1106
setm: size of (7 integer) is 1
setm: (7 integer): setting 1113 to 2
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 42 full? 5: ((8 boolean) <- lt (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1106
run: t => (8 boolean)
setm: (8 boolean) <= t
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1106
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1114 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 43 full? 6: (jump-if (8 boolean) (1 offset))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1106
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 44 full? 8: ((9 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1109 integer
m: (1109 integer global)
sz: (1109 integer global)
addr: (1109 integer global)
addr: initial result: 1109
run: 0 => (9 integer)
setm: (9 integer) <= 0
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1106
setm: size of (9 integer) is 1
setm: (9 integer): setting 1115 to 0
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 45 full? 9: ((10 boolean) <- eq (9 integer) (6 integer))
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1106
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
run: nil => (10 boolean)
setm: (10 boolean) <= nil
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1106
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1116 to nil
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 46 full? 10: (reply (10 boolean))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1106
reply: ((10 boolean)) ((4 boolean))
reply: nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1075
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1079 to nil
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 47 write 4: (jump-unless (4 boolean) (3 offset))
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1075
jump: checking that nil is not t
jump: jumping to 8
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 48 write 8: ((6 tagged-value-array-address) <- get (1 channel-address deref) (4 offset))
record-info: (1 channel-address deref) (4 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1075
addr: deref 1076 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (4 offset) => 1035 tagged-value-array-address
m: (1035 tagged-value-array-address global)
sz: (1035 tagged-value-array-address global)
addr: (1035 tagged-value-array-address global)
addr: initial result: 1035
run: 1036 => (6 tagged-value-array-address)
setm: (6 tagged-value-array-address) <= 1036
sz: (6 tagged-value-array-address)
addr: (6 tagged-value-array-address)
addr: initial result: 6
addr: incrementing by 1075
setm: size of (6 tagged-value-array-address) is 1
setm: (6 tagged-value-array-address): setting 1081 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 49 write 9: ((7 integer-address) <- get-address (1 channel-address deref) (3 offset))
record-info: (1 channel-address deref) (3 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1075
addr: deref 1076 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (3 offset) => 1034
run: 1034 => (7 integer-address)
setm: (7 integer-address) <= 1034
sz: (7 integer-address)
addr: (7 integer-address)
addr: initial result: 7
addr: incrementing by 1075
setm: size of (7 integer-address) is 1
setm: (7 integer-address): setting 1082 to 1034
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1082 1034) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 50 write 10: ((8 tagged-value-address) <- index-address (6 tagged-value-array-address deref) (7 integer-address deref))
array-info: (6 tagged-value-array-address deref) (7 integer-address deref)
addr: (6 tagged-value-array-address deref)
addr: initial result: 6
addr: incrementing by 1075
addr: deref 1081 => 1036
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1075
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1075
addr: deref 1082 => 1034
array-info: initial base 1036 type ((address t) (elem tagged-value-array) (size 1))
array-info: (6 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1075
sz: (1036 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1075
addr: deref 1081 => 1036
array-info: array-len of (6 tagged-value-array-address deref) is 2
index-address: (6 tagged-value-array-address deref) (7 integer-address deref) => 1037
run: 1037 => (8 tagged-value-address)
setm: (8 tagged-value-address) <= 1037
sz: (8 tagged-value-address)
addr: (8 tagged-value-address)
addr: initial result: 8
addr: incrementing by 1075
setm: size of (8 tagged-value-address) is 1
setm: (8 tagged-value-address): setting 1083 to 1037
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1082 1034) (1083 1037) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 51 write 11: ((8 tagged-value-address deref) <- copy (2 tagged-value))
m: (2 tagged-value)
sz: (2 tagged-value)
addr: (2 tagged-value)
addr: initial result: 2
addr: incrementing by 1075
run: #(tagged record (integer-address 1041 . nil)) => (8 tagged-value-address deref)
setm: (8 tagged-value-address deref) <= #(tagged record (integer-address 1041 . nil))
sz: (8 tagged-value-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1075
sz: (1037 tagged-value)
addr: (8 tagged-value-address deref)
addr: initial result: 8
addr: incrementing by 1075
addr: deref 1083 => 1037
setm: size of (8 tagged-value-address deref) is 2
setm: (8 tagged-value-address deref): setting 1037 to integer-address
setm: (8 tagged-value-address deref): setting 1038 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1082 1034) (1083 1037) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 52 write 12: ((7 integer-address deref) <- add (7 integer-address deref) (1 literal))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1075
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1075
addr: deref 1082 => 1034
add: 0 1
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1075
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1075
addr: deref 1082 => 1034
run: 1 => (7 integer-address deref)
setm: (7 integer-address deref) <= 1
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1075
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1075
addr: deref 1082 => 1034
setm: size of (7 integer-address deref) is 1
setm: (7 integer-address deref): setting 1034 to 1
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1082 1034) (1083 1037) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 53 write 13: ((9 integer) <- len (6 tagged-value-array-address deref))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1075
sz: (1036 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1075
addr: deref 1081 => 1036
run: 2 => (9 integer)
setm: (9 integer) <= 2
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1075
setm: size of (9 integer) is 1
setm: (9 integer): setting 1084 to 2
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 54 write 14: ((10 boolean) <- lt (7 integer-address deref) (9 integer))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1075
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1075
addr: deref 1082 => 1034
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1075
run: t => (10 boolean)
setm: (10 boolean) <= t
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1075
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1085 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 55 write 15: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1075
jump: checking that t is t
jump: jumping to 17
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 56 write 17: ((5 boolean-address) <- get-address (1 channel-address deref) (0 offset))
record-info: (1 channel-address deref) (0 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1075
addr: deref 1076 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (0 offset) => 1031
run: 1031 => (5 boolean-address)
setm: (5 boolean-address) <= 1031
sz: (5 boolean-address)
addr: (5 boolean-address)
addr: initial result: 5
addr: incrementing by 1075
setm: size of (5 boolean-address) is 1
setm: (5 boolean-address): setting 1080 to 1031
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 57 write 18: ((5 boolean-address deref) <- copy (t literal))
run: t => (5 boolean-address deref)
setm: (5 boolean-address deref) <= t
sz: (5 boolean-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1075
sz: (1031 boolean)
addr: (5 boolean-address deref)
addr: initial result: 5
addr: incrementing by 1075
addr: deref 1080 => 1031
setm: size of (5 boolean-address deref) is 1
setm: (5 boolean-address deref): setting 1031 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 58 write 19: (reply (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1075
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1075
addr: deref 1076 => 1031
reply: ((1 channel-address deref)) ((1 channel-address deref))
reply: #(tagged record (t nil 0 1 1036 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t nil 0 1 1036 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1031 to t
setm: (1 channel-address deref): setting 1032 to nil
setm: (1 channel-address deref): setting 1033 to 0
setm: (1 channel-address deref): setting 1034 to 1
setm: (1 channel-address deref): setting 1035 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 59 main 5: (_ (1 channel-address deref) <- read (1 channel-address))
m: (1 channel-address)
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2))
run: 60 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1168 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30))
run: 61 read 1: ((1 channel-address) <- arg)
arg: nil 0 (1031)
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1168
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1169 to 1031
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031))
run: 62 read 2: ((2 boolean) <- empty? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1168
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1168
addr: deref 1169 => 1031
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031))
run: 63 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1199 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1199 30))
run: 64 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 1 1036 . nil)))
run: #(tagged record (t nil 0 1 1036 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (t nil 0 1 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
setm: size of (1 channel) is 5
setm: (1 channel): setting 1200 to t
setm: (1 channel): setting 1201 to nil
setm: (1 channel): setting 1202 to 0
setm: (1 channel): setting 1203 to 1
setm: (1 channel): setting 1204 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036))
run: 65 empty? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
record-info: initial base 1200 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1202 integer
m: (1202 integer global)
sz: (1202 integer global)
addr: (1202 integer global)
addr: initial result: 1202
run: 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1199
setm: size of (6 integer) is 1
setm: (6 integer): setting 1205 to 0
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0))
run: 66 empty? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
record-info: initial base 1200 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1203 integer
m: (1203 integer global)
sz: (1203 integer global)
addr: (1203 integer global)
addr: initial result: 1203
run: 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1199
setm: size of (7 integer) is 1
setm: (7 integer): setting 1206 to 1
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 67 empty? 4: ((8 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1199
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1199
run: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1199
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1207 to nil
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 68 empty? 5: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1199
reply: ((8 boolean)) ((2 boolean))
reply: nil => (2 boolean)
setm: (2 boolean) <= nil
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
addr: incrementing by 1168
setm: size of (2 boolean) is 1
setm: (2 boolean): setting 1170 to nil
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 69 read 3: (jump-unless (2 boolean) (3 offset))
m: (2 boolean)
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
addr: incrementing by 1168
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 70 read 7: ((4 integer-address) <- get-address (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1168
addr: deref 1169 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (2 offset) => 1033
run: 1033 => (4 integer-address)
setm: (4 integer-address) <= 1033
sz: (4 integer-address)
addr: (4 integer-address)
addr: initial result: 4
addr: incrementing by 1168
setm: size of (4 integer-address) is 1
setm: (4 integer-address): setting 1172 to 1033
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1172 1033) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 71 read 8: ((5 tagged-value-array-address) <- get (1 channel-address deref) (4 offset))
record-info: (1 channel-address deref) (4 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1168
addr: deref 1169 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (4 offset) => 1035 tagged-value-array-address
m: (1035 tagged-value-array-address global)
sz: (1035 tagged-value-array-address global)
addr: (1035 tagged-value-array-address global)
addr: initial result: 1035
run: 1036 => (5 tagged-value-array-address)
setm: (5 tagged-value-array-address) <= 1036
sz: (5 tagged-value-array-address)
addr: (5 tagged-value-array-address)
addr: initial result: 5
addr: incrementing by 1168
setm: size of (5 tagged-value-array-address) is 1
setm: (5 tagged-value-array-address): setting 1173 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1172 1033) (1173 1036) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 72 read 9: ((6 tagged-value) <- index (5 tagged-value-array-address deref) (4 integer-address deref))
array-info: (5 tagged-value-array-address deref) (4 integer-address deref)
addr: (5 tagged-value-array-address deref)
addr: initial result: 5
addr: incrementing by 1168
addr: deref 1173 => 1036
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1168
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1168
addr: deref 1172 => 1033
array-info: initial base 1036 type ((address t) (elem tagged-value-array) (size 1))
array-info: (5 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (5 tagged-value-array-address deref)
m: (5 integer-address deref)
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1168
sz: (1036 integer)
addr: (5 integer-address deref)
addr: initial result: 5
addr: incrementing by 1168
addr: deref 1173 => 1036
array-info: array-len of (5 tagged-value-array-address deref) is 2
index: (5 tagged-value-array-address deref) (4 integer-address deref) => 1037 tagged-value
m: (1037 tagged-value global)
sz: (1037 tagged-value global)
addr: (1037 tagged-value global)
addr: initial result: 1037
run: #(tagged record (integer-address 1041 . nil)) => (6 tagged-value)
setm: (6 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1168
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1174 to integer-address
setm: (6 tagged-value): setting 1175 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 73 read 10: ((4 integer-address deref) <- add (4 integer-address deref) (1 literal))
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1168
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1168
addr: deref 1172 => 1033
add: 0 1
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1168
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1168
addr: deref 1172 => 1033
run: 1 => (4 integer-address deref)
setm: (4 integer-address deref) <= 1
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1168
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1168
addr: deref 1172 => 1033
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1033 to 1
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 74 read 11: ((8 integer) <- len (5 tagged-value-array-address deref))
array-len: (5 tagged-value-array-address deref)
m: (5 integer-address deref)
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1168
sz: (1036 integer)
addr: (5 integer-address deref)
addr: initial result: 5
addr: incrementing by 1168
addr: deref 1173 => 1036
run: 2 => (8 integer)
setm: (8 integer) <= 2
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1168
setm: size of (8 integer) is 1
setm: (8 integer): setting 1176 to 2
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 75 read 12: ((9 boolean) <- lt (4 integer-address deref) (8 integer))
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1168
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1168
addr: deref 1172 => 1033
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1168
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1168
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1177 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 76 read 13: (jump-if (9 boolean) (1 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1168
jump: checking that t is t
jump: jumping to 15
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 77 read 15: ((3 boolean-address) <- get-address (1 channel-address deref) (1 offset))
record-info: (1 channel-address deref) (1 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1168
addr: deref 1169 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (1 offset) => 1032
run: 1032 => (3 boolean-address)
setm: (3 boolean-address) <= 1032
sz: (3 boolean-address)
addr: (3 boolean-address)
addr: initial result: 3
addr: incrementing by 1168
setm: size of (3 boolean-address) is 1
setm: (3 boolean-address): setting 1171 to 1032
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 78 read 16: ((3 boolean-address deref) <- copy (t literal))
run: t => (3 boolean-address deref)
setm: (3 boolean-address deref) <= t
sz: (3 boolean-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1168
sz: (1032 boolean)
addr: (3 boolean-address deref)
addr: initial result: 3
addr: incrementing by 1168
addr: deref 1171 => 1032
setm: size of (3 boolean-address deref) is 1
setm: (3 boolean-address deref): setting 1032 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 79 read 17: (reply (6 tagged-value) (1 channel-address deref))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1168
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1168
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1168
addr: deref 1169 => 1031
reply: ((6 tagged-value) (1 channel-address deref)) (_ (1 channel-address deref))
reply: #(tagged record (t t 1 1 1036 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 1 1 1036 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1031 to t
setm: (1 channel-address deref): setting 1032 to t
setm: (1 channel-address deref): setting 1033 to 1
setm: (1 channel-address deref): setting 1034 to 1
setm: (1 channel-address deref): setting 1035 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 80 main 6: ((4 integer) <- get (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (2 offset) => 1033 integer
m: (1033 integer global)
sz: (1033 integer global)
addr: (1033 integer global)
addr: initial result: 1033
run: 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
setm: size of (4 integer) is 1
setm: (4 integer): setting 4 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 81 main 7: ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref))
m: (1 channel-address)
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1073
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1))
run: 82 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1230 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30))
run: 83 write 1: ((1 channel-address) <- arg)
arg: nil 0 (1031 #(tagged record (integer-address 1041 . nil)))
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1230
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1231 to 1031
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031))
run: 84 write 2: ((2 tagged-value) <- arg)
arg: nil 1 (1031 #(tagged record (integer-address 1041 . nil)))
run: #(tagged record (integer-address 1041 . nil)) => (2 tagged-value)
setm: (2 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (2 tagged-value)
addr: (2 tagged-value)
addr: initial result: 2
addr: incrementing by 1230
setm: size of (2 tagged-value) is 2
setm: (2 tagged-value): setting 1232 to integer-address
setm: (2 tagged-value): setting 1233 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041))
run: 85 write 3: ((4 boolean) <- full? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1230
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1230
addr: deref 1231 => 1031
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041))
run: 86 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1261 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30))
run: 87 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 1 1036 . nil)))
run: #(tagged record (t t 1 1 1036 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (t t 1 1 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1261
setm: size of (1 channel) is 5
setm: (1 channel): setting 1262 to t
setm: (1 channel): setting 1263 to t
setm: (1 channel): setting 1264 to 1
setm: (1 channel): setting 1265 to 1
setm: (1 channel): setting 1266 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036))
run: 88 full? 2: ((6 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1261
record-info: initial base 1262 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1265 integer
m: (1265 integer global)
sz: (1265 integer global)
addr: (1265 integer global)
addr: initial result: 1265
run: 1 => (6 integer)
setm: (6 integer) <= 1
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1261
setm: size of (6 integer) is 1
setm: (6 integer): setting 1267 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 1))
run: 89 full? 3: ((6 integer) <- add (6 integer) (1 literal))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1261
add: 1 1
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1261
run: 2 => (6 integer)
setm: (6 integer) <= 2
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1261
setm: size of (6 integer) is 1
setm: (6 integer): setting 1267 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2))
run: 90 full? 4: ((7 integer) <- capacity (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1261
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2))
run: 91 capacity 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1292 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2) (1292 30))
run: 92 capacity 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 1 1036 . nil)))
run: #(tagged record (t t 1 1 1036 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (t t 1 1 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1292
setm: size of (1 channel) is 5
setm: (1 channel): setting 1293 to t
setm: (1 channel): setting 1294 to t
setm: (1 channel): setting 1295 to 1
setm: (1 channel): setting 1296 to 1
setm: (1 channel): setting 1297 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036))
run: 93 capacity 2: ((6 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1292
record-info: initial base 1293 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1297 tagged-value-array-address
m: (1297 tagged-value-array-address global)
sz: (1297 tagged-value-array-address global)
addr: (1297 tagged-value-array-address global)
addr: initial result: 1297
run: 1036 => (6 tagged-value-array-address)
setm: (6 tagged-value-array-address) <= 1036
sz: (6 tagged-value-array-address)
addr: (6 tagged-value-array-address)
addr: initial result: 6
addr: incrementing by 1292
setm: size of (6 tagged-value-array-address) is 1
setm: (6 tagged-value-array-address): setting 1298 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036))
run: 94 capacity 3: ((7 integer) <- len (6 tagged-value-array-address deref))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1292
sz: (1036 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1292
addr: deref 1298 => 1036
run: 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1292
setm: size of (7 integer) is 1
setm: (7 integer): setting 1299 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 95 capacity 4: (reply (7 integer))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1292
reply: ((7 integer)) ((7 integer))
reply: 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1261
setm: size of (7 integer) is 1
setm: (7 integer): setting 1268 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2) (1268 2) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 96 full? 5: ((8 boolean) <- lt (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1261
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1261
run: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1261
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1269 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2) (1268 2) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 97 full? 6: (jump-if (8 boolean) (1 offset))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1261
jump: checking that nil is t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 2) (1268 2) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 98 full? 7: ((6 integer) <- copy (0 literal))
run: 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1261
setm: size of (6 integer) is 1
setm: (6 integer): setting 1267 to 0
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 99 full? 8: ((9 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1261
record-info: initial base 1262 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1264 integer
m: (1264 integer global)
sz: (1264 integer global)
addr: (1264 integer global)
addr: initial result: 1264
run: 1 => (9 integer)
setm: (9 integer) <= 1
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1261
setm: size of (9 integer) is 1
setm: (9 integer): setting 1270 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 100 full? 9: ((10 boolean) <- eq (9 integer) (6 integer))
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1261
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1261
run: nil => (10 boolean)
setm: (10 boolean) <= nil
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1261
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1271 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 101 full? 10: (reply (10 boolean))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1261
reply: ((10 boolean)) ((4 boolean))
reply: nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1230
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1234 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 102 write 4: (jump-unless (4 boolean) (3 offset))
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1230
jump: checking that nil is not t
jump: jumping to 8
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 103 write 8: ((6 tagged-value-array-address) <- get (1 channel-address deref) (4 offset))
record-info: (1 channel-address deref) (4 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1230
addr: deref 1231 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (4 offset) => 1035 tagged-value-array-address
m: (1035 tagged-value-array-address global)
sz: (1035 tagged-value-array-address global)
addr: (1035 tagged-value-array-address global)
addr: initial result: 1035
run: 1036 => (6 tagged-value-array-address)
setm: (6 tagged-value-array-address) <= 1036
sz: (6 tagged-value-array-address)
addr: (6 tagged-value-array-address)
addr: initial result: 6
addr: incrementing by 1230
setm: size of (6 tagged-value-array-address) is 1
setm: (6 tagged-value-array-address): setting 1236 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 104 write 9: ((7 integer-address) <- get-address (1 channel-address deref) (3 offset))
record-info: (1 channel-address deref) (3 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1230
addr: deref 1231 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (3 offset) => 1034
run: 1034 => (7 integer-address)
setm: (7 integer-address) <= 1034
sz: (7 integer-address)
addr: (7 integer-address)
addr: initial result: 7
addr: incrementing by 1230
setm: size of (7 integer-address) is 1
setm: (7 integer-address): setting 1237 to 1034
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 105 write 10: ((8 tagged-value-address) <- index-address (6 tagged-value-array-address deref) (7 integer-address deref))
array-info: (6 tagged-value-array-address deref) (7 integer-address deref)
addr: (6 tagged-value-array-address deref)
addr: initial result: 6
addr: incrementing by 1230
addr: deref 1236 => 1036
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1230
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1230
addr: deref 1237 => 1034
array-info: initial base 1036 type ((address t) (elem tagged-value-array) (size 1))
array-info: (6 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1230
sz: (1036 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1230
addr: deref 1236 => 1036
array-info: array-len of (6 tagged-value-array-address deref) is 2
index-address: (6 tagged-value-array-address deref) (7 integer-address deref) => 1039
run: 1039 => (8 tagged-value-address)
setm: (8 tagged-value-address) <= 1039
sz: (8 tagged-value-address)
addr: (8 tagged-value-address)
addr: initial result: 8
addr: incrementing by 1230
setm: size of (8 tagged-value-address) is 1
setm: (8 tagged-value-address): setting 1238 to 1039
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1238 1039) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 106 write 11: ((8 tagged-value-address deref) <- copy (2 tagged-value))
m: (2 tagged-value)
sz: (2 tagged-value)
addr: (2 tagged-value)
addr: initial result: 2
addr: incrementing by 1230
run: #(tagged record (integer-address 1041 . nil)) => (8 tagged-value-address deref)
setm: (8 tagged-value-address deref) <= #(tagged record (integer-address 1041 . nil))
sz: (8 tagged-value-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1230
sz: (1039 tagged-value)
addr: (8 tagged-value-address deref)
addr: initial result: 8
addr: incrementing by 1230
addr: deref 1238 => 1039
setm: size of (8 tagged-value-address deref) is 2
setm: (8 tagged-value-address deref): setting 1039 to integer-address
setm: (8 tagged-value-address deref): setting 1040 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1238 1039) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 107 write 12: ((7 integer-address deref) <- add (7 integer-address deref) (1 literal))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1230
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1230
addr: deref 1237 => 1034
add: 1 1
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1230
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1230
addr: deref 1237 => 1034
run: 2 => (7 integer-address deref)
setm: (7 integer-address deref) <= 2
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1230
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1230
addr: deref 1237 => 1034
setm: size of (7 integer-address deref) is 1
setm: (7 integer-address deref): setting 1034 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 2) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1238 1039) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 108 write 13: ((9 integer) <- len (6 tagged-value-array-address deref))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1230
sz: (1036 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1230
addr: deref 1236 => 1036
run: 2 => (9 integer)
setm: (9 integer) <= 2
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1230
setm: size of (9 integer) is 1
setm: (9 integer): setting 1239 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 2) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 109 write 14: ((10 boolean) <- lt (7 integer-address deref) (9 integer))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1230
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1230
addr: deref 1237 => 1034
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1230
run: nil => (10 boolean)
setm: (10 boolean) <= nil
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1230
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1240 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 2) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 110 write 15: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1230
jump: checking that nil is t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 2) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 111 write 16: ((7 integer-address deref) <- copy (0 literal))
run: 0 => (7 integer-address deref)
setm: (7 integer-address deref) <= 0
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1230
sz: (1034 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1230
addr: deref 1237 => 1034
setm: size of (7 integer-address deref) is 1
setm: (7 integer-address deref): setting 1034 to 0
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 112 write 17: ((5 boolean-address) <- get-address (1 channel-address deref) (0 offset))
record-info: (1 channel-address deref) (0 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1230
addr: deref 1231 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (0 offset) => 1031
run: 1031 => (5 boolean-address)
setm: (5 boolean-address) <= 1031
sz: (5 boolean-address)
addr: (5 boolean-address)
addr: initial result: 5
addr: incrementing by 1230
setm: size of (5 boolean-address) is 1
setm: (5 boolean-address): setting 1235 to 1031
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 113 write 18: ((5 boolean-address deref) <- copy (t literal))
run: t => (5 boolean-address deref)
setm: (5 boolean-address deref) <= t
sz: (5 boolean-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1230
sz: (1031 boolean)
addr: (5 boolean-address deref)
addr: initial result: 5
addr: incrementing by 1230
addr: deref 1235 => 1031
setm: size of (5 boolean-address deref) is 1
setm: (5 boolean-address deref): setting 1031 to t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 114 write 19: (reply (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1230
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1230
addr: deref 1231 => 1031
reply: ((1 channel-address deref)) ((1 channel-address deref))
reply: #(tagged record (t t 1 0 1036 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 1 0 1036 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1031 to t
setm: (1 channel-address deref): setting 1032 to t
setm: (1 channel-address deref): setting 1033 to 1
setm: (1 channel-address deref): setting 1034 to 0
setm: (1 channel-address deref): setting 1035 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 115 main 8: (_ (1 channel-address deref) <- read (1 channel-address))
m: (1 channel-address)
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2))
run: 116 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1323 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30))
run: 117 read 1: ((1 channel-address) <- arg)
arg: nil 0 (1031)
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1323
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1324 to 1031
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031))
run: 118 read 2: ((2 boolean) <- empty? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1323
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1323
addr: deref 1324 => 1031
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031))
run: 119 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1354 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1354 30))
run: 120 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 0 1036 . nil)))
run: #(tagged record (t t 1 0 1036 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (t t 1 0 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1354
setm: size of (1 channel) is 5
setm: (1 channel): setting 1355 to t
setm: (1 channel): setting 1356 to t
setm: (1 channel): setting 1357 to 1
setm: (1 channel): setting 1358 to 0
setm: (1 channel): setting 1359 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036))
run: 121 empty? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1354
record-info: initial base 1355 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1357 integer
m: (1357 integer global)
sz: (1357 integer global)
addr: (1357 integer global)
addr: initial result: 1357
run: 1 => (6 integer)
setm: (6 integer) <= 1
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1354
setm: size of (6 integer) is 1
setm: (6 integer): setting 1360 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1))
run: 122 empty? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1354
record-info: initial base 1355 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1358 integer
m: (1358 integer global)
sz: (1358 integer global)
addr: (1358 integer global)
addr: initial result: 1358
run: 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1354
setm: size of (7 integer) is 1
setm: (7 integer): setting 1361 to 0
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 123 empty? 4: ((8 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1354
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1354
run: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1354
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1362 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 124 empty? 5: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1354
reply: ((8 boolean)) ((2 boolean))
reply: nil => (2 boolean)
setm: (2 boolean) <= nil
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
addr: incrementing by 1323
setm: size of (2 boolean) is 1
setm: (2 boolean): setting 1325 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 125 read 3: (jump-unless (2 boolean) (3 offset))
m: (2 boolean)
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
addr: incrementing by 1323
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 126 read 7: ((4 integer-address) <- get-address (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1323
addr: deref 1324 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (2 offset) => 1033
run: 1033 => (4 integer-address)
setm: (4 integer-address) <= 1033
sz: (4 integer-address)
addr: (4 integer-address)
addr: initial result: 4
addr: incrementing by 1323
setm: size of (4 integer-address) is 1
setm: (4 integer-address): setting 1327 to 1033
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 127 read 8: ((5 tagged-value-array-address) <- get (1 channel-address deref) (4 offset))
record-info: (1 channel-address deref) (4 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1323
addr: deref 1324 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (4 offset) => 1035 tagged-value-array-address
m: (1035 tagged-value-array-address global)
sz: (1035 tagged-value-array-address global)
addr: (1035 tagged-value-array-address global)
addr: initial result: 1035
run: 1036 => (5 tagged-value-array-address)
setm: (5 tagged-value-array-address) <= 1036
sz: (5 tagged-value-array-address)
addr: (5 tagged-value-array-address)
addr: initial result: 5
addr: incrementing by 1323
setm: size of (5 tagged-value-array-address) is 1
setm: (5 tagged-value-array-address): setting 1328 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1328 1036) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 128 read 9: ((6 tagged-value) <- index (5 tagged-value-array-address deref) (4 integer-address deref))
array-info: (5 tagged-value-array-address deref) (4 integer-address deref)
addr: (5 tagged-value-array-address deref)
addr: initial result: 5
addr: incrementing by 1323
addr: deref 1328 => 1036
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1323
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1323
addr: deref 1327 => 1033
array-info: initial base 1036 type ((address t) (elem tagged-value-array) (size 1))
array-info: (5 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (5 tagged-value-array-address deref)
m: (5 integer-address deref)
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1323
sz: (1036 integer)
addr: (5 integer-address deref)
addr: initial result: 5
addr: incrementing by 1323
addr: deref 1328 => 1036
array-info: array-len of (5 tagged-value-array-address deref) is 2
index: (5 tagged-value-array-address deref) (4 integer-address deref) => 1039 tagged-value
m: (1039 tagged-value global)
sz: (1039 tagged-value global)
addr: (1039 tagged-value global)
addr: initial result: 1039
run: #(tagged record (integer-address 1041 . nil)) => (6 tagged-value)
setm: (6 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1323
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1329 to integer-address
setm: (6 tagged-value): setting 1330 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 129 read 10: ((4 integer-address deref) <- add (4 integer-address deref) (1 literal))
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1323
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1323
addr: deref 1327 => 1033
add: 1 1
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1323
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1323
addr: deref 1327 => 1033
run: 2 => (4 integer-address deref)
setm: (4 integer-address deref) <= 2
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1323
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1323
addr: deref 1327 => 1033
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1033 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 2) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 130 read 11: ((8 integer) <- len (5 tagged-value-array-address deref))
array-len: (5 tagged-value-array-address deref)
m: (5 integer-address deref)
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1323
sz: (1036 integer)
addr: (5 integer-address deref)
addr: initial result: 5
addr: incrementing by 1323
addr: deref 1328 => 1036
run: 2 => (8 integer)
setm: (8 integer) <= 2
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1323
setm: size of (8 integer) is 1
setm: (8 integer): setting 1331 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 2) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1331 2) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 131 read 12: ((9 boolean) <- lt (4 integer-address deref) (8 integer))
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1323
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1323
addr: deref 1327 => 1033
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1323
run: nil => (9 boolean)
setm: (9 boolean) <= nil
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1323
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1332 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 2) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1331 2) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 132 read 13: (jump-if (9 boolean) (1 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1323
jump: checking that nil is t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 2) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1331 2) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 133 read 14: ((4 integer-address deref) <- copy (0 literal))
run: 0 => (4 integer-address deref)
setm: (4 integer-address deref) <= 0
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1323
sz: (1033 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1323
addr: deref 1327 => 1033
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1033 to 0
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1331 2) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 134 read 15: ((3 boolean-address) <- get-address (1 channel-address deref) (1 offset))
record-info: (1 channel-address deref) (1 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1323
addr: deref 1324 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (1 offset) => 1032
run: 1032 => (3 boolean-address)
setm: (3 boolean-address) <= 1032
sz: (3 boolean-address)
addr: (3 boolean-address)
addr: initial result: 3
addr: incrementing by 1323
setm: size of (3 boolean-address) is 1
setm: (3 boolean-address): setting 1326 to 1032
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1326 1032) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1331 2) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 135 read 16: ((3 boolean-address deref) <- copy (t literal))
run: t => (3 boolean-address deref)
setm: (3 boolean-address deref) <= t
sz: (3 boolean-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1323
sz: (1032 boolean)
addr: (3 boolean-address deref)
addr: initial result: 3
addr: incrementing by 1323
addr: deref 1326 => 1032
setm: size of (3 boolean-address deref) is 1
setm: (3 boolean-address deref): setting 1032 to t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1326 1032) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1331 2) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 136 read 17: (reply (6 tagged-value) (1 channel-address deref))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1323
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1323
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1323
addr: deref 1324 => 1031
reply: ((6 tagged-value) (1 channel-address deref)) (_ (1 channel-address deref))
reply: #(tagged record (t t 0 0 1036 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 0 0 1036 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1031 to t
setm: (1 channel-address deref): setting 1032 to t
setm: (1 channel-address deref): setting 1033 to 0
setm: (1 channel-address deref): setting 1034 to 0
setm: (1 channel-address deref): setting 1035 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 1031) (1077 integer-address) (1078 1041) (1080 1031) (1081 1036) (1082 1034) (1083 1037) (1084 2) (1085 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 2) (1114 t) (1115 0) (1137 30) (1140 0) (1141 0) (1142 1036) (1143 1036) (1144 2) (1168 30) (1169 1031) (1171 1032) (1172 1033) (1173 1036) (1174 integer-address) (1175 1041) (1176 2) (1177 t) (1199 30) (1200 t) (1202 0) (1203 1) (1204 1036) (1205 0) (1206 1) (1230 30) (1231 1031) (1232 integer-address) (1233 1041) (1235 1031) (1236 1036) (1237 1034) (1238 1039) (1239 2) (1261 30) (1262 t) (1263 t) (1264 1) (1265 1) (1266 1036) (1267 0) (1268 2) (1270 1) (1292 30) (1293 t) (1294 t) (1295 1) (1296 1) (1297 1036) (1298 1036) (1299 2) (1323 30) (1324 1031) (1326 1032) (1327 1033) (1328 1036) (1329 integer-address) (1330 1041) (1331 2) (1354 30) (1355 t) (1356 t) (1357 1) (1358 0) (1359 1036) (1360 1) (1361 0))
run: 137 main 9: ((5 integer) <- get (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (2 offset) => 1033 integer
m: (1033 integer global)
sz: (1033 integer global)
addr: (1033 integer global)
addr: initial result: 1033
run: 0 => (5 integer)
setm: (5 integer) <= 0
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
setm: size of (5 integer) is 1
setm: (5 integer): setting 5 to 0
schedule: done with #(tagged routine #hash())
