c{0: 0 ((1 channel-address) <- new-channel (2 literal)) -- nil
c{0: 1 ((2 integer-address) <- new (integer literal)) -- nil
c{0: 2 ((2 integer-address deref) <- copy (34 literal)) -- nil
c{0: 3 ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) -- nil
c{0: 4 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{0: 5 (_ (1 channel-address deref) <- read (1 channel-address deref)) -- nil
c{0: 6 ((4 integer) <- get (1 channel-address deref) (first-full offset)) -- nil
c{0: 7 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{0: 8 (_ (1 channel-address deref) <- read (1 channel-address deref)) -- nil
c{0: 9 ((5 integer) <- get (1 channel-address deref) (first-full offset)) -- nil
c{1: 0 new-channel ((1 channel-address))
c{1: 1 new ((2 integer-address))
c{1: 2 copy ((2 integer-address deref))
c{1: 3 new-tagged-value ((3 tagged-value-address))
c{1: 4 write ((1 channel-address deref))
c{1: 5 read (_ (1 channel-address deref))
c{1: 6 get ((4 integer))
c{1: 7 write ((1 channel-address deref))
c{1: 8 read (_ (1 channel-address deref))
c{1: 9 get ((5 integer))
cn0: ((1 channel-address) <- new-channel (2 literal)) nil nil
maybe-add: (2 literal)
cn0: checking (1 channel-address)
maybe-add: (1 channel-address)
cn0: ((2 integer-address) <- new (integer literal)) nil nil
maybe-add: (integer literal)
cn0: checking (2 integer-address)
maybe-add: (2 integer-address)
cn0: ((2 integer-address deref) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (2 integer-address deref)
maybe-add: (2 integer-address deref)
cn0: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) nil nil
maybe-add: (integer-address literal)
maybe-add: (2 integer-address)
cn0: checking (3 tagged-value-address)
maybe-add: (3 tagged-value-address)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) nil nil
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: (_ (1 channel-address deref) <- read (1 channel-address deref)) nil nil
maybe-add: (1 channel-address deref)
cn0: checking _
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((4 integer) <- get (1 channel-address deref) (first-full offset)) nil nil
cn0: field-access first-full
cn0: field-access deref
cn0: new field; computing location
cn0: field location 2
cn0: checking (4 integer)
maybe-add: (4 integer)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) ((first-full 2)) ((first-full t))
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: (_ (1 channel-address deref) <- read (1 channel-address deref)) ((first-full 2)) ((first-full t))
maybe-add: (1 channel-address deref)
cn0: checking _
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((5 integer) <- get (1 channel-address deref) (first-full offset)) ((first-full 2)) ((first-full t))
cn0: field-access first-full
cn0: field-access deref
cn0: checking (5 integer)
maybe-add: (5 integer)
cn1: update names ((first-full 2)) ((first-full t))
schedule: main
run: -- nil
run: 1 main 0: ((1 channel-address) <- new-channel (2 literal))
run: -- nil
run: 2 new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-channel 1: ((1 integer) <- arg)
arg: nil 0 (2)
setm: (1 integer) <= 2
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 integer) is 1
setm: (1 integer): setting 1001 to 2
run: -- ((1000 30) (1001 2))
run: 4 new-channel 2: ((2 tagged-value-array-address) <- new (tagged-value-array literal) (1 integer))
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1031 => (2 tagged-value-array-address)
setm: (2 tagged-value-array-address) <= 1031
sz: (2 tagged-value-array-address)
addr: (2 tagged-value-array-address)
addr: initial result: 2
addr: incrementing by 1000
setm: size of (2 tagged-value-array-address) is 1
setm: (2 tagged-value-array-address): setting 1002 to 1031
run: -- ((1000 30) (1001 2) (1002 1031) (1031 2))
run: 5 new-channel 3: ((3 channel-address) <- new (channel literal))
sizeof: channel
sizeof: boolean
sizeof: boolean
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: writing to oarg 1036 => (3 channel-address)
setm: (3 channel-address) <= 1036
sz: (3 channel-address)
addr: (3 channel-address)
addr: initial result: 3
addr: incrementing by 1000
setm: size of (3 channel-address) is 1
setm: (3 channel-address): setting 1003 to 1036
run: -- ((1000 30) (1001 2) (1002 1031) (1003 1036) (1031 2))
run: 6 new-channel 4: ((4 integer-address) <- get-address (3 channel-address deref) (2 offset))
record-info: (3 channel-address deref) (2 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1036
record-info: initial base 1036 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (2 offset) => 1038
run: writing to oarg 1038 => (4 integer-address)
setm: (4 integer-address) <= 1038
sz: (4 integer-address)
addr: (4 integer-address)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer-address) is 1
setm: (4 integer-address): setting 1004 to 1038
run: -- ((1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1031 2))
run: 7 new-channel 5: ((4 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (4 integer-address deref)
setm: (4 integer-address deref) <= 0
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1000
sz: (1038 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1000
addr: deref 1004 => 1038
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1038 to 0
run: -- ((1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1031 2) (1038 0))
run: 8 new-channel 6: ((5 integer-address) <- get-address (3 channel-address deref) (3 offset))
record-info: (3 channel-address deref) (3 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1036
record-info: initial base 1036 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (3 offset) => 1039
run: writing to oarg 1039 => (5 integer-address)
setm: (5 integer-address) <= 1039
sz: (5 integer-address)
addr: (5 integer-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 integer-address) is 1
setm: (5 integer-address): setting 1005 to 1039
run: -- ((1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1031 2) (1038 0))
run: 9 new-channel 7: ((5 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (5 integer-address deref)
setm: (5 integer-address deref) <= 0
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1039 integer)
addr: (5 integer-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1039
setm: size of (5 integer-address deref) is 1
setm: (5 integer-address deref): setting 1039 to 0
run: -- ((1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1031 2) (1038 0) (1039 0))
run: 10 new-channel 8: ((6 tagged-value-array-address-address) <- get-address (3 channel-address deref) (4 offset))
record-info: (3 channel-address deref) (4 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1036
record-info: initial base 1036 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (4 offset) => 1040
run: writing to oarg 1040 => (6 tagged-value-array-address-address)
setm: (6 tagged-value-array-address-address) <= 1040
sz: (6 tagged-value-array-address-address)
addr: (6 tagged-value-array-address-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 tagged-value-array-address-address) is 1
setm: (6 tagged-value-array-address-address): setting 1006 to 1040
run: -- ((1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0))
run: 11 new-channel 9: ((6 tagged-value-array-address-address deref) <- copy (2 tagged-value-array-address))
m: (2 tagged-value-array-address)
sz: (2 tagged-value-array-address)
addr: (2 tagged-value-array-address)
addr: initial result: 2
addr: incrementing by 1000
run: writing to oarg 1031 => (6 tagged-value-array-address-address deref)
setm: (6 tagged-value-array-address-address deref) <= 1031
sz: (6 tagged-value-array-address-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1000
sz: (1040 tagged-value-array-address)
addr: (6 tagged-value-array-address-address deref)
addr: initial result: 6
addr: incrementing by 1000
addr: deref 1006 => 1040
setm: size of (6 tagged-value-array-address-address deref) is 1
setm: (6 tagged-value-array-address-address deref): setting 1040 to 1031
run: -- ((1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031))
run: 12 new-channel 10: (reply (3 channel-address))
m: (3 channel-address)
sz: (3 channel-address)
addr: (3 channel-address)
addr: initial result: 3
addr: incrementing by 1000
reply: ((3 channel-address)) ((1 channel-address))
reply: 1036 => (1 channel-address)
setm: (1 channel-address) <= 1036
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1 to 1036
run: -- ((1 1036) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031))
run: 13 main 1: ((2 integer-address) <- new (integer literal))
sizeof: integer
run: writing to oarg 1041 => (2 integer-address)
setm: (2 integer-address) <= 1041
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 2 to 1041
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031))
run: 14 main 2: ((2 integer-address deref) <- copy (34 literal))
run: writing to oarg 34 => (2 integer-address deref)
setm: (2 integer-address deref) <= 34
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
addr: (2 location)
addr: initial result: 2
sz: (1041 integer)
addr: (2 integer-address deref)
addr: initial result: 2
addr: deref 2 => 1041
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1041 to 34
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34))
run: 15 main 3: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address))
m: (2 integer-address)
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34))
run: 16 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1042 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30))
run: 17 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer-address 1041)
setm: (1 type) <= integer-address
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
setm: size of (1 type) is 1
setm: (1 type): setting 1043 to integer-address
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address))
run: 18 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
sizeof: integer-address
run: writing to oarg 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1042
setm: size of (2 integer) is 1
setm: (2 integer): setting 1044 to 1
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1))
run: 19 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1042
run: writing to oarg t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1042
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1045 to t
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t))
run: 20 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1042
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t))
run: 21 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1073 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1073
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1042
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1046 to 1073
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073))
run: 22 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1042
addr: deref 1046 => 1073
record-info: initial base 1073 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1073
run: writing to oarg 1073 => (5 location)
setm: (5 location) <= 1073
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1042
setm: size of (5 location) is 1
setm: (5 location): setting 1047 to 1073
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073))
run: 23 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
run: writing to oarg integer-address => (5 location deref)
setm: (5 location deref) <= integer-address
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1042
sz: (1073 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1042
addr: deref 1047 => 1073
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1073 to integer-address
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1073 integer-address))
run: 24 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1042
addr: deref 1046 => 1073
record-info: initial base 1073 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1074
run: writing to oarg 1074 => (6 location)
setm: (6 location) <= 1074
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1042
setm: size of (6 location) is 1
setm: (6 location): setting 1048 to 1074
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address))
run: 25 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer-address 1041)
setm: (6 location deref) <= 1041
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1042
sz: (1074 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1042
addr: deref 1048 => 1074
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1074 to 1041
run: -- ((1 1036) (2 1041) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 26 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1042
reply: ((4 tagged-value-address)) ((3 tagged-value-address))
reply: 1073 => (3 tagged-value-address)
setm: (3 tagged-value-address) <= 1073
sz: (3 tagged-value-address)
addr: (3 tagged-value-address)
addr: initial result: 3
setm: size of (3 tagged-value-address) is 1
setm: (3 tagged-value-address): setting 3 to 1073
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 27 main 4: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1073
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 28 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1075 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30))
run: 29 write 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1031 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (1 channel) <= #(tagged record (nil nil 0 0 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
setm: size of (1 channel) is 5
setm: (1 channel): setting 1076 to nil
setm: (1 channel): setting 1077 to nil
setm: (1 channel): setting 1078 to 0
setm: (1 channel): setting 1079 to 0
setm: (1 channel): setting 1080 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1031))
run: 30 write 2: ((6 tagged-value) <- arg)
arg: nil 1 (#(tagged record (nil nil 0 0 1031 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (6 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1075
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1081 to integer-address
setm: (6 tagged-value): setting 1082 to 1041
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1031) (1081 integer-address) (1082 1041))
run: 31 write 3: ((8 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
record-info: initial base 1076 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1080 tagged-value-array-address
m: (1080 tagged-value-array-address global)
sz: (1080 tagged-value-array-address global)
addr: (1080 tagged-value-array-address global)
addr: initial result: 1080
run: writing to oarg 1031 => (8 tagged-value-array-address)
setm: (8 tagged-value-array-address) <= 1031
sz: (8 tagged-value-array-address)
addr: (8 tagged-value-array-address)
addr: initial result: 8
addr: incrementing by 1075
setm: size of (8 tagged-value-array-address) is 1
setm: (8 tagged-value-array-address): setting 1083 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031))
run: 32 write 4: ((9 integer-address) <- get-address (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
record-info: initial base 1076 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (3 offset) => 1079
run: writing to oarg 1079 => (9 integer-address)
setm: (9 integer-address) <= 1079
sz: (9 integer-address)
addr: (9 integer-address)
addr: initial result: 9
addr: incrementing by 1075
setm: size of (9 integer-address) is 1
setm: (9 integer-address): setting 1084 to 1079
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079))
run: 33 write 5: ((10 tagged-value-address) <- index-address (8 tagged-value-array-address deref) (9 integer-address deref))
array-info: (8 tagged-value-array-address deref) (9 integer-address deref)
addr: (8 tagged-value-array-address deref)
addr: initial result: 8
addr: incrementing by 1075
addr: deref 1083 => 1031
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1075
sz: (1079 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1075
addr: deref 1084 => 1079
array-info: initial base 1031 type ((address t) (elem tagged-value-array) (size 1))
array-info: (8 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1075
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1075
addr: deref 1083 => 1031
array-info: array-len of (8 tagged-value-array-address deref) is 2
index-address: (8 tagged-value-array-address deref) (9 integer-address deref) => 1032
run: writing to oarg 1032 => (10 tagged-value-address)
setm: (10 tagged-value-address) <= 1032
sz: (10 tagged-value-address)
addr: (10 tagged-value-address)
addr: initial result: 10
addr: incrementing by 1075
setm: size of (10 tagged-value-address) is 1
setm: (10 tagged-value-address): setting 1085 to 1032
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032))
run: 34 write 6: ((10 tagged-value-address deref) <- copy (6 tagged-value))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1075
sz: (6 tagged-value)
run: writing to oarg #(tagged record (integer-address 1041 . nil)) => (10 tagged-value-address deref)
setm: (10 tagged-value-address deref) <= #(tagged record (integer-address 1041 . nil))
sz: (10 tagged-value-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1075
sz: (1032 tagged-value)
addr: (10 tagged-value-address deref)
addr: initial result: 10
addr: incrementing by 1075
addr: deref 1085 => 1032
setm: size of (10 tagged-value-address deref) is 2
setm: (10 tagged-value-address deref): setting 1032 to integer-address
setm: (10 tagged-value-address deref): setting 1033 to 1041
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032))
run: 35 write 7: ((9 integer-address deref) <- add (9 integer-address deref) (1 literal))
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1075
sz: (1079 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1075
addr: deref 1084 => 1079
add: 0 1
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1075
sz: (1079 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1075
addr: deref 1084 => 1079
run: writing to oarg 1 => (9 integer-address deref)
setm: (9 integer-address deref) <= 1
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1075
sz: (1079 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1075
addr: deref 1084 => 1079
setm: size of (9 integer-address deref) is 1
setm: (9 integer-address deref): setting 1079 to 1
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032))
run: 36 write 8: ((11 integer) <- len (8 tagged-value-array-address deref))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1075
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1075
addr: deref 1083 => 1031
run: writing to oarg 2 => (11 integer)
setm: (11 integer) <= 2
sz: (11 integer)
addr: (11 integer)
addr: initial result: 11
addr: incrementing by 1075
setm: size of (11 integer) is 1
setm: (11 integer): setting 1086 to 2
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2))
run: 37 write 9: ((12 boolean) <- lt (9 integer-address deref) (11 integer))
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1075
sz: (1079 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1075
addr: deref 1084 => 1079
m: (11 integer)
sz: (11 integer)
addr: (11 integer)
addr: initial result: 11
addr: incrementing by 1075
run: writing to oarg t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1075
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1087 to t
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t))
run: 38 write 10: (jump-if (12 boolean) (1 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1075
jump: checking that t is t
jump: jumping to 12
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t))
run: 39 write 12: ((13 boolean-address) <- get-address (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
record-info: initial base 1076 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (0 offset) => 1076
run: writing to oarg 1076 => (13 boolean-address)
setm: (13 boolean-address) <= 1076
sz: (13 boolean-address)
addr: (13 boolean-address)
addr: initial result: 13
addr: incrementing by 1075
setm: size of (13 boolean-address) is 1
setm: (13 boolean-address): setting 1088 to 1076
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076))
run: 40 write 13: ((13 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (13 boolean-address deref)
setm: (13 boolean-address deref) <= t
sz: (13 boolean-address deref)
m: (13 location)
sz: (13 location)
addr: (13 location)
addr: initial result: 13
addr: incrementing by 1075
sz: (1076 boolean)
addr: (13 boolean-address deref)
addr: initial result: 13
addr: incrementing by 1075
addr: deref 1088 => 1076
setm: size of (13 boolean-address deref) is 1
setm: (13 boolean-address deref): setting 1076 to t
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076))
run: 41 write 14: (reply (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
sz: (1 channel)
reply: ((1 channel)) ((1 channel-address deref))
reply: #(tagged record (t nil 0 1 1031 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t nil 0 1 1031 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1036 to t
setm: (1 channel-address deref): setting 1037 to nil
setm: (1 channel-address deref): setting 1038 to 0
setm: (1 channel-address deref): setting 1039 to 1
setm: (1 channel-address deref): setting 1040 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076))
run: 42 main 5: (_ (1 channel-address deref) <- read (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076))
run: 43 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1106 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30))
run: 44 read 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 1 1031 . nil)))
setm: (1 channel) <= #(tagged record (t nil 0 1 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
setm: size of (1 channel) is 5
setm: (1 channel): setting 1107 to t
setm: (1 channel): setting 1108 to nil
setm: (1 channel): setting 1109 to 0
setm: (1 channel): setting 1110 to 1
setm: (1 channel): setting 1111 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 0) (1110 1) (1111 1031))
run: 45 read 2: ((6 integer-address) <- get-address (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (2 offset) => 1109
run: writing to oarg 1109 => (6 integer-address)
setm: (6 integer-address) <= 1109
sz: (6 integer-address)
addr: (6 integer-address)
addr: initial result: 6
addr: incrementing by 1106
setm: size of (6 integer-address) is 1
setm: (6 integer-address): setting 1112 to 1109
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 0) (1110 1) (1111 1031) (1112 1109))
run: 46 read 3: ((7 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1111 tagged-value-array-address
m: (1111 tagged-value-array-address global)
sz: (1111 tagged-value-array-address global)
addr: (1111 tagged-value-array-address global)
addr: initial result: 1111
run: writing to oarg 1031 => (7 tagged-value-array-address)
setm: (7 tagged-value-array-address) <= 1031
sz: (7 tagged-value-array-address)
addr: (7 tagged-value-array-address)
addr: initial result: 7
addr: incrementing by 1106
setm: size of (7 tagged-value-array-address) is 1
setm: (7 tagged-value-array-address): setting 1113 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 0) (1110 1) (1111 1031) (1112 1109) (1113 1031))
run: 47 read 4: ((8 tagged-value) <- index (7 tagged-value-array-address deref) (6 integer-address deref))
array-info: (7 tagged-value-array-address deref) (6 integer-address deref)
addr: (7 tagged-value-array-address deref)
addr: initial result: 7
addr: incrementing by 1106
addr: deref 1113 => 1031
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1106
sz: (1109 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1106
addr: deref 1112 => 1109
array-info: initial base 1031 type ((address t) (elem tagged-value-array) (size 1))
array-info: (7 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (7 tagged-value-array-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1106
sz: (1031 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1106
addr: deref 1113 => 1031
array-info: array-len of (7 tagged-value-array-address deref) is 2
index: (7 tagged-value-array-address deref) (6 integer-address deref) => 1032 tagged-value
m: (1032 tagged-value global)
sz: (1032 tagged-value global)
addr: (1032 tagged-value global)
addr: initial result: 1032
sz: (1032 tagged-value global)
run: writing to oarg #(tagged record (integer-address 1041 . nil)) => (8 tagged-value)
setm: (8 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (8 tagged-value)
addr: (8 tagged-value)
addr: initial result: 8
addr: incrementing by 1106
setm: size of (8 tagged-value) is 2
setm: (8 tagged-value): setting 1114 to integer-address
setm: (8 tagged-value): setting 1115 to 1041
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 0) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041))
run: 48 read 5: ((6 integer-address deref) <- add (6 integer-address deref) (1 literal))
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1106
sz: (1109 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1106
addr: deref 1112 => 1109
add: 0 1
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1106
sz: (1109 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1106
addr: deref 1112 => 1109
run: writing to oarg 1 => (6 integer-address deref)
setm: (6 integer-address deref) <= 1
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1106
sz: (1109 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1106
addr: deref 1112 => 1109
setm: size of (6 integer-address deref) is 1
setm: (6 integer-address deref): setting 1109 to 1
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041))
run: 49 read 6: ((10 integer) <- len (7 tagged-value-array-address deref))
array-len: (7 tagged-value-array-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1106
sz: (1031 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1106
addr: deref 1113 => 1031
run: writing to oarg 2 => (10 integer)
setm: (10 integer) <= 2
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1106
setm: size of (10 integer) is 1
setm: (10 integer): setting 1116 to 2
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2))
run: 50 read 7: ((11 boolean) <- lt (6 integer-address deref) (10 integer))
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1106
sz: (1109 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1106
addr: deref 1112 => 1109
m: (10 integer)
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1106
run: writing to oarg t => (11 boolean)
setm: (11 boolean) <= t
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1106
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1117 to t
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t))
run: 51 read 8: (jump-if (11 boolean) (1 offset))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1106
jump: checking that t is t
jump: jumping to 10
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t))
run: 52 read 10: ((12 boolean-address) <- get-address (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (1 offset) => 1108
run: writing to oarg 1108 => (12 boolean-address)
setm: (12 boolean-address) <= 1108
sz: (12 boolean-address)
addr: (12 boolean-address)
addr: initial result: 12
addr: incrementing by 1106
setm: size of (12 boolean-address) is 1
setm: (12 boolean-address): setting 1118 to 1108
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108))
run: 53 read 11: ((12 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (12 boolean-address deref)
setm: (12 boolean-address deref) <= t
sz: (12 boolean-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1106
sz: (1108 boolean)
addr: (12 boolean-address deref)
addr: initial result: 12
addr: incrementing by 1106
addr: deref 1118 => 1108
setm: size of (12 boolean-address deref) is 1
setm: (12 boolean-address deref): setting 1108 to t
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1038 0) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108))
run: 54 read 12: (reply (8 tagged-value) (1 channel))
m: (8 tagged-value)
sz: (8 tagged-value)
addr: (8 tagged-value)
addr: initial result: 8
addr: incrementing by 1106
sz: (8 tagged-value)
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
sz: (1 channel)
reply: ((8 tagged-value) (1 channel)) (_ (1 channel-address deref))
reply: #(tagged record (t t 1 1 1031 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 1 1 1031 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1036 to t
setm: (1 channel-address deref): setting 1037 to t
setm: (1 channel-address deref): setting 1038 to 1
setm: (1 channel-address deref): setting 1039 to 1
setm: (1 channel-address deref): setting 1040 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108))
run: 55 main 6: ((4 integer) <- get (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
record-info: initial base 1036 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (2 offset) => 1038 integer
m: (1038 integer global)
sz: (1038 integer global)
addr: (1038 integer global)
addr: initial result: 1038
run: writing to oarg 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
setm: size of (4 integer) is 1
setm: (4 integer): setting 4 to 1
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108))
run: 56 main 7: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1073
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108))
run: 57 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1137 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30))
run: 58 write 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 1 1031 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (1 channel) <= #(tagged record (t t 1 1 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
setm: size of (1 channel) is 5
setm: (1 channel): setting 1138 to t
setm: (1 channel): setting 1139 to t
setm: (1 channel): setting 1140 to 1
setm: (1 channel): setting 1141 to 1
setm: (1 channel): setting 1142 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1031))
run: 59 write 2: ((6 tagged-value) <- arg)
arg: nil 1 (#(tagged record (t t 1 1 1031 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (6 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1137
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1143 to integer-address
setm: (6 tagged-value): setting 1144 to 1041
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1031) (1143 integer-address) (1144 1041))
run: 60 write 3: ((8 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
record-info: initial base 1138 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1142 tagged-value-array-address
m: (1142 tagged-value-array-address global)
sz: (1142 tagged-value-array-address global)
addr: (1142 tagged-value-array-address global)
addr: initial result: 1142
run: writing to oarg 1031 => (8 tagged-value-array-address)
setm: (8 tagged-value-array-address) <= 1031
sz: (8 tagged-value-array-address)
addr: (8 tagged-value-array-address)
addr: initial result: 8
addr: incrementing by 1137
setm: size of (8 tagged-value-array-address) is 1
setm: (8 tagged-value-array-address): setting 1145 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031))
run: 61 write 4: ((9 integer-address) <- get-address (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
record-info: initial base 1138 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (3 offset) => 1141
run: writing to oarg 1141 => (9 integer-address)
setm: (9 integer-address) <= 1141
sz: (9 integer-address)
addr: (9 integer-address)
addr: initial result: 9
addr: incrementing by 1137
setm: size of (9 integer-address) is 1
setm: (9 integer-address): setting 1146 to 1141
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141))
run: 62 write 5: ((10 tagged-value-address) <- index-address (8 tagged-value-array-address deref) (9 integer-address deref))
array-info: (8 tagged-value-array-address deref) (9 integer-address deref)
addr: (8 tagged-value-array-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1031
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1141 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1141
array-info: initial base 1031 type ((address t) (elem tagged-value-array) (size 1))
array-info: (8 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1137
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1031
array-info: array-len of (8 tagged-value-array-address deref) is 2
index-address: (8 tagged-value-array-address deref) (9 integer-address deref) => 1034
run: writing to oarg 1034 => (10 tagged-value-address)
setm: (10 tagged-value-address) <= 1034
sz: (10 tagged-value-address)
addr: (10 tagged-value-address)
addr: initial result: 10
addr: incrementing by 1137
setm: size of (10 tagged-value-address) is 1
setm: (10 tagged-value-address): setting 1147 to 1034
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034))
run: 63 write 6: ((10 tagged-value-address deref) <- copy (6 tagged-value))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1137
sz: (6 tagged-value)
run: writing to oarg #(tagged record (integer-address 1041 . nil)) => (10 tagged-value-address deref)
setm: (10 tagged-value-address deref) <= #(tagged record (integer-address 1041 . nil))
sz: (10 tagged-value-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1137
sz: (1034 tagged-value)
addr: (10 tagged-value-address deref)
addr: initial result: 10
addr: incrementing by 1137
addr: deref 1147 => 1034
setm: size of (10 tagged-value-address deref) is 2
setm: (10 tagged-value-address deref): setting 1034 to integer-address
setm: (10 tagged-value-address deref): setting 1035 to 1041
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034))
run: 64 write 7: ((9 integer-address deref) <- add (9 integer-address deref) (1 literal))
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1141 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1141
add: 1 1
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1141 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1141
run: writing to oarg 2 => (9 integer-address deref)
setm: (9 integer-address deref) <= 2
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1141 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1141
setm: size of (9 integer-address deref) is 1
setm: (9 integer-address deref): setting 1141 to 2
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 2) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034))
run: 65 write 8: ((11 integer) <- len (8 tagged-value-array-address deref))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1137
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1031
run: writing to oarg 2 => (11 integer)
setm: (11 integer) <= 2
sz: (11 integer)
addr: (11 integer)
addr: initial result: 11
addr: incrementing by 1137
setm: size of (11 integer) is 1
setm: (11 integer): setting 1148 to 2
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 2) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2))
run: 66 write 9: ((12 boolean) <- lt (9 integer-address deref) (11 integer))
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1141 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1141
m: (11 integer)
sz: (11 integer)
addr: (11 integer)
addr: initial result: 11
addr: incrementing by 1137
run: writing to oarg nil => (12 boolean)
setm: (12 boolean) <= nil
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1137
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1149 to nil
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 2) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2))
run: 67 write 10: (jump-if (12 boolean) (1 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1137
jump: checking that nil is t
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 2) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2))
run: 68 write 11: ((9 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (9 integer-address deref)
setm: (9 integer-address deref) <= 0
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1141 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1141
setm: size of (9 integer-address deref) is 1
setm: (9 integer-address deref): setting 1141 to 0
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2))
run: 69 write 12: ((13 boolean-address) <- get-address (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
record-info: initial base 1138 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (0 offset) => 1138
run: writing to oarg 1138 => (13 boolean-address)
setm: (13 boolean-address) <= 1138
sz: (13 boolean-address)
addr: (13 boolean-address)
addr: initial result: 13
addr: incrementing by 1137
setm: size of (13 boolean-address) is 1
setm: (13 boolean-address): setting 1150 to 1138
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138))
run: 70 write 13: ((13 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (13 boolean-address deref)
setm: (13 boolean-address deref) <= t
sz: (13 boolean-address deref)
m: (13 location)
sz: (13 location)
addr: (13 location)
addr: initial result: 13
addr: incrementing by 1137
sz: (1138 boolean)
addr: (13 boolean-address deref)
addr: initial result: 13
addr: incrementing by 1137
addr: deref 1150 => 1138
setm: size of (13 boolean-address deref) is 1
setm: (13 boolean-address deref): setting 1138 to t
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 1) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138))
run: 71 write 14: (reply (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
sz: (1 channel)
reply: ((1 channel)) ((1 channel-address deref))
reply: #(tagged record (t t 1 0 1031 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 1 0 1031 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1036 to t
setm: (1 channel-address deref): setting 1037 to t
setm: (1 channel-address deref): setting 1038 to 1
setm: (1 channel-address deref): setting 1039 to 0
setm: (1 channel-address deref): setting 1040 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138))
run: 72 main 8: (_ (1 channel-address deref) <- read (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138))
run: 73 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1168 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30))
run: 74 read 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 0 1031 . nil)))
setm: (1 channel) <= #(tagged record (t t 1 0 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
setm: size of (1 channel) is 5
setm: (1 channel): setting 1169 to t
setm: (1 channel): setting 1170 to t
setm: (1 channel): setting 1171 to 1
setm: (1 channel): setting 1172 to 0
setm: (1 channel): setting 1173 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 1) (1172 0) (1173 1031))
run: 75 read 2: ((6 integer-address) <- get-address (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
record-info: initial base 1169 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (2 offset) => 1171
run: writing to oarg 1171 => (6 integer-address)
setm: (6 integer-address) <= 1171
sz: (6 integer-address)
addr: (6 integer-address)
addr: initial result: 6
addr: incrementing by 1168
setm: size of (6 integer-address) is 1
setm: (6 integer-address): setting 1174 to 1171
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 1) (1172 0) (1173 1031) (1174 1171))
run: 76 read 3: ((7 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
record-info: initial base 1169 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1173 tagged-value-array-address
m: (1173 tagged-value-array-address global)
sz: (1173 tagged-value-array-address global)
addr: (1173 tagged-value-array-address global)
addr: initial result: 1173
run: writing to oarg 1031 => (7 tagged-value-array-address)
setm: (7 tagged-value-array-address) <= 1031
sz: (7 tagged-value-array-address)
addr: (7 tagged-value-array-address)
addr: initial result: 7
addr: incrementing by 1168
setm: size of (7 tagged-value-array-address) is 1
setm: (7 tagged-value-array-address): setting 1175 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 1) (1172 0) (1173 1031) (1174 1171) (1175 1031))
run: 77 read 4: ((8 tagged-value) <- index (7 tagged-value-array-address deref) (6 integer-address deref))
array-info: (7 tagged-value-array-address deref) (6 integer-address deref)
addr: (7 tagged-value-array-address deref)
addr: initial result: 7
addr: incrementing by 1168
addr: deref 1175 => 1031
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1168
sz: (1171 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1168
addr: deref 1174 => 1171
array-info: initial base 1031 type ((address t) (elem tagged-value-array) (size 1))
array-info: (7 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (7 tagged-value-array-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1168
sz: (1031 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1168
addr: deref 1175 => 1031
array-info: array-len of (7 tagged-value-array-address deref) is 2
index: (7 tagged-value-array-address deref) (6 integer-address deref) => 1034 tagged-value
m: (1034 tagged-value global)
sz: (1034 tagged-value global)
addr: (1034 tagged-value global)
addr: initial result: 1034
sz: (1034 tagged-value global)
run: writing to oarg #(tagged record (integer-address 1041 . nil)) => (8 tagged-value)
setm: (8 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (8 tagged-value)
addr: (8 tagged-value)
addr: initial result: 8
addr: incrementing by 1168
setm: size of (8 tagged-value) is 2
setm: (8 tagged-value): setting 1176 to integer-address
setm: (8 tagged-value): setting 1177 to 1041
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 1) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041))
run: 78 read 5: ((6 integer-address deref) <- add (6 integer-address deref) (1 literal))
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1168
sz: (1171 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1168
addr: deref 1174 => 1171
add: 1 1
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1168
sz: (1171 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1168
addr: deref 1174 => 1171
run: writing to oarg 2 => (6 integer-address deref)
setm: (6 integer-address deref) <= 2
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1168
sz: (1171 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1168
addr: deref 1174 => 1171
setm: size of (6 integer-address deref) is 1
setm: (6 integer-address deref): setting 1171 to 2
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 2) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041))
run: 79 read 6: ((10 integer) <- len (7 tagged-value-array-address deref))
array-len: (7 tagged-value-array-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1168
sz: (1031 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1168
addr: deref 1175 => 1031
run: writing to oarg 2 => (10 integer)
setm: (10 integer) <= 2
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1168
setm: size of (10 integer) is 1
setm: (10 integer): setting 1178 to 2
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 2) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041) (1178 2))
run: 80 read 7: ((11 boolean) <- lt (6 integer-address deref) (10 integer))
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1168
sz: (1171 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1168
addr: deref 1174 => 1171
m: (10 integer)
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1168
run: writing to oarg nil => (11 boolean)
setm: (11 boolean) <= nil
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1168
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1179 to nil
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 2) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041) (1178 2))
run: 81 read 8: (jump-if (11 boolean) (1 offset))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1168
jump: checking that nil is t
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 2) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041) (1178 2))
run: 82 read 9: ((6 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (6 integer-address deref)
setm: (6 integer-address deref) <= 0
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1168
sz: (1171 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1168
addr: deref 1174 => 1171
setm: size of (6 integer-address deref) is 1
setm: (6 integer-address deref): setting 1171 to 0
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 0) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041) (1178 2))
run: 83 read 10: ((12 boolean-address) <- get-address (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
record-info: initial base 1169 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (1 offset) => 1170
run: writing to oarg 1170 => (12 boolean-address)
setm: (12 boolean-address) <= 1170
sz: (12 boolean-address)
addr: (12 boolean-address)
addr: initial result: 12
addr: incrementing by 1168
setm: size of (12 boolean-address) is 1
setm: (12 boolean-address): setting 1180 to 1170
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 0) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041) (1178 2) (1180 1170))
run: 84 read 11: ((12 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (12 boolean-address deref)
setm: (12 boolean-address deref) <= t
sz: (12 boolean-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1168
sz: (1170 boolean)
addr: (12 boolean-address deref)
addr: initial result: 12
addr: incrementing by 1168
addr: deref 1180 => 1170
setm: size of (12 boolean-address deref) is 1
setm: (12 boolean-address deref): setting 1170 to t
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 1) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 0) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041) (1178 2) (1180 1170))
run: 85 read 12: (reply (8 tagged-value) (1 channel))
m: (8 tagged-value)
sz: (8 tagged-value)
addr: (8 tagged-value)
addr: initial result: 8
addr: incrementing by 1168
sz: (8 tagged-value)
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
sz: (1 channel)
reply: ((8 tagged-value) (1 channel)) (_ (1 channel-address deref))
reply: #(tagged record (t t 0 0 1031 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 0 0 1031 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1036 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1036 to t
setm: (1 channel-address deref): setting 1037 to t
setm: (1 channel-address deref): setting 1038 to 0
setm: (1 channel-address deref): setting 1039 to 0
setm: (1 channel-address deref): setting 1040 to 1031
run: -- ((1 1036) (2 1041) (3 1073) (4 1) (1000 30) (1001 2) (1002 1031) (1003 1036) (1004 1038) (1005 1039) (1006 1040) (1031 2) (1032 integer-address) (1033 1041) (1034 integer-address) (1035 1041) (1036 t) (1037 t) (1038 0) (1039 0) (1040 1031) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1031) (1081 integer-address) (1082 1041) (1083 1031) (1084 1079) (1085 1032) (1086 2) (1087 t) (1088 1076) (1106 30) (1107 t) (1108 t) (1109 1) (1110 1) (1111 1031) (1112 1109) (1113 1031) (1114 integer-address) (1115 1041) (1116 2) (1117 t) (1118 1108) (1137 30) (1138 t) (1139 t) (1140 1) (1141 0) (1142 1031) (1143 integer-address) (1144 1041) (1145 1031) (1146 1141) (1147 1034) (1148 2) (1150 1138) (1168 30) (1169 t) (1170 t) (1171 0) (1172 0) (1173 1031) (1174 1171) (1175 1031) (1176 integer-address) (1177 1041) (1178 2) (1180 1170))
run: 86 main 9: ((5 integer) <- get (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1036
record-info: initial base 1036 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (2 offset) => 1038 integer
m: (1038 integer global)
sz: (1038 integer global)
addr: (1038 integer global)
addr: initial result: 1038
run: writing to oarg 0 => (5 integer)
setm: (5 integer) <= 0
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
setm: size of (5 integer) is 1
setm: (5 integer): setting 5 to 0
