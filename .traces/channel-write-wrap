c{0: 0 ((1 channel-address) <- new-channel (1 literal)) -- nil
c{0: 1 ((2 integer-address) <- new (integer literal)) -- nil
c{0: 2 ((2 integer-address deref) <- copy (34 literal)) -- nil
c{0: 3 ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) -- nil
c{0: 4 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{0: 5 ((4 integer) <- get (1 channel-address deref) (first-free offset)) -- nil
c{0: 6 (_ (1 channel-address deref) <- read (1 channel-address deref)) -- nil
c{0: 7 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{0: 8 ((5 integer) <- get (1 channel-address deref) (first-free offset)) -- nil
c{1: 0 new-channel ((1 channel-address))
c{1: 1 new ((2 integer-address))
c{1: 2 copy ((2 integer-address deref))
c{1: 3 new-tagged-value ((3 tagged-value-address))
c{1: 4 write ((1 channel-address deref))
c{1: 5 get ((4 integer))
c{1: 6 read (_ (1 channel-address deref))
c{1: 7 write ((1 channel-address deref))
c{1: 8 get ((5 integer))
cn0: ((1 channel-address) <- new-channel (1 literal)) nil nil
maybe-add: (1 literal)
cn0: checking (1 channel-address)
maybe-add: (1 channel-address)
cn0: ((2 integer-address) <- new (integer literal)) nil nil
maybe-add: (integer literal)
cn0: checking (2 integer-address)
maybe-add: (2 integer-address)
cn0: ((2 integer-address deref) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (2 integer-address deref)
maybe-add: (2 integer-address deref)
cn0: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) nil nil
maybe-add: (integer-address literal)
maybe-add: (2 integer-address)
cn0: checking (3 tagged-value-address)
maybe-add: (3 tagged-value-address)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) nil nil
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((4 integer) <- get (1 channel-address deref) (first-free offset)) nil nil
cn0: field-access first-free
cn0: field-access deref
cn0: new field; computing location
cn0: field location 3
cn0: checking (4 integer)
maybe-add: (4 integer)
cn0: (_ (1 channel-address deref) <- read (1 channel-address deref)) ((first-free 3)) ((first-free t))
maybe-add: (1 channel-address deref)
cn0: checking _
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) ((first-free 3)) ((first-free t))
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((5 integer) <- get (1 channel-address deref) (first-free offset)) ((first-free 3)) ((first-free t))
cn0: field-access first-free
cn0: field-access deref
cn0: checking (5 integer)
maybe-add: (5 integer)
cn1: update names ((first-free 3)) ((first-free t))
schedule: main
run: -- nil
run: 1 main 0: ((1 channel-address) <- new-channel (1 literal))
run: -- nil
run: 2 new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-channel 1: ((1 channel-address) <- new (channel literal))
sizeof: channel
sizeof: boolean
sizeof: boolean
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: writing to oarg 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1001 to 1031
run: -- ((1000 30) (1001 1031))
run: 4 new-channel 2: ((2 integer-address) <- get-address (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1000
addr: deref 1001 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (2 offset) => 1033
run: writing to oarg 1033 => (2 integer-address)
setm: (2 integer-address) <= 1033
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
addr: incrementing by 1000
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 1002 to 1033
run: -- ((1000 30) (1001 1031) (1002 1033))
run: 5 new-channel 3: ((2 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (2 integer-address deref)
setm: (2 integer-address deref) <= 0
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
addr: (2 location)
addr: initial result: 2
addr: incrementing by 1000
sz: (1033 integer)
addr: (2 integer-address deref)
addr: initial result: 2
addr: incrementing by 1000
addr: deref 1002 => 1033
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1033 to 0
run: -- ((1000 30) (1001 1031) (1002 1033) (1033 0))
run: 6 new-channel 4: ((3 integer-address) <- get-address (1 channel-address deref) (3 offset))
record-info: (1 channel-address deref) (3 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1000
addr: deref 1001 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (3 offset) => 1034
run: writing to oarg 1034 => (3 integer-address)
setm: (3 integer-address) <= 1034
sz: (3 integer-address)
addr: (3 integer-address)
addr: initial result: 3
addr: incrementing by 1000
setm: size of (3 integer-address) is 1
setm: (3 integer-address): setting 1003 to 1034
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1033 0))
run: 7 new-channel 5: ((3 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (3 integer-address deref)
setm: (3 integer-address deref) <= 0
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1000
sz: (1034 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1034
setm: size of (3 integer-address deref) is 1
setm: (3 integer-address deref): setting 1034 to 0
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1033 0) (1034 0))
run: 8 new-channel 6: ((4 integer) <- arg)
arg: nil 0 (1)
setm: (4 integer) <= 1
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 1
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 1) (1033 0) (1034 0))
run: 9 new-channel 7: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
add: 1 1
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
run: writing to oarg 2 => (4 integer)
setm: (4 integer) <= 2
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 2
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1033 0) (1034 0))
run: 10 new-channel 8: ((5 tagged-value-array-address-address) <- get-address (1 channel-address deref) (4 offset))
record-info: (1 channel-address deref) (4 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: incrementing by 1000
addr: deref 1001 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel-address deref) (4 offset) => 1035
run: writing to oarg 1035 => (5 tagged-value-array-address-address)
setm: (5 tagged-value-array-address-address) <= 1035
sz: (5 tagged-value-array-address-address)
addr: (5 tagged-value-array-address-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 tagged-value-array-address-address) is 1
setm: (5 tagged-value-array-address-address): setting 1005 to 1035
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0))
run: 11 new-channel 9: ((5 tagged-value-array-address-address deref) <- new (tagged-value-array literal) (4 integer))
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1000
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1036 => (5 tagged-value-array-address-address deref)
setm: (5 tagged-value-array-address-address deref) <= 1036
sz: (5 tagged-value-array-address-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1035 tagged-value-array-address)
addr: (5 tagged-value-array-address-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1035
setm: size of (5 tagged-value-array-address-address deref) is 1
setm: (5 tagged-value-array-address-address deref): setting 1035 to 1036
run: -- ((1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2))
run: 12 new-channel 10: (reply (1 channel-address))
m: (1 channel-address)
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
addr: incrementing by 1000
reply: ((1 channel-address)) ((1 channel-address))
reply: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1 to 1031
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2))
run: 13 main 1: ((2 integer-address) <- new (integer literal))
sizeof: integer
run: writing to oarg 1041 => (2 integer-address)
setm: (2 integer-address) <= 1041
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 2 to 1041
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2))
run: 14 main 2: ((2 integer-address deref) <- copy (34 literal))
run: writing to oarg 34 => (2 integer-address deref)
setm: (2 integer-address deref) <= 34
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
addr: (2 location)
addr: initial result: 2
sz: (1041 integer)
addr: (2 integer-address deref)
addr: initial result: 2
addr: deref 2 => 1041
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1041 to 34
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34))
run: 15 main 3: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address))
m: (2 integer-address)
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34))
run: 16 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1042 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30))
run: 17 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer-address 1041)
setm: (1 type) <= integer-address
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
setm: size of (1 type) is 1
setm: (1 type): setting 1043 to integer-address
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address))
run: 18 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
sizeof: integer-address
run: writing to oarg 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1042
setm: size of (2 integer) is 1
setm: (2 integer): setting 1044 to 1
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1))
run: 19 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1042
run: writing to oarg t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1042
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1045 to t
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t))
run: 20 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1042
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t))
run: 21 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1073 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1073
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1042
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1046 to 1073
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073))
run: 22 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1042
addr: deref 1046 => 1073
record-info: initial base 1073 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1073
run: writing to oarg 1073 => (5 location)
setm: (5 location) <= 1073
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1042
setm: size of (5 location) is 1
setm: (5 location): setting 1047 to 1073
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073))
run: 23 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1042
run: writing to oarg integer-address => (5 location deref)
setm: (5 location deref) <= integer-address
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1042
sz: (1073 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1042
addr: deref 1047 => 1073
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1073 to integer-address
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1073 integer-address))
run: 24 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1042
addr: deref 1046 => 1073
record-info: initial base 1073 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1074
run: writing to oarg 1074 => (6 location)
setm: (6 location) <= 1074
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1042
setm: size of (6 location) is 1
setm: (6 location): setting 1048 to 1074
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address))
run: 25 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer-address 1041)
setm: (6 location deref) <= 1041
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1042
sz: (1074 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1042
addr: deref 1048 => 1074
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1074 to 1041
run: -- ((1 1031) (2 1041) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 26 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1042
reply: ((4 tagged-value-address)) ((3 tagged-value-address))
reply: 1073 => (3 tagged-value-address)
setm: (3 tagged-value-address) <= 1073
sz: (3 tagged-value-address)
addr: (3 tagged-value-address)
addr: initial result: 3
setm: size of (3 tagged-value-address) is 1
setm: (3 tagged-value-address): setting 3 to 1073
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 27 main 4: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1073
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041))
run: 28 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1075 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30))
run: 29 write 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1036 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (1 channel) <= #(tagged record (nil nil 0 0 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
setm: size of (1 channel) is 5
setm: (1 channel): setting 1076 to nil
setm: (1 channel): setting 1077 to nil
setm: (1 channel): setting 1078 to 0
setm: (1 channel): setting 1079 to 0
setm: (1 channel): setting 1080 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036))
run: 30 write 2: ((6 tagged-value) <- arg)
arg: nil 1 (#(tagged record (nil nil 0 0 1036 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (6 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1075
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1081 to integer-address
setm: (6 tagged-value): setting 1082 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041))
run: 31 write 3: ((8 boolean) <- full? (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
sz: (1 channel)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041))
run: 32 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1106 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30))
run: 33 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1036 . nil)))
setm: (1 channel) <= #(tagged record (nil nil 0 0 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
setm: size of (1 channel) is 5
setm: (1 channel): setting 1107 to nil
setm: (1 channel): setting 1108 to nil
setm: (1 channel): setting 1109 to 0
setm: (1 channel): setting 1110 to 0
setm: (1 channel): setting 1111 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036))
run: 34 full? 2: ((6 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1110 integer
m: (1110 integer global)
sz: (1110 integer global)
addr: (1110 integer global)
addr: initial result: 1110
run: writing to oarg 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
setm: size of (6 integer) is 1
setm: (6 integer): setting 1112 to 0
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 0))
run: 35 full? 3: ((7 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1111 tagged-value-array-address
m: (1111 tagged-value-array-address global)
sz: (1111 tagged-value-array-address global)
addr: (1111 tagged-value-array-address global)
addr: initial result: 1111
run: writing to oarg 1036 => (7 tagged-value-array-address)
setm: (7 tagged-value-array-address) <= 1036
sz: (7 tagged-value-array-address)
addr: (7 tagged-value-array-address)
addr: initial result: 7
addr: incrementing by 1106
setm: size of (7 tagged-value-array-address) is 1
setm: (7 tagged-value-array-address): setting 1113 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 0) (1113 1036))
run: 36 full? 4: ((8 integer) <- len (7 tagged-value-array-address deref))
array-len: (7 tagged-value-array-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1106
sz: (1036 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1106
addr: deref 1113 => 1036
run: writing to oarg 2 => (8 integer)
setm: (8 integer) <= 2
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1106
setm: size of (8 integer) is 1
setm: (8 integer): setting 1114 to 2
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 0) (1113 1036) (1114 2))
run: 37 full? 5: ((6 integer) <- add (6 integer) (1 literal))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
add: 0 1
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
run: writing to oarg 1 => (6 integer)
setm: (6 integer) <= 1
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
setm: size of (6 integer) is 1
setm: (6 integer): setting 1112 to 1
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2))
run: 38 full? 6: ((9 boolean) <- lt (6 integer) (8 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1106
run: writing to oarg t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1106
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1115 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t))
run: 39 full? 7: (jump-if (9 boolean) (1 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1106
jump: checking that t is t
jump: jumping to 9
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t))
run: 40 full? 9: ((10 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1106
record-info: initial base 1107 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1109 integer
m: (1109 integer global)
sz: (1109 integer global)
addr: (1109 integer global)
addr: initial result: 1109
run: writing to oarg 0 => (10 integer)
setm: (10 integer) <= 0
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1106
setm: size of (10 integer) is 1
setm: (10 integer): setting 1116 to 0
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 41 full? 10: ((11 boolean) <- eq (10 integer) (6 integer))
m: (10 integer)
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1106
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1106
run: writing to oarg nil => (11 boolean)
setm: (11 boolean) <= nil
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1106
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1117 to nil
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 42 full? 11: (reply (11 boolean))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1106
reply: ((11 boolean)) ((8 boolean))
reply: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1075
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1083 to nil
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 43 write 4: (jump-unless (8 boolean) (3 offset))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1075
jump: checking that nil is not t
jump: jumping to 8
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 44 write 8: ((10 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
record-info: initial base 1076 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1080 tagged-value-array-address
m: (1080 tagged-value-array-address global)
sz: (1080 tagged-value-array-address global)
addr: (1080 tagged-value-array-address global)
addr: initial result: 1080
run: writing to oarg 1036 => (10 tagged-value-array-address)
setm: (10 tagged-value-array-address) <= 1036
sz: (10 tagged-value-array-address)
addr: (10 tagged-value-array-address)
addr: initial result: 10
addr: incrementing by 1075
setm: size of (10 tagged-value-array-address) is 1
setm: (10 tagged-value-array-address): setting 1085 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 45 write 9: ((11 integer-address) <- get-address (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
record-info: initial base 1076 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (3 offset) => 1079
run: writing to oarg 1079 => (11 integer-address)
setm: (11 integer-address) <= 1079
sz: (11 integer-address)
addr: (11 integer-address)
addr: initial result: 11
addr: incrementing by 1075
setm: size of (11 integer-address) is 1
setm: (11 integer-address): setting 1086 to 1079
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1086 1079) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 46 write 10: ((12 tagged-value-address) <- index-address (10 tagged-value-array-address deref) (11 integer-address deref))
array-info: (10 tagged-value-array-address deref) (11 integer-address deref)
addr: (10 tagged-value-array-address deref)
addr: initial result: 10
addr: incrementing by 1075
addr: deref 1085 => 1036
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1075
sz: (1079 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1075
addr: deref 1086 => 1079
array-info: initial base 1036 type ((address t) (elem tagged-value-array) (size 1))
array-info: (10 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1075
sz: (1036 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1075
addr: deref 1085 => 1036
array-info: array-len of (10 tagged-value-array-address deref) is 2
index-address: (10 tagged-value-array-address deref) (11 integer-address deref) => 1037
run: writing to oarg 1037 => (12 tagged-value-address)
setm: (12 tagged-value-address) <= 1037
sz: (12 tagged-value-address)
addr: (12 tagged-value-address)
addr: initial result: 12
addr: incrementing by 1075
setm: size of (12 tagged-value-address) is 1
setm: (12 tagged-value-address): setting 1087 to 1037
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1086 1079) (1087 1037) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 47 write 11: ((12 tagged-value-address deref) <- copy (6 tagged-value))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1075
sz: (6 tagged-value)
run: writing to oarg #(tagged record (integer-address 1041 . nil)) => (12 tagged-value-address deref)
setm: (12 tagged-value-address deref) <= #(tagged record (integer-address 1041 . nil))
sz: (12 tagged-value-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1075
sz: (1037 tagged-value)
addr: (12 tagged-value-address deref)
addr: initial result: 12
addr: incrementing by 1075
addr: deref 1087 => 1037
setm: size of (12 tagged-value-address deref) is 2
setm: (12 tagged-value-address deref): setting 1037 to integer-address
setm: (12 tagged-value-address deref): setting 1038 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 0) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1086 1079) (1087 1037) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 48 write 12: ((11 integer-address deref) <- add (11 integer-address deref) (1 literal))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1075
sz: (1079 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1075
addr: deref 1086 => 1079
add: 0 1
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1075
sz: (1079 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1075
addr: deref 1086 => 1079
run: writing to oarg 1 => (11 integer-address deref)
setm: (11 integer-address deref) <= 1
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1075
sz: (1079 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1075
addr: deref 1086 => 1079
setm: size of (11 integer-address deref) is 1
setm: (11 integer-address deref): setting 1079 to 1
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1086 1079) (1087 1037) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 49 write 13: ((13 integer) <- len (10 tagged-value-array-address deref))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1075
sz: (1036 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1075
addr: deref 1085 => 1036
run: writing to oarg 2 => (13 integer)
setm: (13 integer) <= 2
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1075
setm: size of (13 integer) is 1
setm: (13 integer): setting 1088 to 2
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 50 write 14: ((14 boolean) <- lt (11 integer-address deref) (13 integer))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1075
sz: (1079 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1075
addr: deref 1086 => 1079
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1075
run: writing to oarg t => (14 boolean)
setm: (14 boolean) <= t
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1075
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1089 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 51 write 15: (jump-if (14 boolean) (1 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1075
jump: checking that t is t
jump: jumping to 17
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 52 write 17: ((9 boolean-address) <- get-address (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
record-info: initial base 1076 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (0 offset) => 1076
run: writing to oarg 1076 => (9 boolean-address)
setm: (9 boolean-address) <= 1076
sz: (9 boolean-address)
addr: (9 boolean-address)
addr: initial result: 9
addr: incrementing by 1075
setm: size of (9 boolean-address) is 1
setm: (9 boolean-address): setting 1084 to 1076
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 53 write 18: ((9 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (9 boolean-address deref)
setm: (9 boolean-address deref) <= t
sz: (9 boolean-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1075
sz: (1076 boolean)
addr: (9 boolean-address deref)
addr: initial result: 9
addr: incrementing by 1075
addr: deref 1084 => 1076
setm: size of (9 boolean-address deref) is 1
setm: (9 boolean-address deref): setting 1076 to t
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1033 0) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 54 write 19: (reply (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1075
sz: (1 channel)
reply: ((1 channel)) ((1 channel-address deref))
reply: #(tagged record (t nil 0 1 1036 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t nil 0 1 1036 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1031 to t
setm: (1 channel-address deref): setting 1032 to nil
setm: (1 channel-address deref): setting 1033 to 0
setm: (1 channel-address deref): setting 1034 to 1
setm: (1 channel-address deref): setting 1035 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 55 main 5: ((4 integer) <- get (1 channel-address deref) (3 offset))
record-info: (1 channel-address deref) (3 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (3 offset) => 1034 integer
m: (1034 integer global)
sz: (1034 integer global)
addr: (1034 integer global)
addr: initial result: 1034
run: writing to oarg 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
setm: size of (4 integer) is 1
setm: (4 integer): setting 4 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 56 main 6: (_ (1 channel-address deref) <- read (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0))
run: 57 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1137 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30))
run: 58 read 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 1 1036 . nil)))
setm: (1 channel) <= #(tagged record (t nil 0 1 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
setm: size of (1 channel) is 5
setm: (1 channel): setting 1138 to t
setm: (1 channel): setting 1139 to nil
setm: (1 channel): setting 1140 to 0
setm: (1 channel): setting 1141 to 1
setm: (1 channel): setting 1142 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036))
run: 59 read 2: ((6 boolean) <- empty? (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
sz: (1 channel)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036))
run: 60 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1168 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1168 30))
run: 61 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 1 1036 . nil)))
setm: (1 channel) <= #(tagged record (t nil 0 1 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
setm: size of (1 channel) is 5
setm: (1 channel): setting 1169 to t
setm: (1 channel): setting 1170 to nil
setm: (1 channel): setting 1171 to 0
setm: (1 channel): setting 1172 to 1
setm: (1 channel): setting 1173 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036))
run: 62 empty? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
record-info: initial base 1169 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1171 integer
m: (1171 integer global)
sz: (1171 integer global)
addr: (1171 integer global)
addr: initial result: 1171
run: writing to oarg 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1168
setm: size of (6 integer) is 1
setm: (6 integer): setting 1174 to 0
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0))
run: 63 empty? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1168
record-info: initial base 1169 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1172 integer
m: (1172 integer global)
sz: (1172 integer global)
addr: (1172 integer global)
addr: initial result: 1172
run: writing to oarg 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1168
setm: size of (7 integer) is 1
setm: (7 integer): setting 1175 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 64 empty? 4: ((8 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1168
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1168
run: writing to oarg nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1168
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1176 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 65 empty? 5: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1168
reply: ((8 boolean)) ((6 boolean))
reply: nil => (6 boolean)
setm: (6 boolean) <= nil
sz: (6 boolean)
addr: (6 boolean)
addr: initial result: 6
addr: incrementing by 1137
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1143 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 66 read 3: (jump-unless (6 boolean) (3 offset))
m: (6 boolean)
sz: (6 boolean)
addr: (6 boolean)
addr: initial result: 6
addr: incrementing by 1137
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 67 read 7: ((8 integer-address) <- get-address (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
record-info: initial base 1138 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (2 offset) => 1140
run: writing to oarg 1140 => (8 integer-address)
setm: (8 integer-address) <= 1140
sz: (8 integer-address)
addr: (8 integer-address)
addr: initial result: 8
addr: incrementing by 1137
setm: size of (8 integer-address) is 1
setm: (8 integer-address): setting 1145 to 1140
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1145 1140) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 68 read 8: ((9 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
record-info: initial base 1138 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1142 tagged-value-array-address
m: (1142 tagged-value-array-address global)
sz: (1142 tagged-value-array-address global)
addr: (1142 tagged-value-array-address global)
addr: initial result: 1142
run: writing to oarg 1036 => (9 tagged-value-array-address)
setm: (9 tagged-value-array-address) <= 1036
sz: (9 tagged-value-array-address)
addr: (9 tagged-value-array-address)
addr: initial result: 9
addr: incrementing by 1137
setm: size of (9 tagged-value-array-address) is 1
setm: (9 tagged-value-array-address): setting 1146 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1145 1140) (1146 1036) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 69 read 9: ((10 tagged-value) <- index (9 tagged-value-array-address deref) (8 integer-address deref))
array-info: (9 tagged-value-array-address deref) (8 integer-address deref)
addr: (9 tagged-value-array-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1036
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1137
sz: (1140 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1140
array-info: initial base 1036 type ((address t) (elem tagged-value-array) (size 1))
array-info: (9 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (9 tagged-value-array-address deref)
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1036 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1036
array-info: array-len of (9 tagged-value-array-address deref) is 2
index: (9 tagged-value-array-address deref) (8 integer-address deref) => 1037 tagged-value
m: (1037 tagged-value global)
sz: (1037 tagged-value global)
addr: (1037 tagged-value global)
addr: initial result: 1037
sz: (1037 tagged-value global)
run: writing to oarg #(tagged record (integer-address 1041 . nil)) => (10 tagged-value)
setm: (10 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (10 tagged-value)
addr: (10 tagged-value)
addr: initial result: 10
addr: incrementing by 1137
setm: size of (10 tagged-value) is 2
setm: (10 tagged-value): setting 1147 to integer-address
setm: (10 tagged-value): setting 1148 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 0) (1141 1) (1142 1036) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 70 read 10: ((8 integer-address deref) <- add (8 integer-address deref) (1 literal))
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1137
sz: (1140 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1140
add: 0 1
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1137
sz: (1140 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1140
run: writing to oarg 1 => (8 integer-address deref)
setm: (8 integer-address deref) <= 1
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1137
sz: (1140 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1140
setm: size of (8 integer-address deref) is 1
setm: (8 integer-address deref): setting 1140 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 1) (1141 1) (1142 1036) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 71 read 11: ((12 integer) <- len (9 tagged-value-array-address deref))
array-len: (9 tagged-value-array-address deref)
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1137
sz: (1036 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1137
addr: deref 1146 => 1036
run: writing to oarg 2 => (12 integer)
setm: (12 integer) <= 2
sz: (12 integer)
addr: (12 integer)
addr: initial result: 12
addr: incrementing by 1137
setm: size of (12 integer) is 1
setm: (12 integer): setting 1149 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 1) (1141 1) (1142 1036) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 72 read 12: ((13 boolean) <- lt (8 integer-address deref) (12 integer))
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1137
sz: (1140 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1137
addr: deref 1145 => 1140
m: (12 integer)
sz: (12 integer)
addr: (12 integer)
addr: initial result: 12
addr: incrementing by 1137
run: writing to oarg t => (13 boolean)
setm: (13 boolean) <= t
sz: (13 boolean)
addr: (13 boolean)
addr: initial result: 13
addr: incrementing by 1137
setm: size of (13 boolean) is 1
setm: (13 boolean): setting 1150 to t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 1) (1141 1) (1142 1036) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 73 read 13: (jump-if (13 boolean) (1 offset))
m: (13 boolean)
sz: (13 boolean)
addr: (13 boolean)
addr: initial result: 13
addr: incrementing by 1137
jump: checking that t is t
jump: jumping to 15
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 1) (1141 1) (1142 1036) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 74 read 15: ((7 boolean-address) <- get-address (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
record-info: initial base 1138 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (1 offset) => 1139
run: writing to oarg 1139 => (7 boolean-address)
setm: (7 boolean-address) <= 1139
sz: (7 boolean-address)
addr: (7 boolean-address)
addr: initial result: 7
addr: incrementing by 1137
setm: size of (7 boolean-address) is 1
setm: (7 boolean-address): setting 1144 to 1139
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 75 read 16: ((7 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (7 boolean-address deref)
setm: (7 boolean-address deref) <= t
sz: (7 boolean-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1137
sz: (1139 boolean)
addr: (7 boolean-address deref)
addr: initial result: 7
addr: incrementing by 1137
addr: deref 1144 => 1139
setm: size of (7 boolean-address deref) is 1
setm: (7 boolean-address deref): setting 1139 to t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1033 0) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 76 read 17: (reply (10 tagged-value) (1 channel))
m: (10 tagged-value)
sz: (10 tagged-value)
addr: (10 tagged-value)
addr: initial result: 10
addr: incrementing by 1137
sz: (10 tagged-value)
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1137
sz: (1 channel)
reply: ((10 tagged-value) (1 channel)) (_ (1 channel-address deref))
reply: #(tagged record (t t 1 1 1036 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 1 1 1036 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1031 to t
setm: (1 channel-address deref): setting 1032 to t
setm: (1 channel-address deref): setting 1033 to 1
setm: (1 channel-address deref): setting 1034 to 1
setm: (1 channel-address deref): setting 1035 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 77 main 7: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1073
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1073 tagged-value)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1))
run: 78 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1199 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30))
run: 79 write 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 1 1036 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (1 channel) <= #(tagged record (t t 1 1 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
setm: size of (1 channel) is 5
setm: (1 channel): setting 1200 to t
setm: (1 channel): setting 1201 to t
setm: (1 channel): setting 1202 to 1
setm: (1 channel): setting 1203 to 1
setm: (1 channel): setting 1204 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036))
run: 80 write 2: ((6 tagged-value) <- arg)
arg: nil 1 (#(tagged record (t t 1 1 1036 . nil)) #(tagged record (integer-address 1041 . nil)))
setm: (6 tagged-value) <= #(tagged record (integer-address 1041 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1199
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1205 to integer-address
setm: (6 tagged-value): setting 1206 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041))
run: 81 write 3: ((8 boolean) <- full? (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
sz: (1 channel)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041))
run: 82 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1230 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30))
run: 83 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 1 1036 . nil)))
setm: (1 channel) <= #(tagged record (t t 1 1 1036 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1230
setm: size of (1 channel) is 5
setm: (1 channel): setting 1231 to t
setm: (1 channel): setting 1232 to t
setm: (1 channel): setting 1233 to 1
setm: (1 channel): setting 1234 to 1
setm: (1 channel): setting 1235 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036))
run: 84 full? 2: ((6 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1230
record-info: initial base 1231 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1234 integer
m: (1234 integer global)
sz: (1234 integer global)
addr: (1234 integer global)
addr: initial result: 1234
run: writing to oarg 1 => (6 integer)
setm: (6 integer) <= 1
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1230
setm: size of (6 integer) is 1
setm: (6 integer): setting 1236 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 1))
run: 85 full? 3: ((7 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1230
record-info: initial base 1231 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1235 tagged-value-array-address
m: (1235 tagged-value-array-address global)
sz: (1235 tagged-value-array-address global)
addr: (1235 tagged-value-array-address global)
addr: initial result: 1235
run: writing to oarg 1036 => (7 tagged-value-array-address)
setm: (7 tagged-value-array-address) <= 1036
sz: (7 tagged-value-array-address)
addr: (7 tagged-value-array-address)
addr: initial result: 7
addr: incrementing by 1230
setm: size of (7 tagged-value-array-address) is 1
setm: (7 tagged-value-array-address): setting 1237 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 1) (1237 1036))
run: 86 full? 4: ((8 integer) <- len (7 tagged-value-array-address deref))
array-len: (7 tagged-value-array-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1230
sz: (1036 integer)
addr: (7 integer-address deref)
addr: initial result: 7
addr: incrementing by 1230
addr: deref 1237 => 1036
run: writing to oarg 2 => (8 integer)
setm: (8 integer) <= 2
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1230
setm: size of (8 integer) is 1
setm: (8 integer): setting 1238 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 1) (1237 1036) (1238 2))
run: 87 full? 5: ((6 integer) <- add (6 integer) (1 literal))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1230
add: 1 1
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1230
run: writing to oarg 2 => (6 integer)
setm: (6 integer) <= 2
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1230
setm: size of (6 integer) is 1
setm: (6 integer): setting 1236 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 2) (1237 1036) (1238 2))
run: 88 full? 6: ((9 boolean) <- lt (6 integer) (8 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1230
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1230
run: writing to oarg nil => (9 boolean)
setm: (9 boolean) <= nil
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1230
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1239 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 2) (1237 1036) (1238 2))
run: 89 full? 7: (jump-if (9 boolean) (1 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1230
jump: checking that nil is t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 2) (1237 1036) (1238 2))
run: 90 full? 8: ((6 integer) <- copy (0 literal))
run: writing to oarg 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1230
setm: size of (6 integer) is 1
setm: (6 integer): setting 1236 to 0
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2))
run: 91 full? 9: ((10 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1230
record-info: initial base 1231 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1233 integer
m: (1233 integer global)
sz: (1233 integer global)
addr: (1233 integer global)
addr: initial result: 1233
run: writing to oarg 1 => (10 integer)
setm: (10 integer) <= 1
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1230
setm: size of (10 integer) is 1
setm: (10 integer): setting 1240 to 1
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 92 full? 10: ((11 boolean) <- eq (10 integer) (6 integer))
m: (10 integer)
sz: (10 integer)
addr: (10 integer)
addr: initial result: 10
addr: incrementing by 1230
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1230
run: writing to oarg nil => (11 boolean)
setm: (11 boolean) <= nil
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1230
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1241 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 93 full? 11: (reply (11 boolean))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1230
reply: ((11 boolean)) ((8 boolean))
reply: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1199
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1207 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 94 write 4: (jump-unless (8 boolean) (3 offset))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1199
jump: checking that nil is not t
jump: jumping to 8
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 95 write 8: ((10 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
record-info: initial base 1200 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1204 tagged-value-array-address
m: (1204 tagged-value-array-address global)
sz: (1204 tagged-value-array-address global)
addr: (1204 tagged-value-array-address global)
addr: initial result: 1204
run: writing to oarg 1036 => (10 tagged-value-array-address)
setm: (10 tagged-value-array-address) <= 1036
sz: (10 tagged-value-array-address)
addr: (10 tagged-value-array-address)
addr: initial result: 10
addr: incrementing by 1199
setm: size of (10 tagged-value-array-address) is 1
setm: (10 tagged-value-array-address): setting 1209 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 96 write 9: ((11 integer-address) <- get-address (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
record-info: initial base 1200 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (3 offset) => 1203
run: writing to oarg 1203 => (11 integer-address)
setm: (11 integer-address) <= 1203
sz: (11 integer-address)
addr: (11 integer-address)
addr: initial result: 11
addr: incrementing by 1199
setm: size of (11 integer-address) is 1
setm: (11 integer-address): setting 1210 to 1203
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 97 write 10: ((12 tagged-value-address) <- index-address (10 tagged-value-array-address deref) (11 integer-address deref))
array-info: (10 tagged-value-array-address deref) (11 integer-address deref)
addr: (10 tagged-value-array-address deref)
addr: initial result: 10
addr: incrementing by 1199
addr: deref 1209 => 1036
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1199
sz: (1203 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1199
addr: deref 1210 => 1203
array-info: initial base 1036 type ((address t) (elem tagged-value-array) (size 1))
array-info: (10 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1199
sz: (1036 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1199
addr: deref 1209 => 1036
array-info: array-len of (10 tagged-value-array-address deref) is 2
index-address: (10 tagged-value-array-address deref) (11 integer-address deref) => 1039
run: writing to oarg 1039 => (12 tagged-value-address)
setm: (12 tagged-value-address) <= 1039
sz: (12 tagged-value-address)
addr: (12 tagged-value-address)
addr: initial result: 12
addr: incrementing by 1199
setm: size of (12 tagged-value-address) is 1
setm: (12 tagged-value-address): setting 1211 to 1039
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1211 1039) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 98 write 11: ((12 tagged-value-address deref) <- copy (6 tagged-value))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1199
sz: (6 tagged-value)
run: writing to oarg #(tagged record (integer-address 1041 . nil)) => (12 tagged-value-address deref)
setm: (12 tagged-value-address deref) <= #(tagged record (integer-address 1041 . nil))
sz: (12 tagged-value-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1199
sz: (1039 tagged-value)
addr: (12 tagged-value-address deref)
addr: initial result: 12
addr: incrementing by 1199
addr: deref 1211 => 1039
setm: size of (12 tagged-value-address deref) is 2
setm: (12 tagged-value-address deref): setting 1039 to integer-address
setm: (12 tagged-value-address deref): setting 1040 to 1041
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 1) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1211 1039) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 99 write 12: ((11 integer-address deref) <- add (11 integer-address deref) (1 literal))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1199
sz: (1203 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1199
addr: deref 1210 => 1203
add: 1 1
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1199
sz: (1203 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1199
addr: deref 1210 => 1203
run: writing to oarg 2 => (11 integer-address deref)
setm: (11 integer-address deref) <= 2
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1199
sz: (1203 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1199
addr: deref 1210 => 1203
setm: size of (11 integer-address deref) is 1
setm: (11 integer-address deref): setting 1203 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 2) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1211 1039) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 100 write 13: ((13 integer) <- len (10 tagged-value-array-address deref))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1199
sz: (1036 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1199
addr: deref 1209 => 1036
run: writing to oarg 2 => (13 integer)
setm: (13 integer) <= 2
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1199
setm: size of (13 integer) is 1
setm: (13 integer): setting 1212 to 2
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 2) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1211 1039) (1212 2) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 101 write 14: ((14 boolean) <- lt (11 integer-address deref) (13 integer))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1199
sz: (1203 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1199
addr: deref 1210 => 1203
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1199
run: writing to oarg nil => (14 boolean)
setm: (14 boolean) <= nil
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1199
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1213 to nil
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 2) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1211 1039) (1212 2) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 102 write 15: (jump-if (14 boolean) (1 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1199
jump: checking that nil is t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 2) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1211 1039) (1212 2) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 103 write 16: ((11 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (11 integer-address deref)
setm: (11 integer-address deref) <= 0
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1199
sz: (1203 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1199
addr: deref 1210 => 1203
setm: size of (11 integer-address deref) is 1
setm: (11 integer-address deref): setting 1203 to 0
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 0) (1204 1036) (1205 integer-address) (1206 1041) (1209 1036) (1210 1203) (1211 1039) (1212 2) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 104 write 17: ((9 boolean-address) <- get-address (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
record-info: initial base 1200 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (0 offset) => 1200
run: writing to oarg 1200 => (9 boolean-address)
setm: (9 boolean-address) <= 1200
sz: (9 boolean-address)
addr: (9 boolean-address)
addr: initial result: 9
addr: incrementing by 1199
setm: size of (9 boolean-address) is 1
setm: (9 boolean-address): setting 1208 to 1200
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 0) (1204 1036) (1205 integer-address) (1206 1041) (1208 1200) (1209 1036) (1210 1203) (1211 1039) (1212 2) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 105 write 18: ((9 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (9 boolean-address deref)
setm: (9 boolean-address deref) <= t
sz: (9 boolean-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1199
sz: (1200 boolean)
addr: (9 boolean-address deref)
addr: initial result: 9
addr: incrementing by 1199
addr: deref 1208 => 1200
setm: size of (9 boolean-address deref) is 1
setm: (9 boolean-address deref): setting 1200 to t
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 1) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 0) (1204 1036) (1205 integer-address) (1206 1041) (1208 1200) (1209 1036) (1210 1203) (1211 1039) (1212 2) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 106 write 19: (reply (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1199
sz: (1 channel)
reply: ((1 channel)) ((1 channel-address deref))
reply: #(tagged record (t t 1 0 1036 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 1 0 1036 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1031 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1031 to t
setm: (1 channel-address deref): setting 1032 to t
setm: (1 channel-address deref): setting 1033 to 1
setm: (1 channel-address deref): setting 1034 to 0
setm: (1 channel-address deref): setting 1035 to 1036
run: -- ((1 1031) (2 1041) (3 1073) (4 1) (1000 30) (1001 1031) (1002 1033) (1003 1034) (1004 2) (1005 1035) (1031 t) (1032 t) (1033 1) (1034 0) (1035 1036) (1036 2) (1037 integer-address) (1038 1041) (1039 integer-address) (1040 1041) (1041 34) (1042 30) (1043 integer-address) (1044 1) (1045 t) (1046 1073) (1047 1073) (1048 1074) (1073 integer-address) (1074 1041) (1075 30) (1076 t) (1078 0) (1079 1) (1080 1036) (1081 integer-address) (1082 1041) (1084 1076) (1085 1036) (1086 1079) (1087 1037) (1088 2) (1089 t) (1106 30) (1109 0) (1110 0) (1111 1036) (1112 1) (1113 1036) (1114 2) (1115 t) (1116 0) (1137 30) (1138 t) (1139 t) (1140 1) (1141 1) (1142 1036) (1144 1139) (1145 1140) (1146 1036) (1147 integer-address) (1148 1041) (1149 2) (1150 t) (1168 30) (1169 t) (1171 0) (1172 1) (1173 1036) (1174 0) (1175 1) (1199 30) (1200 t) (1201 t) (1202 1) (1203 0) (1204 1036) (1205 integer-address) (1206 1041) (1208 1200) (1209 1036) (1210 1203) (1211 1039) (1212 2) (1230 30) (1231 t) (1232 t) (1233 1) (1234 1) (1235 1036) (1236 0) (1237 1036) (1238 2) (1240 1))
run: 107 main 8: ((5 integer) <- get (1 channel-address deref) (3 offset))
record-info: (1 channel-address deref) (3 offset)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1031
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel-address deref) (3 offset) => 1034 integer
m: (1034 integer global)
sz: (1034 integer global)
addr: (1034 integer global)
addr: initial result: 1034
run: writing to oarg 0 => (5 integer)
setm: (5 integer) <= 0
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
setm: size of (5 integer) is 1
setm: (5 integer): setting 5 to 0
