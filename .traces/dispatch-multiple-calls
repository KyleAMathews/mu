cvt0: 0 ((4 tagged-value-address) <- arg) -- nil
cvt0: 1 ((5 integer) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (integer literal)) -- ((open 1))
cvt0: 2 (break-unless (6 boolean)) -- ((open 1))
cvt0: 3 ((7 tagged-value-address) <- arg) -- ((open 1))
cvt0: 4 ((8 integer) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (integer literal)) -- ((open 1))
cvt0: 5 ((9 integer) <- add (5 integer) (8 integer)) -- ((open 1))
cvt0: 6 (reply (9 integer)) -- ((open 1))
cvt0: 7 ((5 boolean) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (boolean literal)) -- ((open 7) (close 7) (open 1))
cvt0: 8 (break-unless (6 boolean)) -- ((open 7) (close 7) (open 1))
cvt0: 9 ((7 tagged-value-address) <- arg) -- ((open 7) (close 7) (open 1))
cvt0: 10 ((8 boolean) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (boolean literal)) -- ((open 7) (close 7) (open 1))
cvt0: 11 ((9 boolean) <- or (5 boolean) (8 boolean)) -- ((open 7) (close 7) (open 1))
cvt0: 12 (reply (9 boolean)) -- ((open 7) (close 7) (open 1))
cvt0: 13 (reply (nil literal)) -- ((close 13) (open 7) (close 7) (open 1))
cvt1: 0 arg ((4 tagged-value-address))
cvt1: 1 begin nil
cvt1: 1 maybe-coerce ((5 integer) (6 boolean))
cvt1: 2 break-unless nil
cvt1: 3 arg ((7 tagged-value-address))
cvt1: 4 maybe-coerce ((8 integer) (9 boolean))
cvt1: 5 add ((9 integer))
cvt1: 6 reply nil
cvt1: 7 begin nil
cvt1: 7 maybe-coerce ((5 boolean) (6 boolean))
cvt1: 8 break-unless nil
cvt1: 9 arg ((7 tagged-value-address))
cvt1: 10 maybe-coerce ((8 boolean) (9 boolean))
cvt1: 11 or ((9 boolean))
cvt1: 12 reply nil
cvt1: 13 reply nil
cvt0: 0 ((1 tagged-value-address) <- new-tagged-value (boolean literal) (t literal)) -- nil
cvt0: 1 ((2 tagged-value-address) <- new-tagged-value (boolean literal) (nil literal)) -- nil
cvt0: 2 ((3 boolean) <- test1 (1 tagged-value-address) (2 tagged-value-address)) -- nil
cvt0: 3 ((10 tagged-value-address) <- new-tagged-value (integer literal) (34 literal)) -- nil
cvt0: 4 ((11 tagged-value-address) <- new-tagged-value (integer literal) (3 literal)) -- nil
cvt0: 5 ((12 integer) <- test1 (10 tagged-value-address) (11 tagged-value-address)) -- nil
cvt1: 0 new-tagged-value ((1 tagged-value-address))
cvt1: 1 new-tagged-value ((2 tagged-value-address))
cvt1: 2 test1 ((3 boolean))
cvt1: 3 new-tagged-value ((10 tagged-value-address))
cvt1: 4 new-tagged-value ((11 tagged-value-address))
cvt1: 5 test1 ((12 integer))
schedule: main
run: -- nil
run: main 0: ((1 tagged-value-address) <- new-tagged-value (boolean literal) (t literal))
run: -- nil
run: new-tagged-value 0: ((xtype type) <- arg)
arg: nil 0 ((boolean literal) (t literal))
sz: (boolean literal)
m: (boolean literal) literal
setm: (xtype type) <= boolean
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((xtype boolean))
run: new-tagged-value 1: ((xtypesize integer) <- sizeof (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sizeof: boolean
run: writing to oarg 1 => (xtypesize integer)
setm: (xtypesize integer) <= 1
sz: (xtypesize integer)
setm: size of (xtypesize integer) is 1
run: -- ((xtype boolean) (xtypesize 1))
run: new-tagged-value 2: ((xcheck boolean) <- eq (xtypesize integer) (1 literal))
sz: (xtypesize integer)
m: (xtypesize integer) 1
sz: (xtypesize integer)
sz: (1 literal)
m: (1 literal) literal
run: writing to oarg t => (xcheck boolean)
setm: (xcheck boolean) <= t
sz: (xcheck boolean)
setm: size of (xcheck boolean) is 1
run: -- ((xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 3: (assert (xcheck boolean))
sz: (xcheck boolean)
m: (xcheck boolean) 1
sz: (xcheck boolean)
run: -- ((xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 4: ((result tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1000 => (result tagged-value-address)
setm: (result tagged-value-address) <= 1000
sz: (result tagged-value-address)
setm: size of (result tagged-value-address) is 1
run: -- ((result 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 5: ((resulttype location) <- get-address (result tagged-value-address deref) (0 offset))
get-address: (result tagged-value-address deref).0
get-address: after: (1000 tagged-value)
run: writing to oarg 1000 => (resulttype location)
setm: (resulttype location) <= 1000
sz: (resulttype location)
setm: size of (resulttype location) is 1
run: -- ((result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 6: ((resulttype location deref) <- copy (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
run: writing to oarg boolean => (resulttype location deref)
setm: (resulttype location deref) <= boolean
sz: (resulttype location deref)
sz: (resulttype location)
m: (resulttype location) 1
sz: (resulttype location)
sz: (1000 location)
setm: size of (resulttype location deref) is 1
run: -- ((1000 boolean) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 7: ((locaddr location) <- get-address (result tagged-value-address deref) (1 offset))
get-address: (result tagged-value-address deref).1
get-address: after: (1000 tagged-value)
run: writing to oarg 1001 => (locaddr location)
setm: (locaddr location) <= 1001
sz: (locaddr location)
setm: size of (locaddr location) is 1
run: -- ((1000 boolean) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 8: ((locaddr location deref) <- arg)
arg: nil 1 ((boolean literal) (t literal))
sz: (t literal)
m: (t literal) literal
setm: (locaddr location deref) <= t
sz: (locaddr location deref)
sz: (locaddr location)
m: (locaddr location) 1
sz: (locaddr location)
sz: (1001 location)
setm: size of (locaddr location deref) is 1
run: -- ((1000 boolean) (1001 t) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 9: (reply (result tagged-value-address))
reply: ((result tagged-value-address)) ((1 tagged-value-address))
reply: (result tagged-value-address) => (1 tagged-value-address)
sz: (result tagged-value-address)
m: (result tagged-value-address) 1
sz: (result tagged-value-address)
setm: (1 tagged-value-address) <= 1000
sz: (1 tagged-value-address)
setm: size of (1 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: main 1: ((2 tagged-value-address) <- new-tagged-value (boolean literal) (nil literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 0: ((xtype type) <- arg)
arg: nil 0 ((boolean literal) (nil literal))
sz: (boolean literal)
m: (boolean literal) literal
setm: (xtype type) <= boolean
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 1: ((xtypesize integer) <- sizeof (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sizeof: boolean
run: writing to oarg 1 => (xtypesize integer)
setm: (xtypesize integer) <= 1
sz: (xtypesize integer)
setm: size of (xtypesize integer) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 2: ((xcheck boolean) <- eq (xtypesize integer) (1 literal))
sz: (xtypesize integer)
m: (xtypesize integer) 1
sz: (xtypesize integer)
sz: (1 literal)
m: (1 literal) literal
run: writing to oarg t => (xcheck boolean)
setm: (xcheck boolean) <= t
sz: (xcheck boolean)
setm: size of (xcheck boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 3: (assert (xcheck boolean))
sz: (xcheck boolean)
m: (xcheck boolean) 1
sz: (xcheck boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1000) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 4: ((result tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1002 => (result tagged-value-address)
setm: (result tagged-value-address) <= 1002
sz: (result tagged-value-address)
setm: size of (result tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1002) (resulttype 1000) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 5: ((resulttype location) <- get-address (result tagged-value-address deref) (0 offset))
get-address: (result tagged-value-address deref).0
get-address: after: (1002 tagged-value)
run: writing to oarg 1002 => (resulttype location)
setm: (resulttype location) <= 1002
sz: (resulttype location)
setm: size of (resulttype location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (locaddr 1001) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 6: ((resulttype location deref) <- copy (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
run: writing to oarg boolean => (resulttype location deref)
setm: (resulttype location deref) <= boolean
sz: (resulttype location deref)
sz: (resulttype location)
m: (resulttype location) 1
sz: (resulttype location)
sz: (1002 location)
setm: size of (resulttype location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (locaddr 1001) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 7: ((locaddr location) <- get-address (result tagged-value-address deref) (1 offset))
get-address: (result tagged-value-address deref).1
get-address: after: (1002 tagged-value)
run: writing to oarg 1003 => (locaddr location)
setm: (locaddr location) <= 1003
sz: (locaddr location)
setm: size of (locaddr location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (locaddr 1003) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 8: ((locaddr location deref) <- arg)
arg: nil 1 ((boolean literal) (nil literal))
sz: (nil literal)
m: (nil literal) literal
setm: (locaddr location deref) <= nil
sz: (locaddr location deref)
sz: (locaddr location)
m: (locaddr location) 1
sz: (locaddr location)
sz: (1003 location)
setm: size of (locaddr location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (locaddr 1003) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 9: (reply (result tagged-value-address))
reply: ((result tagged-value-address)) ((2 tagged-value-address))
reply: (result tagged-value-address) => (2 tagged-value-address)
sz: (result tagged-value-address)
m: (result tagged-value-address) 1
sz: (result tagged-value-address)
setm: (2 tagged-value-address) <= 1002
sz: (2 tagged-value-address)
setm: size of (2 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (locaddr 1003) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: main 2: ((3 boolean) <- test1 (1 tagged-value-address) (2 tagged-value-address))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (locaddr 1003) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: test1 0: ((4 tagged-value-address) <- arg)
arg: nil 0 ((1 tagged-value-address) (2 tagged-value-address))
sz: (1 tagged-value-address)
m: (1 tagged-value-address) 1
sz: (1 tagged-value-address)
setm: (4 tagged-value-address) <= 1000
sz: (4 tagged-value-address)
setm: size of (4 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (4 1000) (locaddr 1003) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: test1 1: ((5 integer) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (integer literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (4 1000) (locaddr 1003) (result 1002) (resulttype 1002) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 0: ((x tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1004 => (x tagged-value-address)
setm: (x tagged-value-address) <= 1004
sz: (x tagged-value-address)
setm: size of (x tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (4 1000) (locaddr 1003) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 1: ((x tagged-value-address deref) <- arg)
arg: nil 0 ((4 tagged-value-address deref) (integer literal))
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
m: (4 tagged-value-address deref) 2
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
setm: (x tagged-value-address deref) <= #(tagged record (boolean t . nil))
sz: (x tagged-value-address deref)
sz: (x location)
m: (x location) 1
sz: (x location)
sz: (1004 tagged-value)
setm: size of (x tagged-value-address deref) is 2
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (locaddr 1003) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 2: ((p type) <- arg)
arg: nil 1 ((4 tagged-value-address deref) (integer literal))
sz: (integer literal)
m: (integer literal) literal
setm: (p type) <= integer
sz: (p type)
setm: size of (p type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 3: ((xtype type) <- get (x tagged-value-address deref) (0 offset))
sz: (1004 type)
m: (1004 type) 1
sz: (1004 type)
run: writing to oarg boolean => (xtype type)
setm: (xtype type) <= boolean
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 4: ((match? boolean) <- eq (xtype type) (p type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sz: (p type)
m: (p type) 1
sz: (p type)
run: writing to oarg nil => (match? boolean)
setm: (match? boolean) <= nil
sz: (match? boolean)
setm: size of (match? boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 5: (jump-if (match? boolean) (1 offset))
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 6: (reply (0 literal) (nil boolean))
reply: ((0 literal) (nil boolean)) ((5 integer) (6 boolean))
reply: (0 literal) => (5 integer)
sz: (0 literal)
m: (0 literal) literal
setm: (5 integer) <= 0
sz: (5 integer)
setm: size of (5 integer) is 1
reply: (nil boolean) => (6 boolean)
sz: (nil boolean)
m: (nil boolean) 1
sz: (nil boolean)
setm: (6 boolean) <= nil
sz: (6 boolean)
setm: size of (6 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: test1 2: (jump-unless (6 boolean) (4 offset))
sz: (6 boolean)
m: (6 boolean) 1
sz: (6 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: test1 7: ((5 boolean) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (boolean literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1004) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 0: ((x tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1006 => (x tagged-value-address)
setm: (x tagged-value-address) <= 1006
sz: (x tagged-value-address)
setm: size of (x tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 1: ((x tagged-value-address deref) <- arg)
arg: nil 0 ((4 tagged-value-address deref) (boolean literal))
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
m: (4 tagged-value-address deref) 2
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
setm: (x tagged-value-address deref) <= #(tagged record (boolean t . nil))
sz: (x tagged-value-address deref)
sz: (x location)
m: (x location) 1
sz: (x location)
sz: (1006 tagged-value)
setm: size of (x tagged-value-address deref) is 2
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (p integer) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 2: ((p type) <- arg)
arg: nil 1 ((4 tagged-value-address deref) (boolean literal))
sz: (boolean literal)
m: (boolean literal) literal
setm: (p type) <= boolean
sz: (p type)
setm: size of (p type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 3: ((xtype type) <- get (x tagged-value-address deref) (0 offset))
sz: (1006 type)
m: (1006 type) 1
sz: (1006 type)
run: writing to oarg boolean => (xtype type)
setm: (xtype type) <= boolean
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 4: ((match? boolean) <- eq (xtype type) (p type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sz: (p type)
m: (p type) 1
sz: (p type)
run: writing to oarg t => (match? boolean)
setm: (match? boolean) <= t
sz: (match? boolean)
setm: size of (match? boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 5: (jump-if (match? boolean) (1 offset))
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 7: ((xvalue location) <- get (x tagged-value-address deref) (1 offset))
sz: (1007 location)
m: (1007 location) 1
sz: (1007 location)
run: writing to oarg t => (xvalue location)
setm: (xvalue location) <= t
sz: (xvalue location)
setm: size of (xvalue location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 0) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 8: (reply (xvalue location) (match? boolean))
reply: ((xvalue location) (match? boolean)) ((5 boolean) (6 boolean))
reply: (xvalue location) => (5 boolean)
sz: (xvalue location)
m: (xvalue location) 1
sz: (xvalue location)
setm: (5 boolean) <= t
sz: (5 boolean)
setm: size of (5 boolean) is 1
reply: (match? boolean) => (6 boolean)
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
setm: size of (6 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 t) (6 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: test1 8: (jump-unless (6 boolean) (4 offset))
sz: (6 boolean)
m: (6 boolean) 1
sz: (6 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 t) (6 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: test1 9: ((7 tagged-value-address) <- arg)
arg: nil 1 ((1 tagged-value-address) (2 tagged-value-address))
sz: (2 tagged-value-address)
m: (2 tagged-value-address) 1
sz: (2 tagged-value-address)
setm: (7 tagged-value-address) <= 1002
sz: (7 tagged-value-address)
setm: size of (7 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: test1 10: ((8 boolean) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (boolean literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1006) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 0: ((x tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1008 => (x tagged-value-address)
setm: (x tagged-value-address) <= 1008
sz: (x tagged-value-address)
setm: size of (x tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 1: ((x tagged-value-address deref) <- arg)
arg: nil 0 ((7 tagged-value-address deref) (boolean literal))
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1002 tagged-value)
m: (7 tagged-value-address deref) 2
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1002 tagged-value)
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1002 tagged-value)
setm: (x tagged-value-address deref) <= #(tagged record (boolean nil . nil))
sz: (x tagged-value-address deref)
sz: (x location)
m: (x location) 1
sz: (x location)
sz: (1008 tagged-value)
setm: size of (x tagged-value-address deref) is 2
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 2: ((p type) <- arg)
arg: nil 1 ((7 tagged-value-address deref) (boolean literal))
sz: (boolean literal)
m: (boolean literal) literal
setm: (p type) <= boolean
sz: (p type)
setm: size of (p type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 3: ((xtype type) <- get (x tagged-value-address deref) (0 offset))
sz: (1008 type)
m: (1008 type) 1
sz: (1008 type)
run: writing to oarg boolean => (xtype type)
setm: (xtype type) <= boolean
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 4: ((match? boolean) <- eq (xtype type) (p type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sz: (p type)
m: (p type) 1
sz: (p type)
run: writing to oarg t => (match? boolean)
setm: (match? boolean) <= t
sz: (match? boolean)
setm: size of (match? boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 5: (jump-if (match? boolean) (1 offset))
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1) (xvalue t))
run: maybe-coerce 7: ((xvalue location) <- get (x tagged-value-address deref) (1 offset))
sz: (1009 location)
m: (1009 location) 1
sz: (1009 location)
run: writing to oarg nil => (xvalue location)
setm: (xvalue location) <= nil
sz: (xvalue location)
setm: size of (xvalue location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1))
run: maybe-coerce 8: (reply (xvalue location) (match? boolean))
reply: ((xvalue location) (match? boolean)) ((8 boolean) (9 boolean))
reply: (xvalue location) => (8 boolean)
sz: (xvalue location)
m: (xvalue location) 1
sz: (xvalue location)
setm: (8 boolean) <= nil
sz: (8 boolean)
setm: size of (8 boolean) is 1
reply: (match? boolean) => (9 boolean)
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
setm: size of (9 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1))
run: test1 11: ((9 boolean) <- or (5 boolean) (8 boolean))
sz: (5 boolean)
m: (5 boolean) 1
sz: (5 boolean)
run: writing to oarg t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
setm: size of (9 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1))
run: test1 12: (reply (9 boolean))
reply: ((9 boolean)) ((3 boolean))
reply: (9 boolean) => (3 boolean)
sz: (9 boolean)
m: (9 boolean) 1
sz: (9 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
setm: size of (3 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1))
run: main 3: ((10 tagged-value-address) <- new-tagged-value (integer literal) (34 literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype boolean) (xtypesize 1))
run: new-tagged-value 0: ((xtype type) <- arg)
arg: nil 0 ((integer literal) (34 literal))
sz: (integer literal)
m: (integer literal) literal
setm: (xtype type) <= integer
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 1: ((xtypesize integer) <- sizeof (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sizeof: integer
run: writing to oarg 1 => (xtypesize integer)
setm: (xtypesize integer) <= 1
sz: (xtypesize integer)
setm: size of (xtypesize integer) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 2: ((xcheck boolean) <- eq (xtypesize integer) (1 literal))
sz: (xtypesize integer)
m: (xtypesize integer) 1
sz: (xtypesize integer)
sz: (1 literal)
m: (1 literal) literal
run: writing to oarg t => (xcheck boolean)
setm: (xcheck boolean) <= t
sz: (xcheck boolean)
setm: size of (xcheck boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 3: (assert (xcheck boolean))
sz: (xcheck boolean)
m: (xcheck boolean) 1
sz: (xcheck boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1002) (resulttype 1002) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 4: ((result tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1010 => (result tagged-value-address)
setm: (result tagged-value-address) <= 1010
sz: (result tagged-value-address)
setm: size of (result tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1010) (resulttype 1002) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 5: ((resulttype location) <- get-address (result tagged-value-address deref) (0 offset))
get-address: (result tagged-value-address deref).0
get-address: after: (1010 tagged-value)
run: writing to oarg 1010 => (resulttype location)
setm: (resulttype location) <= 1010
sz: (resulttype location)
setm: size of (resulttype location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 6: ((resulttype location deref) <- copy (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
run: writing to oarg integer => (resulttype location deref)
setm: (resulttype location deref) <= integer
sz: (resulttype location deref)
sz: (resulttype location)
m: (resulttype location) 1
sz: (resulttype location)
sz: (1010 location)
setm: size of (resulttype location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1003) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 7: ((locaddr location) <- get-address (result tagged-value-address deref) (1 offset))
get-address: (result tagged-value-address deref).1
get-address: after: (1010 tagged-value)
run: writing to oarg 1011 => (locaddr location)
setm: (locaddr location) <= 1011
sz: (locaddr location)
setm: size of (locaddr location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 8: ((locaddr location deref) <- arg)
arg: nil 1 ((integer literal) (34 literal))
sz: (34 literal)
m: (34 literal) literal
setm: (locaddr location deref) <= 34
sz: (locaddr location deref)
sz: (locaddr location)
m: (locaddr location) 1
sz: (locaddr location)
sz: (1011 location)
setm: size of (locaddr location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 9: (reply (result tagged-value-address))
reply: ((result tagged-value-address)) ((10 tagged-value-address))
reply: (result tagged-value-address) => (10 tagged-value-address)
sz: (result tagged-value-address)
m: (result tagged-value-address) 1
sz: (result tagged-value-address)
setm: (10 tagged-value-address) <= 1010
sz: (10 tagged-value-address)
setm: size of (10 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: main 4: ((11 tagged-value-address) <- new-tagged-value (integer literal) (3 literal))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 0: ((xtype type) <- arg)
arg: nil 0 ((integer literal) (3 literal))
sz: (integer literal)
m: (integer literal) literal
setm: (xtype type) <= integer
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 1: ((xtypesize integer) <- sizeof (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sizeof: integer
run: writing to oarg 1 => (xtypesize integer)
setm: (xtypesize integer) <= 1
sz: (xtypesize integer)
setm: size of (xtypesize integer) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 2: ((xcheck boolean) <- eq (xtypesize integer) (1 literal))
sz: (xtypesize integer)
m: (xtypesize integer) 1
sz: (xtypesize integer)
sz: (1 literal)
m: (1 literal) literal
run: writing to oarg t => (xcheck boolean)
setm: (xcheck boolean) <= t
sz: (xcheck boolean)
setm: size of (xcheck boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 3: (assert (xcheck boolean))
sz: (xcheck boolean)
m: (xcheck boolean) 1
sz: (xcheck boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1010) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 4: ((result tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1012 => (result tagged-value-address)
setm: (result tagged-value-address) <= 1012
sz: (result tagged-value-address)
setm: size of (result tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1012) (resulttype 1010) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 5: ((resulttype location) <- get-address (result tagged-value-address deref) (0 offset))
get-address: (result tagged-value-address deref).0
get-address: after: (1012 tagged-value)
run: writing to oarg 1012 => (resulttype location)
setm: (resulttype location) <= 1012
sz: (resulttype location)
setm: size of (resulttype location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 6: ((resulttype location deref) <- copy (xtype type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
run: writing to oarg integer => (resulttype location deref)
setm: (resulttype location deref) <= integer
sz: (resulttype location deref)
sz: (resulttype location)
m: (resulttype location) 1
sz: (resulttype location)
sz: (1012 location)
setm: size of (resulttype location deref) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1011) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 7: ((locaddr location) <- get-address (result tagged-value-address deref) (1 offset))
get-address: (result tagged-value-address deref).1
get-address: after: (1012 tagged-value)
run: writing to oarg 1013 => (locaddr location)
setm: (locaddr location) <= 1013
sz: (locaddr location)
setm: size of (locaddr location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 8: ((locaddr location deref) <- arg)
arg: nil 1 ((integer literal) (3 literal))
sz: (3 literal)
m: (3 literal) literal
setm: (locaddr location deref) <= 3
sz: (locaddr location deref)
sz: (locaddr location)
m: (locaddr location) 1
sz: (locaddr location)
sz: (1013 location)
setm: size of (locaddr location deref) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: new-tagged-value 9: (reply (result tagged-value-address))
reply: ((result tagged-value-address)) ((11 tagged-value-address))
reply: (result tagged-value-address) => (11 tagged-value-address)
sz: (result tagged-value-address)
m: (result tagged-value-address) 1
sz: (result tagged-value-address)
setm: (11 tagged-value-address) <= 1012
sz: (11 tagged-value-address)
setm: size of (11 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (11 1012) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: main 5: ((12 integer) <- test1 (10 tagged-value-address) (11 tagged-value-address))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (11 1012) (2 1002) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: test1 0: ((4 tagged-value-address) <- arg)
arg: nil 0 ((10 tagged-value-address) (11 tagged-value-address))
sz: (10 tagged-value-address)
m: (10 tagged-value-address) 1
sz: (10 tagged-value-address)
setm: (4 tagged-value-address) <= 1010
sz: (4 tagged-value-address)
setm: size of (4 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: test1 1: ((5 integer) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (integer literal))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1008) (xcheck t) (xtype integer) (xtypesize 1))
run: maybe-coerce 0: ((x tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1014 => (x tagged-value-address)
setm: (x tagged-value-address) <= 1014
sz: (x tagged-value-address)
setm: size of (x tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1))
run: maybe-coerce 1: ((x tagged-value-address deref) <- arg)
arg: nil 0 ((4 tagged-value-address deref) (integer literal))
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1010 tagged-value)
m: (4 tagged-value-address deref) 2
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1010 tagged-value)
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1010 tagged-value)
setm: (x tagged-value-address deref) <= #(tagged record (integer 34 . nil))
sz: (x tagged-value-address deref)
sz: (x location)
m: (x location) 1
sz: (x location)
sz: (1014 tagged-value)
setm: size of (x tagged-value-address deref) is 2
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p boolean) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1))
run: maybe-coerce 2: ((p type) <- arg)
arg: nil 1 ((4 tagged-value-address deref) (integer literal))
sz: (integer literal)
m: (integer literal) literal
setm: (p type) <= integer
sz: (p type)
setm: size of (p type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1))
run: maybe-coerce 3: ((xtype type) <- get (x tagged-value-address deref) (0 offset))
sz: (1014 type)
m: (1014 type) 1
sz: (1014 type)
run: writing to oarg integer => (xtype type)
setm: (xtype type) <= integer
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1))
run: maybe-coerce 4: ((match? boolean) <- eq (xtype type) (p type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sz: (p type)
m: (p type) 1
sz: (p type)
run: writing to oarg t => (match? boolean)
setm: (match? boolean) <= t
sz: (match? boolean)
setm: size of (match? boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1))
run: maybe-coerce 5: (jump-if (match? boolean) (1 offset))
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1))
run: maybe-coerce 7: ((xvalue location) <- get (x tagged-value-address deref) (1 offset))
sz: (1015 location)
m: (1015 location) 1
sz: (1015 location)
run: writing to oarg 34 => (xvalue location)
setm: (xvalue location) <= 34
sz: (xvalue location)
setm: size of (xvalue location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 8: (reply (xvalue location) (match? boolean))
reply: ((xvalue location) (match? boolean)) ((5 integer) (6 boolean))
reply: (xvalue location) => (5 integer)
sz: (xvalue location)
m: (xvalue location) 1
sz: (xvalue location)
setm: (5 integer) <= 34
sz: (5 integer)
setm: size of (5 integer) is 1
reply: (match? boolean) => (6 boolean)
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
setm: size of (6 boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: test1 2: (jump-unless (6 boolean) (4 offset))
sz: (6 boolean)
m: (6 boolean) 1
sz: (6 boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1002) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: test1 3: ((7 tagged-value-address) <- arg)
arg: nil 1 ((10 tagged-value-address) (11 tagged-value-address))
sz: (11 tagged-value-address)
m: (11 tagged-value-address) 1
sz: (11 tagged-value-address)
setm: (7 tagged-value-address) <= 1012
sz: (7 tagged-value-address)
setm: size of (7 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: test1 4: ((8 integer) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (integer literal))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1014) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 0: ((x tagged-value-address) <- new (tagged-value type))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1016 => (x tagged-value-address)
setm: (x tagged-value-address) <= 1016
sz: (x tagged-value-address)
setm: size of (x tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 1: ((x tagged-value-address deref) <- arg)
arg: nil 0 ((7 tagged-value-address deref) (integer literal))
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1012 tagged-value)
m: (7 tagged-value-address deref) 2
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1012 tagged-value)
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1012 tagged-value)
setm: (x tagged-value-address deref) <= #(tagged record (integer 3 . nil))
sz: (x tagged-value-address deref)
sz: (x location)
m: (x location) 1
sz: (x location)
sz: (1016 tagged-value)
setm: size of (x tagged-value-address deref) is 2
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 2: ((p type) <- arg)
arg: nil 1 ((7 tagged-value-address deref) (integer literal))
sz: (integer literal)
m: (integer literal) literal
setm: (p type) <= integer
sz: (p type)
setm: size of (p type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 3: ((xtype type) <- get (x tagged-value-address deref) (0 offset))
sz: (1016 type)
m: (1016 type) 1
sz: (1016 type)
run: writing to oarg integer => (xtype type)
setm: (xtype type) <= integer
sz: (xtype type)
setm: size of (xtype type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 4: ((match? boolean) <- eq (xtype type) (p type))
sz: (xtype type)
m: (xtype type) 1
sz: (xtype type)
sz: (p type)
m: (p type) 1
sz: (p type)
run: writing to oarg t => (match? boolean)
setm: (match? boolean) <= t
sz: (match? boolean)
setm: size of (match? boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 5: (jump-if (match? boolean) (1 offset))
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 34))
run: maybe-coerce 7: ((xvalue location) <- get (x tagged-value-address deref) (1 offset))
sz: (1017 location)
m: (1017 location) 1
sz: (1017 location)
run: writing to oarg 3 => (xvalue location)
setm: (xvalue location) <= 3
sz: (xvalue location)
setm: size of (xvalue location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 3))
run: maybe-coerce 8: (reply (xvalue location) (match? boolean))
reply: ((xvalue location) (match? boolean)) ((8 integer) (9 boolean))
reply: (xvalue location) => (8 integer)
sz: (xvalue location)
m: (xvalue location) 1
sz: (xvalue location)
setm: (8 integer) <= 3
sz: (8 integer)
setm: size of (8 integer) is 1
reply: (match? boolean) => (9 boolean)
sz: (match? boolean)
m: (match? boolean) 1
sz: (match? boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
setm: size of (9 boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (8 3) (9 t) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 3))
run: test1 5: ((9 integer) <- add (5 integer) (8 integer))
sz: (5 integer)
m: (5 integer) 1
sz: (5 integer)
sz: (8 integer)
m: (8 integer) 1
sz: (8 integer)
add: 34 3
sz: (5 integer)
m: (5 integer) 1
sz: (5 integer)
sz: (8 integer)
m: (8 integer) 1
sz: (8 integer)
run: writing to oarg 37 => (9 integer)
setm: (9 integer) <= 37
sz: (9 integer)
setm: size of (9 integer) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (11 1012) (2 1002) (3 t) (4 1010) (5 34) (6 t) (7 1012) (8 3) (9 37) (locaddr 1013) (match? t) (p integer) (result 1012) (resulttype 1012) (x 1016) (xcheck t) (xtype integer) (xtypesize 1) (xvalue 3))
run: test1 6: (reply (9 integer))
reply: ((9 integer)) ((12 integer))
reply: (9 integer) => (12 integer)
sz: (9 integer)
m: (9 integer) 1
sz: (9 integer)
setm: (12 integer) <= 37
sz: (12 integer)
setm: size of (12 integer) is 1
