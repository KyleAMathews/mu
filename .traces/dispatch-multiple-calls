cvt0: 0 ((4 tagged-value-address) <- arg) -- nil
cvt0: 1 ((5 integer) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (integer literal)) -- ((open 1))
cvt0: 2 (break-unless (6 boolean)) -- ((open 1))
cvt0: 3 ((7 tagged-value-address) <- arg) -- ((open 1))
cvt0: 4 ((8 integer) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (integer literal)) -- ((open 1))
cvt0: 5 ((9 integer) <- add (5 integer) (8 integer)) -- ((open 1))
cvt0: 6 (reply (9 integer)) -- ((open 1))
cvt0: 7 ((5 boolean) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (boolean literal)) -- ((open 7) (close 7) (open 1))
cvt0: 8 (break-unless (6 boolean)) -- ((open 7) (close 7) (open 1))
cvt0: 9 ((7 tagged-value-address) <- arg) -- ((open 7) (close 7) (open 1))
cvt0: 10 ((8 boolean) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (boolean literal)) -- ((open 7) (close 7) (open 1))
cvt0: 11 ((9 boolean) <- or (5 boolean) (8 boolean)) -- ((open 7) (close 7) (open 1))
cvt0: 12 (reply (9 boolean)) -- ((open 7) (close 7) (open 1))
cvt0: 13 (reply (nil literal)) -- ((close 13) (open 7) (close 7) (open 1))
cvt1: 0 arg ((4 tagged-value-address))
cvt1: 1 begin nil
cvt1: 1 maybe-coerce ((5 integer) (6 boolean))
cvt1: 2 break-unless nil
cvt1: 3 arg ((7 tagged-value-address))
cvt1: 4 maybe-coerce ((8 integer) (9 boolean))
cvt1: 5 add ((9 integer))
cvt1: 6 reply nil
cvt1: 7 begin nil
cvt1: 7 maybe-coerce ((5 boolean) (6 boolean))
cvt1: 8 break-unless nil
cvt1: 9 arg ((7 tagged-value-address))
cvt1: 10 maybe-coerce ((8 boolean) (9 boolean))
cvt1: 11 or ((9 boolean))
cvt1: 12 reply nil
cvt1: 13 reply nil
cvt0: 0 ((1 tagged-value-address) <- new-tagged-value (boolean literal) (t literal)) -- nil
cvt0: 1 ((2 tagged-value-address) <- new-tagged-value (boolean literal) (nil literal)) -- nil
cvt0: 2 ((3 boolean) <- test1 (1 tagged-value-address) (2 tagged-value-address)) -- nil
cvt0: 3 ((10 tagged-value-address) <- new-tagged-value (integer literal) (34 literal)) -- nil
cvt0: 4 ((11 tagged-value-address) <- new-tagged-value (integer literal) (3 literal)) -- nil
cvt0: 5 ((12 integer) <- test1 (10 tagged-value-address) (11 tagged-value-address)) -- nil
cvt1: 0 new-tagged-value ((1 tagged-value-address))
cvt1: 1 new-tagged-value ((2 tagged-value-address))
cvt1: 2 test1 ((3 boolean))
cvt1: 3 new-tagged-value ((10 tagged-value-address))
cvt1: 4 new-tagged-value ((11 tagged-value-address))
cvt1: 5 test1 ((12 integer))
schedule: main
run: -- nil
run: main 0: ((1 tagged-value-address) <- new-tagged-value (boolean literal) (t literal))
run: -- nil
run: new-tagged-value 0: ((201 type) <- arg)
arg: nil 0 ((boolean literal) (t literal))
setm: (201 type) <= boolean
sz: (201 type)
setm: size of (201 type) is 1
run: -- ((201 boolean))
run: new-tagged-value 1: ((202 integer) <- sizeof (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
sizeof: boolean
run: writing to oarg 1 => (202 integer)
setm: (202 integer) <= 1
sz: (202 integer)
setm: size of (202 integer) is 1
run: -- ((201 boolean) (202 1))
run: new-tagged-value 2: ((203 boolean) <- eq (202 integer) (1 literal))
sz: (202 integer)
m: (202 integer) 1
sz: (202 integer)
run: writing to oarg t => (203 boolean)
setm: (203 boolean) <= t
sz: (203 boolean)
setm: size of (203 boolean) is 1
run: -- ((201 boolean) (202 1) (203 t))
run: new-tagged-value 3: (assert (203 boolean))
sz: (203 boolean)
m: (203 boolean) 1
sz: (203 boolean)
run: -- ((201 boolean) (202 1) (203 t))
run: new-tagged-value 4: ((204 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1000 => (204 tagged-value-address)
setm: (204 tagged-value-address) <= 1000
sz: (204 tagged-value-address)
setm: size of (204 tagged-value-address) is 1
run: -- ((201 boolean) (202 1) (203 t) (204 1000))
run: new-tagged-value 5: ((205 location) <- get-address (204 tagged-value-address deref) (0 offset))
get-address: (204 tagged-value-address deref).0
get-address: after: (1000 tagged-value)
run: writing to oarg 1000 => (205 location)
setm: (205 location) <= 1000
sz: (205 location)
setm: size of (205 location) is 1
run: -- ((201 boolean) (202 1) (203 t) (204 1000) (205 1000))
run: new-tagged-value 6: ((205 location deref) <- copy (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
run: writing to oarg boolean => (205 location deref)
setm: (205 location deref) <= boolean
sz: (205 location deref)
sz: (205 location)
m: (205 location) 1
sz: (205 location)
sz: (1000 location)
setm: size of (205 location deref) is 1
run: -- ((1000 boolean) (201 boolean) (202 1) (203 t) (204 1000) (205 1000))
run: new-tagged-value 7: ((206 location) <- get-address (204 tagged-value-address deref) (1 offset))
get-address: (204 tagged-value-address deref).1
get-address: after: (1000 tagged-value)
run: writing to oarg 1001 => (206 location)
setm: (206 location) <= 1001
sz: (206 location)
setm: size of (206 location) is 1
run: -- ((1000 boolean) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: new-tagged-value 8: ((206 location deref) <- arg)
arg: nil 1 ((boolean literal) (t literal))
setm: (206 location deref) <= t
sz: (206 location deref)
sz: (206 location)
m: (206 location) 1
sz: (206 location)
sz: (1001 location)
setm: size of (206 location deref) is 1
run: -- ((1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: new-tagged-value 9: (reply (204 tagged-value-address))
reply: ((204 tagged-value-address)) ((1 tagged-value-address))
reply: (204 tagged-value-address) => (1 tagged-value-address)
sz: (204 tagged-value-address)
m: (204 tagged-value-address) 1
sz: (204 tagged-value-address)
setm: (1 tagged-value-address) <= 1000
sz: (1 tagged-value-address)
setm: size of (1 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: main 1: ((2 tagged-value-address) <- new-tagged-value (boolean literal) (nil literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: new-tagged-value 0: ((201 type) <- arg)
arg: nil 0 ((boolean literal) (nil literal))
setm: (201 type) <= boolean
sz: (201 type)
setm: size of (201 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: new-tagged-value 1: ((202 integer) <- sizeof (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
sizeof: boolean
run: writing to oarg 1 => (202 integer)
setm: (202 integer) <= 1
sz: (202 integer)
setm: size of (202 integer) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: new-tagged-value 2: ((203 boolean) <- eq (202 integer) (1 literal))
sz: (202 integer)
m: (202 integer) 1
sz: (202 integer)
run: writing to oarg t => (203 boolean)
setm: (203 boolean) <= t
sz: (203 boolean)
setm: size of (203 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: new-tagged-value 3: (assert (203 boolean))
sz: (203 boolean)
m: (203 boolean) 1
sz: (203 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1000) (205 1000) (206 1001))
run: new-tagged-value 4: ((204 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1002 => (204 tagged-value-address)
setm: (204 tagged-value-address) <= 1002
sz: (204 tagged-value-address)
setm: size of (204 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1002) (205 1000) (206 1001))
run: new-tagged-value 5: ((205 location) <- get-address (204 tagged-value-address deref) (0 offset))
get-address: (204 tagged-value-address deref).0
get-address: after: (1002 tagged-value)
run: writing to oarg 1002 => (205 location)
setm: (205 location) <= 1002
sz: (205 location)
setm: size of (205 location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1001))
run: new-tagged-value 6: ((205 location deref) <- copy (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
run: writing to oarg boolean => (205 location deref)
setm: (205 location deref) <= boolean
sz: (205 location deref)
sz: (205 location)
m: (205 location) 1
sz: (205 location)
sz: (1002 location)
setm: size of (205 location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1001))
run: new-tagged-value 7: ((206 location) <- get-address (204 tagged-value-address deref) (1 offset))
get-address: (204 tagged-value-address deref).1
get-address: after: (1002 tagged-value)
run: writing to oarg 1003 => (206 location)
setm: (206 location) <= 1003
sz: (206 location)
setm: size of (206 location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003))
run: new-tagged-value 8: ((206 location deref) <- arg)
arg: nil 1 ((boolean literal) (nil literal))
setm: (206 location deref) <= nil
sz: (206 location deref)
sz: (206 location)
m: (206 location) 1
sz: (206 location)
sz: (1003 location)
setm: size of (206 location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003))
run: new-tagged-value 9: (reply (204 tagged-value-address))
reply: ((204 tagged-value-address)) ((2 tagged-value-address))
reply: (204 tagged-value-address) => (2 tagged-value-address)
sz: (204 tagged-value-address)
m: (204 tagged-value-address) 1
sz: (204 tagged-value-address)
setm: (2 tagged-value-address) <= 1002
sz: (2 tagged-value-address)
setm: size of (2 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003))
run: main 2: ((3 boolean) <- test1 (1 tagged-value-address) (2 tagged-value-address))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003))
run: test1 0: ((4 tagged-value-address) <- arg)
arg: nil 0 ((1 tagged-value-address) (2 tagged-value-address))
sz: (1 tagged-value-address)
m: (1 tagged-value-address) 1
sz: (1 tagged-value-address)
setm: (4 tagged-value-address) <= 1000
sz: (4 tagged-value-address)
setm: size of (4 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: test1 1: ((5 integer) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (integer literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: maybe-coerce 0: ((101 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1004 => (101 tagged-value-address)
setm: (101 tagged-value-address) <= 1004
sz: (101 tagged-value-address)
setm: size of (101 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (101 1004) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: maybe-coerce 1: ((101 tagged-value-address deref) <- arg)
arg: nil 0 ((4 tagged-value-address deref) (integer literal))
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
m: (4 tagged-value-address deref) 2
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
setm: (101 tagged-value-address deref) <= #(tagged record (boolean t . nil))
sz: (101 tagged-value-address deref)
sz: (101 location)
m: (101 location) 1
sz: (101 location)
sz: (1004 tagged-value)
setm: size of (101 tagged-value-address deref) is 2
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: maybe-coerce 2: ((102 type) <- arg)
arg: nil 1 ((4 tagged-value-address deref) (integer literal))
setm: (102 type) <= integer
sz: (102 type)
setm: size of (102 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (102 integer) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: maybe-coerce 3: ((103 type) <- get (101 tagged-value-address deref) (0 offset))
sz: (1004 type)
m: (1004 type) 1
sz: (1004 type)
run: writing to oarg boolean => (103 type)
setm: (103 type) <= boolean
sz: (103 type)
setm: size of (103 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: maybe-coerce 4: ((104 boolean) <- eq (103 type) (102 type))
sz: (103 type)
m: (103 type) 1
sz: (103 type)
sz: (102 type)
m: (102 type) 1
sz: (102 type)
run: writing to oarg nil => (104 boolean)
setm: (104 boolean) <= nil
sz: (104 boolean)
setm: size of (104 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: maybe-coerce 5: (jump-if (104 boolean) (1 offset))
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000))
run: maybe-coerce 6: (reply (0 literal) (nil literal))
reply: ((0 literal) (nil literal)) ((5 integer) (6 boolean))
reply: (0 literal) => (5 integer)
setm: (5 integer) <= 0
sz: (5 integer)
setm: size of (5 integer) is 1
reply: (nil literal) => (6 boolean)
setm: (6 boolean) <= nil
sz: (6 boolean)
setm: size of (6 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: test1 2: (jump-unless (6 boolean) (4 offset))
sz: (6 boolean)
m: (6 boolean) 1
sz: (6 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: test1 7: ((5 boolean) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (boolean literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1004) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 0: ((101 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1006 => (101 tagged-value-address)
setm: (101 tagged-value-address) <= 1006
sz: (101 tagged-value-address)
setm: size of (101 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (101 1006) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 1: ((101 tagged-value-address deref) <- arg)
arg: nil 0 ((4 tagged-value-address deref) (boolean literal))
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
m: (4 tagged-value-address deref) 2
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1000 tagged-value)
setm: (101 tagged-value-address deref) <= #(tagged record (boolean t . nil))
sz: (101 tagged-value-address deref)
sz: (101 location)
m: (101 location) 1
sz: (101 location)
sz: (1006 tagged-value)
setm: size of (101 tagged-value-address deref) is 2
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 integer) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 2: ((102 type) <- arg)
arg: nil 1 ((4 tagged-value-address deref) (boolean literal))
setm: (102 type) <= boolean
sz: (102 type)
setm: size of (102 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 3: ((103 type) <- get (101 tagged-value-address deref) (0 offset))
sz: (1006 type)
m: (1006 type) 1
sz: (1006 type)
run: writing to oarg boolean => (103 type)
setm: (103 type) <= boolean
sz: (103 type)
setm: size of (103 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 4: ((104 boolean) <- eq (103 type) (102 type))
sz: (103 type)
m: (103 type) 1
sz: (103 type)
sz: (102 type)
m: (102 type) 1
sz: (102 type)
run: writing to oarg t => (104 boolean)
setm: (104 boolean) <= t
sz: (104 boolean)
setm: size of (104 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (104 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 5: (jump-if (104 boolean) (1 offset))
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (104 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 7: ((105 location) <- get (101 tagged-value-address deref) (1 offset))
sz: (1007 location)
m: (1007 location) 1
sz: (1007 location)
run: writing to oarg t => (105 location)
setm: (105 location) <= t
sz: (105 location)
setm: size of (105 location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 0))
run: maybe-coerce 8: (reply (105 location) (104 boolean))
reply: ((105 location) (104 boolean)) ((5 boolean) (6 boolean))
reply: (105 location) => (5 boolean)
sz: (105 location)
m: (105 location) 1
sz: (105 location)
setm: (5 boolean) <= t
sz: (5 boolean)
setm: size of (5 boolean) is 1
reply: (104 boolean) => (6 boolean)
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
setm: size of (6 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t))
run: test1 8: (jump-unless (6 boolean) (4 offset))
sz: (6 boolean)
m: (6 boolean) 1
sz: (6 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t))
run: test1 9: ((7 tagged-value-address) <- arg)
arg: nil 1 ((1 tagged-value-address) (2 tagged-value-address))
sz: (2 tagged-value-address)
m: (2 tagged-value-address) 1
sz: (2 tagged-value-address)
setm: (7 tagged-value-address) <= 1002
sz: (7 tagged-value-address)
setm: size of (7 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: test1 10: ((8 boolean) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (boolean literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1006) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 0: ((101 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1008 => (101 tagged-value-address)
setm: (101 tagged-value-address) <= 1008
sz: (101 tagged-value-address)
setm: size of (101 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (101 1008) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 1: ((101 tagged-value-address deref) <- arg)
arg: nil 0 ((7 tagged-value-address deref) (boolean literal))
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1002 tagged-value)
m: (7 tagged-value-address deref) 2
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1002 tagged-value)
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1002 tagged-value)
setm: (101 tagged-value-address deref) <= #(tagged record (boolean nil . nil))
sz: (101 tagged-value-address deref)
sz: (101 location)
m: (101 location) 1
sz: (101 location)
sz: (1008 tagged-value)
setm: size of (101 tagged-value-address deref) is 2
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 2: ((102 type) <- arg)
arg: nil 1 ((7 tagged-value-address deref) (boolean literal))
setm: (102 type) <= boolean
sz: (102 type)
setm: size of (102 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 3: ((103 type) <- get (101 tagged-value-address deref) (0 offset))
sz: (1008 type)
m: (1008 type) 1
sz: (1008 type)
run: writing to oarg boolean => (103 type)
setm: (103 type) <= boolean
sz: (103 type)
setm: size of (103 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 4: ((104 boolean) <- eq (103 type) (102 type))
sz: (103 type)
m: (103 type) 1
sz: (103 type)
sz: (102 type)
m: (102 type) 1
sz: (102 type)
run: writing to oarg t => (104 boolean)
setm: (104 boolean) <= t
sz: (104 boolean)
setm: size of (104 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 5: (jump-if (104 boolean) (1 offset))
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (105 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 7: ((105 location) <- get (101 tagged-value-address deref) (1 offset))
sz: (1009 location)
m: (1009 location) 1
sz: (1009 location)
run: writing to oarg nil => (105 location)
setm: (105 location) <= nil
sz: (105 location)
setm: size of (105 location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002))
run: maybe-coerce 8: (reply (105 location) (104 boolean))
reply: ((105 location) (104 boolean)) ((8 boolean) (9 boolean))
reply: (105 location) => (8 boolean)
sz: (105 location)
m: (105 location) 1
sz: (105 location)
setm: (8 boolean) <= nil
sz: (8 boolean)
setm: size of (8 boolean) is 1
reply: (104 boolean) => (9 boolean)
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
setm: size of (9 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: test1 11: ((9 boolean) <- or (5 boolean) (8 boolean))
sz: (5 boolean)
m: (5 boolean) 1
sz: (5 boolean)
run: writing to oarg t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
setm: size of (9 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: test1 12: (reply (9 boolean))
reply: ((9 boolean)) ((3 boolean))
reply: (9 boolean) => (3 boolean)
sz: (9 boolean)
m: (9 boolean) 1
sz: (9 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
setm: size of (3 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: main 3: ((10 tagged-value-address) <- new-tagged-value (integer literal) (34 literal))
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 boolean) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 0: ((201 type) <- arg)
arg: nil 0 ((integer literal) (34 literal))
setm: (201 type) <= integer
sz: (201 type)
setm: size of (201 type) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 1: ((202 integer) <- sizeof (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
sizeof: integer
run: writing to oarg 1 => (202 integer)
setm: (202 integer) <= 1
sz: (202 integer)
setm: size of (202 integer) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 2: ((203 boolean) <- eq (202 integer) (1 literal))
sz: (202 integer)
m: (202 integer) 1
sz: (202 integer)
run: writing to oarg t => (203 boolean)
setm: (203 boolean) <= t
sz: (203 boolean)
setm: size of (203 boolean) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 3: (assert (203 boolean))
sz: (203 boolean)
m: (203 boolean) 1
sz: (203 boolean)
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1002) (205 1002) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 4: ((204 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1010 => (204 tagged-value-address)
setm: (204 tagged-value-address) <= 1010
sz: (204 tagged-value-address)
setm: size of (204 tagged-value-address) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1002) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 5: ((205 location) <- get-address (204 tagged-value-address deref) (0 offset))
get-address: (204 tagged-value-address deref).0
get-address: after: (1010 tagged-value)
run: writing to oarg 1010 => (205 location)
setm: (205 location) <= 1010
sz: (205 location)
setm: size of (205 location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 6: ((205 location deref) <- copy (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
run: writing to oarg integer => (205 location deref)
setm: (205 location deref) <= integer
sz: (205 location deref)
sz: (205 location)
m: (205 location) 1
sz: (205 location)
sz: (1010 location)
setm: size of (205 location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1003) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 7: ((206 location) <- get-address (204 tagged-value-address deref) (1 offset))
get-address: (204 tagged-value-address deref).1
get-address: after: (1010 tagged-value)
run: writing to oarg 1011 => (206 location)
setm: (206 location) <= 1011
sz: (206 location)
setm: size of (206 location) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 8: ((206 location deref) <- arg)
arg: nil 1 ((integer literal) (34 literal))
setm: (206 location deref) <= 34
sz: (206 location deref)
sz: (206 location)
m: (206 location) 1
sz: (206 location)
sz: (1011 location)
setm: size of (206 location deref) is 1
run: -- ((1 1000) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 9: (reply (204 tagged-value-address))
reply: ((204 tagged-value-address)) ((10 tagged-value-address))
reply: (204 tagged-value-address) => (10 tagged-value-address)
sz: (204 tagged-value-address)
m: (204 tagged-value-address) 1
sz: (204 tagged-value-address)
setm: (10 tagged-value-address) <= 1010
sz: (10 tagged-value-address)
setm: size of (10 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: main 4: ((11 tagged-value-address) <- new-tagged-value (integer literal) (3 literal))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 0: ((201 type) <- arg)
arg: nil 0 ((integer literal) (3 literal))
setm: (201 type) <= integer
sz: (201 type)
setm: size of (201 type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 1: ((202 integer) <- sizeof (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
sizeof: integer
run: writing to oarg 1 => (202 integer)
setm: (202 integer) <= 1
sz: (202 integer)
setm: size of (202 integer) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 2: ((203 boolean) <- eq (202 integer) (1 literal))
sz: (202 integer)
m: (202 integer) 1
sz: (202 integer)
run: writing to oarg t => (203 boolean)
setm: (203 boolean) <= t
sz: (203 boolean)
setm: size of (203 boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 3: (assert (203 boolean))
sz: (203 boolean)
m: (203 boolean) 1
sz: (203 boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1010) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 4: ((204 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1012 => (204 tagged-value-address)
setm: (204 tagged-value-address) <= 1012
sz: (204 tagged-value-address)
setm: size of (204 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1010) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 5: ((205 location) <- get-address (204 tagged-value-address deref) (0 offset))
get-address: (204 tagged-value-address deref).0
get-address: after: (1012 tagged-value)
run: writing to oarg 1012 => (205 location)
setm: (205 location) <= 1012
sz: (205 location)
setm: size of (205 location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 6: ((205 location deref) <- copy (201 type))
sz: (201 type)
m: (201 type) 1
sz: (201 type)
run: writing to oarg integer => (205 location deref)
setm: (205 location deref) <= integer
sz: (205 location deref)
sz: (205 location)
m: (205 location) 1
sz: (205 location)
sz: (1012 location)
setm: size of (205 location deref) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (1012 integer) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1011) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 7: ((206 location) <- get-address (204 tagged-value-address deref) (1 offset))
get-address: (204 tagged-value-address deref).1
get-address: after: (1012 tagged-value)
run: writing to oarg 1013 => (206 location)
setm: (206 location) <= 1013
sz: (206 location)
setm: size of (206 location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (1012 integer) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 8: ((206 location deref) <- arg)
arg: nil 1 ((integer literal) (3 literal))
setm: (206 location deref) <= 3
sz: (206 location deref)
sz: (206 location)
m: (206 location) 1
sz: (206 location)
sz: (1013 location)
setm: size of (206 location deref) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (1012 integer) (1013 3) (102 boolean) (103 boolean) (104 t) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: new-tagged-value 9: (reply (204 tagged-value-address))
reply: ((204 tagged-value-address)) ((11 tagged-value-address))
reply: (204 tagged-value-address) => (11 tagged-value-address)
sz: (204 tagged-value-address)
m: (204 tagged-value-address) 1
sz: (204 tagged-value-address)
setm: (11 tagged-value-address) <= 1012
sz: (11 tagged-value-address)
setm: size of (11 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (1012 integer) (1013 3) (102 boolean) (103 boolean) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: main 5: ((12 integer) <- test1 (10 tagged-value-address) (11 tagged-value-address))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (1012 integer) (1013 3) (102 boolean) (103 boolean) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1000) (5 t) (6 t) (7 1002) (9 t))
run: test1 0: ((4 tagged-value-address) <- arg)
arg: nil 0 ((10 tagged-value-address) (11 tagged-value-address))
sz: (10 tagged-value-address)
m: (10 tagged-value-address) 1
sz: (10 tagged-value-address)
setm: (4 tagged-value-address) <= 1010
sz: (4 tagged-value-address)
setm: size of (4 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (1012 integer) (1013 3) (102 boolean) (103 boolean) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: test1 1: ((5 integer) (6 boolean) <- maybe-coerce (4 tagged-value-address deref) (integer literal))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1008) (1010 integer) (1011 34) (1012 integer) (1013 3) (102 boolean) (103 boolean) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 0: ((101 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1014 => (101 tagged-value-address)
setm: (101 tagged-value-address) <= 1014
sz: (101 tagged-value-address)
setm: size of (101 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (102 boolean) (103 boolean) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 1: ((101 tagged-value-address deref) <- arg)
arg: nil 0 ((4 tagged-value-address deref) (integer literal))
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1010 tagged-value)
m: (4 tagged-value-address deref) 2
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1010 tagged-value)
sz: (4 tagged-value-address deref)
sz: (4 location)
m: (4 location) 1
sz: (4 location)
sz: (1010 tagged-value)
setm: (101 tagged-value-address deref) <= #(tagged record (integer 34 . nil))
sz: (101 tagged-value-address deref)
sz: (101 location)
m: (101 location) 1
sz: (101 location)
sz: (1014 tagged-value)
setm: size of (101 tagged-value-address deref) is 2
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 boolean) (103 boolean) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 2: ((102 type) <- arg)
arg: nil 1 ((4 tagged-value-address deref) (integer literal))
setm: (102 type) <= integer
sz: (102 type)
setm: size of (102 type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 boolean) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 3: ((103 type) <- get (101 tagged-value-address deref) (0 offset))
sz: (1014 type)
m: (1014 type) 1
sz: (1014 type)
run: writing to oarg integer => (103 type)
setm: (103 type) <= integer
sz: (103 type)
setm: size of (103 type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 4: ((104 boolean) <- eq (103 type) (102 type))
sz: (103 type)
m: (103 type) 1
sz: (103 type)
sz: (102 type)
m: (102 type) 1
sz: (102 type)
run: writing to oarg t => (104 boolean)
setm: (104 boolean) <= t
sz: (104 boolean)
setm: size of (104 boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 5: (jump-if (104 boolean) (1 offset))
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 7: ((105 location) <- get (101 tagged-value-address deref) (1 offset))
sz: (1015 location)
m: (1015 location) 1
sz: (1015 location)
run: writing to oarg 34 => (105 location)
setm: (105 location) <= 34
sz: (105 location)
setm: size of (105 location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 t) (6 t) (7 1002) (9 t))
run: maybe-coerce 8: (reply (105 location) (104 boolean))
reply: ((105 location) (104 boolean)) ((5 integer) (6 boolean))
reply: (105 location) => (5 integer)
sz: (105 location)
m: (105 location) 1
sz: (105 location)
setm: (5 integer) <= 34
sz: (5 integer)
setm: size of (5 integer) is 1
reply: (104 boolean) => (6 boolean)
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
setm: size of (6 boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1002) (9 t))
run: test1 2: (jump-unless (6 boolean) (4 offset))
sz: (6 boolean)
m: (6 boolean) 1
sz: (6 boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1002) (9 t))
run: test1 3: ((7 tagged-value-address) <- arg)
arg: nil 1 ((10 tagged-value-address) (11 tagged-value-address))
sz: (11 tagged-value-address)
m: (11 tagged-value-address) 1
sz: (11 tagged-value-address)
setm: (7 tagged-value-address) <= 1012
sz: (7 tagged-value-address)
setm: size of (7 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: test1 4: ((8 integer) (9 boolean) <- maybe-coerce (7 tagged-value-address deref) (integer literal))
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1014) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 0: ((101 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1016 => (101 tagged-value-address)
setm: (101 tagged-value-address) <= 1016
sz: (101 tagged-value-address)
setm: size of (101 tagged-value-address) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 1: ((101 tagged-value-address deref) <- arg)
arg: nil 0 ((7 tagged-value-address deref) (integer literal))
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1012 tagged-value)
m: (7 tagged-value-address deref) 2
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1012 tagged-value)
sz: (7 tagged-value-address deref)
sz: (7 location)
m: (7 location) 1
sz: (7 location)
sz: (1012 tagged-value)
setm: (101 tagged-value-address deref) <= #(tagged record (integer 3 . nil))
sz: (101 tagged-value-address deref)
sz: (101 location)
m: (101 location) 1
sz: (101 location)
sz: (1016 tagged-value)
setm: size of (101 tagged-value-address deref) is 2
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 2: ((102 type) <- arg)
arg: nil 1 ((7 tagged-value-address deref) (integer literal))
setm: (102 type) <= integer
sz: (102 type)
setm: size of (102 type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 3: ((103 type) <- get (101 tagged-value-address deref) (0 offset))
sz: (1016 type)
m: (1016 type) 1
sz: (1016 type)
run: writing to oarg integer => (103 type)
setm: (103 type) <= integer
sz: (103 type)
setm: size of (103 type) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 4: ((104 boolean) <- eq (103 type) (102 type))
sz: (103 type)
m: (103 type) 1
sz: (103 type)
sz: (102 type)
m: (102 type) 1
sz: (102 type)
run: writing to oarg t => (104 boolean)
setm: (104 boolean) <= t
sz: (104 boolean)
setm: size of (104 boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 5: (jump-if (104 boolean) (1 offset))
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 34) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 7: ((105 location) <- get (101 tagged-value-address deref) (1 offset))
sz: (1017 location)
m: (1017 location) 1
sz: (1017 location)
run: writing to oarg 3 => (105 location)
setm: (105 location) <= 3
sz: (105 location)
setm: size of (105 location) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 3) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (9 t))
run: maybe-coerce 8: (reply (105 location) (104 boolean))
reply: ((105 location) (104 boolean)) ((8 integer) (9 boolean))
reply: (105 location) => (8 integer)
sz: (105 location)
m: (105 location) 1
sz: (105 location)
setm: (8 integer) <= 3
sz: (8 integer)
setm: size of (8 integer) is 1
reply: (104 boolean) => (9 boolean)
sz: (104 boolean)
m: (104 boolean) 1
sz: (104 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
setm: size of (9 boolean) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 3) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (8 3) (9 t))
run: test1 5: ((9 integer) <- add (5 integer) (8 integer))
sz: (5 integer)
m: (5 integer) 1
sz: (5 integer)
sz: (8 integer)
m: (8 integer) 1
sz: (8 integer)
add: 34 3
sz: (5 integer)
m: (5 integer) 1
sz: (5 integer)
sz: (8 integer)
m: (8 integer) 1
sz: (8 integer)
run: writing to oarg 37 => (9 integer)
setm: (9 integer) <= 37
sz: (9 integer)
setm: size of (9 integer) is 1
run: -- ((1 1000) (10 1010) (1000 boolean) (1001 t) (1002 boolean) (1004 boolean) (1005 t) (1006 boolean) (1007 t) (1008 boolean) (101 1016) (1010 integer) (1011 34) (1012 integer) (1013 3) (1014 integer) (1015 34) (1016 integer) (1017 3) (102 integer) (103 integer) (104 t) (105 3) (11 1012) (2 1002) (201 integer) (202 1) (203 t) (204 1012) (205 1012) (206 1013) (3 t) (4 1010) (5 34) (6 t) (7 1012) (8 3) (9 37))
run: test1 6: (reply (9 integer))
reply: ((9 integer)) ((12 integer))
reply: (9 integer) => (12 integer)
sz: (9 integer)
m: (9 integer) 1
sz: (9 integer)
setm: (12 integer) <= 37
sz: (12 integer)
setm: size of (12 integer) is 1
