cvt0: 0 ((1 integer) <- copy (34 literal)) -- nil
cvt0: 1 ((2 boolean) <- copy (nil literal)) -- nil
cvt0: 2 ((3 integer-boolean-pair-address) <- copy (1 literal)) -- nil
cvt0: 3 ((4 boolean) <- get (3 integer-boolean-pair-address deref) (1 offset)) -- nil
cvt0: 4 ((5 integer) <- get (3 integer-boolean-pair-address deref) (0 offset)) -- nil
cvt1: 0 copy ((1 integer))
cvt1: 1 copy ((2 boolean))
cvt1: 2 copy ((3 integer-boolean-pair-address))
cvt1: 3 get ((4 boolean))
cvt1: 4 get ((5 integer))
schedule: test1
run: -- nil
run: test1 0: ((1 integer) <- copy (34 literal))
sz: (34 literal)
m: (34 literal) literal
run: writing to oarg 34 => (1 integer)
setm: (1 integer) <= 34
sz: (1 integer)
size of : (1 integer) is 1
run: -- ((1 34))
run: test1 1: ((2 boolean) <- copy (nil literal))
sz: (nil literal)
m: (nil literal) literal
run: writing to oarg nil => (2 boolean)
setm: (2 boolean) <= nil
sz: (2 boolean)
size of : (2 boolean) is 1
run: -- ((1 34))
run: test1 2: ((3 integer-boolean-pair-address) <- copy (1 literal))
sz: (1 literal)
m: (1 literal) literal
run: writing to oarg 1 => (3 integer-boolean-pair-address)
setm: (3 integer-boolean-pair-address) <= 1
sz: (3 integer-boolean-pair-address)
size of : (3 integer-boolean-pair-address) is 1
run: -- ((1 34) (3 1))
run: test1 3: ((4 boolean) <- get (3 integer-boolean-pair-address deref) (1 offset))
sz: (2 boolean)
m: (2 boolean) 1
sz: (2 boolean)
run: writing to oarg nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
size of : (4 boolean) is 1
run: -- ((1 34) (3 1))
run: test1 4: ((5 integer) <- get (3 integer-boolean-pair-address deref) (0 offset))
sz: (1 integer)
m: (1 integer) 1
sz: (1 integer)
run: writing to oarg 34 => (5 integer)
setm: (5 integer) <= 34
sz: (5 integer)
size of : (5 integer) is 1
