c{0: 0 ((1 channel-address) <- new-channel (1 literal)) -- nil
c{0: 1 ((2 integer-address) <- new (integer literal)) -- nil
c{0: 2 ((2 integer-address deref) <- copy (34 literal)) -- nil
c{0: 3 ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) -- nil
c{0: 4 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{0: 5 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{1: 0 new-channel ((1 channel-address))
c{1: 1 new ((2 integer-address))
c{1: 2 copy ((2 integer-address deref))
c{1: 3 new-tagged-value ((3 tagged-value-address))
c{1: 4 write ((1 channel-address deref))
c{1: 5 write ((1 channel-address deref))
cn0: ((1 channel-address) <- new-channel (1 literal)) nil nil
maybe-add: (1 literal)
cn0: checking (1 channel-address)
maybe-add: (1 channel-address)
cn0: ((2 integer-address) <- new (integer literal)) nil nil
maybe-add: (integer literal)
cn0: checking (2 integer-address)
maybe-add: (2 integer-address)
cn0: ((2 integer-address deref) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (2 integer-address deref)
maybe-add: (2 integer-address deref)
cn0: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) nil nil
maybe-add: (integer-address literal)
maybe-add: (2 integer-address)
cn0: checking (3 tagged-value-address)
maybe-add: (3 tagged-value-address)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) nil nil
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) nil nil
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn1: update names nil nil
schedule: main
run: -- nil
run: 1 main 0: ((1 channel-address) <- new-channel (1 literal))
run: -- nil
run: 2 new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-channel 1: ((1 integer) <- arg)
arg: nil 0 (1)
setm: (1 integer) <= 1
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 integer) is 1
setm: (1 integer): setting 1001 to 1
run: -- ((1000 30) (1001 1))
run: 4 new-channel 2: ((2 tagged-value-array-address) <- new (tagged-value-array literal) (1 integer))
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1031 => (2 tagged-value-array-address)
setm: (2 tagged-value-array-address) <= 1031
sz: (2 tagged-value-array-address)
addr: (2 tagged-value-array-address)
addr: initial result: 2
addr: incrementing by 1000
setm: size of (2 tagged-value-array-address) is 1
setm: (2 tagged-value-array-address): setting 1002 to 1031
run: -- ((1000 30) (1001 1) (1002 1031) (1031 1))
run: 5 new-channel 3: ((3 channel-address) <- new (channel literal))
sizeof: channel
sizeof: boolean
sizeof: boolean
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: writing to oarg 1034 => (3 channel-address)
setm: (3 channel-address) <= 1034
sz: (3 channel-address)
addr: (3 channel-address)
addr: initial result: 3
addr: incrementing by 1000
setm: size of (3 channel-address) is 1
setm: (3 channel-address): setting 1003 to 1034
run: -- ((1000 30) (1001 1) (1002 1031) (1003 1034) (1031 1))
run: 6 new-channel 4: ((4 integer-address) <- get-address (3 channel-address deref) (2 offset))
record-info: (3 channel-address deref) (2 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1034
record-info: initial base 1034 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (2 offset) => 1036
run: writing to oarg 1036 => (4 integer-address)
setm: (4 integer-address) <= 1036
sz: (4 integer-address)
addr: (4 integer-address)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer-address) is 1
setm: (4 integer-address): setting 1004 to 1036
run: -- ((1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1031 1))
run: 7 new-channel 5: ((4 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (4 integer-address deref)
setm: (4 integer-address deref) <= 0
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1000
sz: (1036 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1000
addr: deref 1004 => 1036
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1036 to 0
run: -- ((1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1031 1) (1036 0))
run: 8 new-channel 6: ((5 integer-address) <- get-address (3 channel-address deref) (3 offset))
record-info: (3 channel-address deref) (3 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1034
record-info: initial base 1034 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (3 offset) => 1037
run: writing to oarg 1037 => (5 integer-address)
setm: (5 integer-address) <= 1037
sz: (5 integer-address)
addr: (5 integer-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 integer-address) is 1
setm: (5 integer-address): setting 1005 to 1037
run: -- ((1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1031 1) (1036 0))
run: 9 new-channel 7: ((5 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (5 integer-address deref)
setm: (5 integer-address deref) <= 0
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1037 integer)
addr: (5 integer-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1037
setm: size of (5 integer-address deref) is 1
setm: (5 integer-address deref): setting 1037 to 0
run: -- ((1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1031 1) (1036 0) (1037 0))
run: 10 new-channel 8: ((6 tagged-value-array-address-address) <- get-address (3 channel-address deref) (4 offset))
record-info: (3 channel-address deref) (4 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1034
record-info: initial base 1034 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (4 offset) => 1038
run: writing to oarg 1038 => (6 tagged-value-array-address-address)
setm: (6 tagged-value-array-address-address) <= 1038
sz: (6 tagged-value-array-address-address)
addr: (6 tagged-value-array-address-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 tagged-value-array-address-address) is 1
setm: (6 tagged-value-array-address-address): setting 1006 to 1038
run: -- ((1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0))
run: 11 new-channel 9: ((6 tagged-value-array-address-address deref) <- copy (2 tagged-value-array-address))
m: (2 tagged-value-array-address)
sz: (2 tagged-value-array-address)
addr: (2 tagged-value-array-address)
addr: initial result: 2
addr: incrementing by 1000
run: writing to oarg 1031 => (6 tagged-value-array-address-address deref)
setm: (6 tagged-value-array-address-address deref) <= 1031
sz: (6 tagged-value-array-address-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1000
sz: (1038 tagged-value-array-address)
addr: (6 tagged-value-array-address-address deref)
addr: initial result: 6
addr: incrementing by 1000
addr: deref 1006 => 1038
setm: size of (6 tagged-value-array-address-address deref) is 1
setm: (6 tagged-value-array-address-address deref): setting 1038 to 1031
run: -- ((1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031))
run: 12 new-channel 10: (reply (3 channel-address))
m: (3 channel-address)
sz: (3 channel-address)
addr: (3 channel-address)
addr: initial result: 3
addr: incrementing by 1000
reply: ((3 channel-address)) ((1 channel-address))
reply: 1034 => (1 channel-address)
setm: (1 channel-address) <= 1034
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1 to 1034
run: -- ((1 1034) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031))
run: 13 main 1: ((2 integer-address) <- new (integer literal))
sizeof: integer
run: writing to oarg 1039 => (2 integer-address)
setm: (2 integer-address) <= 1039
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 2 to 1039
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031))
run: 14 main 2: ((2 integer-address deref) <- copy (34 literal))
run: writing to oarg 34 => (2 integer-address deref)
setm: (2 integer-address deref) <= 34
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
addr: (2 location)
addr: initial result: 2
sz: (1039 integer)
addr: (2 integer-address deref)
addr: initial result: 2
addr: deref 2 => 1039
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1039 to 34
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34))
run: 15 main 3: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address))
m: (2 integer-address)
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34))
run: 16 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1040 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30))
run: 17 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer-address 1039)
setm: (1 type) <= integer-address
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1040
setm: size of (1 type) is 1
setm: (1 type): setting 1041 to integer-address
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address))
run: 18 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1040
sizeof: integer-address
run: writing to oarg 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1040
setm: size of (2 integer) is 1
setm: (2 integer): setting 1042 to 1
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1))
run: 19 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1040
run: writing to oarg t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1040
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1043 to t
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t))
run: 20 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1040
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t))
run: 21 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1071 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1071
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1040
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1044 to 1071
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071))
run: 22 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1040
addr: deref 1044 => 1071
record-info: initial base 1071 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1071
run: writing to oarg 1071 => (5 location)
setm: (5 location) <= 1071
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1040
setm: size of (5 location) is 1
setm: (5 location): setting 1045 to 1071
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071))
run: 23 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1040
run: writing to oarg integer-address => (5 location deref)
setm: (5 location deref) <= integer-address
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1040
sz: (1071 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1040
addr: deref 1045 => 1071
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1071 to integer-address
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1071 integer-address))
run: 24 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1040
addr: deref 1044 => 1071
record-info: initial base 1071 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1072
run: writing to oarg 1072 => (6 location)
setm: (6 location) <= 1072
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1040
setm: size of (6 location) is 1
setm: (6 location): setting 1046 to 1072
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address))
run: 25 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer-address 1039)
setm: (6 location deref) <= 1039
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1040
sz: (1072 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1040
addr: deref 1046 => 1072
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1072 to 1039
run: -- ((1 1034) (2 1039) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039))
run: 26 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1040
reply: ((4 tagged-value-address)) ((3 tagged-value-address))
reply: 1071 => (3 tagged-value-address)
setm: (3 tagged-value-address) <= 1071
sz: (3 tagged-value-address)
addr: (3 tagged-value-address)
addr: initial result: 3
setm: size of (3 tagged-value-address) is 1
setm: (3 tagged-value-address): setting 3 to 1071
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039))
run: 27 main 4: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1034 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1034
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1034 channel)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1071 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1071
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1071 tagged-value)
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039))
run: 28 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1073 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30))
run: 29 write 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1031 . nil)) #(tagged record (integer-address 1039 . nil)))
setm: (1 channel) <= #(tagged record (nil nil 0 0 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1073
setm: size of (1 channel) is 5
setm: (1 channel): setting 1074 to nil
setm: (1 channel): setting 1075 to nil
setm: (1 channel): setting 1076 to 0
setm: (1 channel): setting 1077 to 0
setm: (1 channel): setting 1078 to 1031
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031))
run: 30 write 2: ((6 tagged-value) <- arg)
arg: nil 1 (#(tagged record (nil nil 0 0 1031 . nil)) #(tagged record (integer-address 1039 . nil)))
setm: (6 tagged-value) <= #(tagged record (integer-address 1039 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1073
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1079 to integer-address
setm: (6 tagged-value): setting 1080 to 1039
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039))
run: 31 write 3: ((8 boolean) <- full? (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1073
sz: (1 channel)
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039))
run: 32 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1104 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30))
run: 33 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1031 . nil)))
setm: (1 channel) <= #(tagged record (nil nil 0 0 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1104
setm: size of (1 channel) is 5
setm: (1 channel): setting 1105 to nil
setm: (1 channel): setting 1106 to nil
setm: (1 channel): setting 1107 to 0
setm: (1 channel): setting 1108 to 0
setm: (1 channel): setting 1109 to 1031
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031))
run: 34 full? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1104
record-info: initial base 1105 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1107 integer
m: (1107 integer global)
sz: (1107 integer global)
addr: (1107 integer global)
addr: initial result: 1107
run: writing to oarg 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1104
setm: size of (6 integer) is 1
setm: (6 integer): setting 1110 to 0
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0))
run: 35 full? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1104
record-info: initial base 1105 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1108 integer
m: (1108 integer global)
sz: (1108 integer global)
addr: (1108 integer global)
addr: initial result: 1108
run: writing to oarg 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1104
setm: size of (7 integer) is 1
setm: (7 integer): setting 1111 to 0
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0))
run: 36 full? 4: ((8 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1104
record-info: initial base 1105 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1109 tagged-value-array-address
m: (1109 tagged-value-array-address global)
sz: (1109 tagged-value-array-address global)
addr: (1109 tagged-value-array-address global)
addr: initial result: 1109
run: writing to oarg 1031 => (8 tagged-value-array-address)
setm: (8 tagged-value-array-address) <= 1031
sz: (8 tagged-value-array-address)
addr: (8 tagged-value-array-address)
addr: initial result: 8
addr: incrementing by 1104
setm: size of (8 tagged-value-array-address) is 1
setm: (8 tagged-value-array-address): setting 1112 to 1031
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031))
run: 37 full? 5: ((9 integer) <- len (8 tagged-value-array-address deref))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1104
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1104
addr: deref 1112 => 1031
run: writing to oarg 1 => (9 integer)
setm: (9 integer) <= 1
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1104
setm: size of (9 integer) is 1
setm: (9 integer): setting 1113 to 1
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031) (1113 1))
run: 38 full? 6: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1104
add: 0 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1104
run: writing to oarg 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1104
setm: size of (7 integer) is 1
setm: (7 integer): setting 1111 to 1
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 1) (1112 1031) (1113 1))
run: 39 full? 7: ((10 boolean) <- lt (7 integer) (9 integer))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1104
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1104
run: writing to oarg nil => (10 boolean)
setm: (10 boolean) <= nil
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1104
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1114 to nil
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 1) (1112 1031) (1113 1))
run: 40 full? 8: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1104
jump: checking that nil is t
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 1) (1112 1031) (1113 1))
run: 41 full? 9: ((7 integer) <- copy (0 literal))
run: writing to oarg 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1104
setm: size of (7 integer) is 1
setm: (7 integer): setting 1111 to 0
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031) (1113 1))
run: 42 full? 10: ((11 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1104
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1104
run: writing to oarg t => (11 boolean)
setm: (11 boolean) <= t
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1104
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1115 to t
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031) (1113 1) (1115 t))
run: 43 full? 11: (reply (11 boolean))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1104
reply: ((11 boolean)) ((8 boolean))
reply: t => (8 boolean)
setm: (8 boolean) <= t
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1073
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1081 to t
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1081 t) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031) (1113 1) (1115 t))
run: 44 write 4: (jump-unless (8 boolean) (3 offset))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1073
jump: checking that t is not t
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1081 t) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031) (1113 1) (1115 t))
run: 45 write 5: ((9 boolean-address) <- get-address (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1073
record-info: initial base 1074 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (1 offset) => 1075
run: writing to oarg 1075 => (9 boolean-address)
setm: (9 boolean-address) <= 1075
sz: (9 boolean-address)
addr: (9 boolean-address)
addr: initial result: 9
addr: incrementing by 1073
setm: size of (9 boolean-address) is 1
setm: (9 boolean-address): setting 1082 to 1075
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1081 t) (1082 1075) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031) (1113 1) (1115 t))
run: 46 write 6: ((9 boolean-address deref) <- copy (nil literal))
run: writing to oarg nil => (9 boolean-address deref)
setm: (9 boolean-address deref) <= nil
sz: (9 boolean-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1073
sz: (1075 boolean)
addr: (9 boolean-address deref)
addr: initial result: 9
addr: incrementing by 1073
addr: deref 1082 => 1075
setm: size of (9 boolean-address deref) is 1
setm: (9 boolean-address deref): setting 1075 to nil
run: -- ((1 1034) (2 1039) (3 1071) (1000 30) (1001 1) (1002 1031) (1003 1034) (1004 1036) (1005 1037) (1006 1038) (1031 1) (1036 0) (1037 0) (1038 1031) (1039 34) (1040 30) (1041 integer-address) (1042 1) (1043 t) (1044 1071) (1045 1071) (1046 1072) (1071 integer-address) (1072 1039) (1073 30) (1076 0) (1077 0) (1078 1031) (1079 integer-address) (1080 1039) (1081 t) (1082 1075) (1104 30) (1107 0) (1108 0) (1109 1031) (1110 0) (1111 0) (1112 1031) (1113 1) (1115 t))
run: 47 write 7: (sleep (9 boolean-address))
schedule: pushing write to sleep queue
schedule: skipping cycle 47
