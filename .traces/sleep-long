cvt0: 0 (sleep (20 literal)) -- nil
cvt0: 1 ((1 integer) <- copy (3 literal)) -- nil
cvt0: 2 ((1 integer) <- copy (3 literal)) -- nil
cvt1: 0 sleep nil
cvt1: 1 copy ((1 integer))
cvt1: 2 copy ((1 integer))
cvt0: 0 ((2 integer) <- copy (4 literal)) -- nil
cvt0: 1 ((2 integer) <- copy (4 literal)) -- nil
cvt1: 0 copy ((2 integer))
cvt1: 1 copy ((2 integer))
schedule: f1
run: -- nil
run: 1 f1 0: (sleep (20 literal))
run: sleeping until 21
schedule: pushing f1 to sleep queue
schedule: f2
run: -- nil
run: 2 f2 0: ((2 integer) <- copy (4 literal))
run: writing to oarg 4 => (2 integer)
setm: (2 integer) <= 4
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 4
schedule: f2
run: -- ((2 4))
run: 3 f2 1: ((2 integer) <- copy (4 literal))
run: writing to oarg 4 => (2 integer)
setm: (2 integer) <= 4
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 4
schedule: f2
schedule: skipping cycle 3
schedule: skipping cycle 4
schedule: skipping cycle 5
schedule: skipping cycle 6
schedule: skipping cycle 7
schedule: skipping cycle 8
schedule: skipping cycle 9
schedule: skipping cycle 10
schedule: skipping cycle 11
schedule: skipping cycle 12
schedule: skipping cycle 13
schedule: skipping cycle 14
schedule: skipping cycle 15
schedule: skipping cycle 16
schedule: skipping cycle 17
schedule: skipping cycle 18
schedule: skipping cycle 19
schedule: skipping cycle 20
schedule: skipping cycle 21
schedule: waking up f1
schedule: f1
run: -- ((2 4))
run: 23 f1 1: ((1 integer) <- copy (3 literal))
run: writing to oarg 3 => (1 integer)
setm: (1 integer) <= 3
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 3
schedule: f1
run: -- ((1 3) (2 4))
run: 24 f1 2: ((1 integer) <- copy (3 literal))
run: writing to oarg 3 => (1 integer)
setm: (1 integer) <= 3
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 3
schedule: f1
