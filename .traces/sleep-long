c{0: 0 (sleep (20 literal)) -- nil
c{0: 1 ((1 integer) <- copy (3 literal)) -- nil
c{0: 2 ((1 integer) <- copy (3 literal)) -- nil
c{1: 0 sleep nil
c{1: 1 copy ((1 integer))
c{1: 2 copy ((1 integer))
cn0: (sleep (20 literal)) nil nil
maybe-add: (20 literal)
cn0: ((1 integer) <- copy (3 literal)) nil nil
maybe-add: (3 literal)
cn0: checking (1 integer)
maybe-add: (1 integer)
cn0: ((1 integer) <- copy (3 literal)) nil nil
maybe-add: (3 literal)
cn0: checking (1 integer)
maybe-add: (1 integer)
cn1: update names nil nil
c{0: 0 ((2 integer) <- copy (4 literal)) -- nil
c{0: 1 ((2 integer) <- copy (4 literal)) -- nil
c{1: 0 copy ((2 integer))
c{1: 1 copy ((2 integer))
cn0: ((2 integer) <- copy (4 literal)) nil nil
maybe-add: (4 literal)
cn0: checking (2 integer)
maybe-add: (2 integer)
cn0: ((2 integer) <- copy (4 literal)) nil nil
maybe-add: (4 literal)
cn0: checking (2 integer)
maybe-add: (2 integer)
cn1: update names nil nil
schedule: f1
run: -- nil
run: 1 f1 0: (sleep (20 literal))
run: sleeping until 21
schedule: f2
run: -- nil
run: 2 f2 0: ((2 integer) <- copy (4 literal))
run: 4 => (2 integer)
setm: (2 integer) <= 4
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 4
run: -- ((2 4))
run: 3 f2 1: ((2 integer) <- copy (4 literal))
run: 4 => (2 integer)
setm: (2 integer) <= 4
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 4
