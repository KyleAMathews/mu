cvt0: 0 ((1 integer-address) <- copy (2 literal)) -- nil
cvt0: 1 ((2 integer) <- copy (34 literal)) -- nil
cvt0: 2 ((1 integer-address deref) <- add (2 integer) (2 literal)) -- nil
cvt1: 0 copy ((1 integer-address))
cvt1: 1 copy ((2 integer))
cvt1: 2 add ((1 integer-address deref))
schedule: test1
run: -- nil
run: test1 0: ((1 integer-address) <- copy (2 literal))
sz: (2 literal)
m: (2 literal) literal
run: writing to oarg 2 => (1 integer-address)
setm: (1 integer-address) <= 2
sz: (1 integer-address)
setm: size of (1 integer-address) is 1
run: -- ((1 2))
run: test1 1: ((2 integer) <- copy (34 literal))
sz: (34 literal)
m: (34 literal) literal
run: writing to oarg 34 => (2 integer)
setm: (2 integer) <= 34
sz: (2 integer)
setm: size of (2 integer) is 1
run: -- ((1 2) (2 34))
run: test1 2: ((1 integer-address deref) <- add (2 integer) (2 literal))
sz: (2 integer)
m: (2 integer) 1
sz: (2 integer)
sz: (2 literal)
m: (2 literal) literal
add: 34 2
sz: (2 integer)
m: (2 integer) 1
sz: (2 integer)
sz: (2 literal)
m: (2 literal) literal
run: writing to oarg 36 => (1 integer-address deref)
setm: (1 integer-address deref) <= 36
sz: (1 integer-address deref)
sz: (1 location)
m: (1 location) 1
sz: (1 location)
sz: (2 integer)
setm: size of (1 integer-address deref) is 1
