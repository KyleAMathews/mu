cvt0: 0 ((1 integer) <- copy (34 literal)) -- nil
cvt0: 1 ((2 boolean) <- copy (t literal)) -- nil
cvt0: 2 ((3 integer-boolean-pair-address) <- copy (1 literal)) -- nil
cvt0: 3 ((4 boolean-address) <- get-address (3 integer-boolean-pair-address deref) (1 offset)) -- nil
cvt1: 0 copy ((1 integer))
cvt1: 1 copy ((2 boolean))
cvt1: 2 copy ((3 integer-boolean-pair-address))
cvt1: 3 get-address ((4 boolean-address))
schedule: main
run: -- nil
run: main 0: ((1 integer) <- copy (34 literal))
run: writing to oarg 34 => (1 integer)
setm: (1 integer) <= 34
sz: (1 integer)
setm: size of (1 integer) is 1
run: -- ((1 34))
run: main 1: ((2 boolean) <- copy (t literal))
run: writing to oarg t => (2 boolean)
setm: (2 boolean) <= t
sz: (2 boolean)
setm: size of (2 boolean) is 1
run: -- ((1 34) (2 t))
run: main 2: ((3 integer-boolean-pair-address) <- copy (1 literal))
run: writing to oarg 1 => (3 integer-boolean-pair-address)
setm: (3 integer-boolean-pair-address) <= 1
sz: (3 integer-boolean-pair-address)
setm: size of (3 integer-boolean-pair-address) is 1
run: -- ((1 34) (2 t) (3 1))
run: main 3: ((4 boolean-address) <- get-address (3 integer-boolean-pair-address deref) (1 offset))
get-address: (3 integer-boolean-pair-address deref).1
get-address: after: (1 integer-boolean-pair)
run: writing to oarg 2 => (4 boolean-address)
setm: (4 boolean-address) <= 2
sz: (4 boolean-address)
setm: size of (4 boolean-address) is 1
