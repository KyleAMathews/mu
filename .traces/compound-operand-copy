cvt0: 0 ((1 integer) <- copy (34 literal)) -- nil
cvt0: 1 ((2 boolean) <- copy (nil literal)) -- nil
cvt0: 2 ((4 boolean) <- copy (t literal)) -- nil
cvt0: 3 ((3 integer-boolean-pair) <- copy (1 integer-boolean-pair)) -- nil
cvt1: 0 copy ((1 integer))
cvt1: 1 copy ((2 boolean))
cvt1: 2 copy ((4 boolean))
cvt1: 3 copy ((3 integer-boolean-pair))
schedule: test1
run: -- nil
run: test1 0: ((1 integer) <- copy (34 literal))
sz: (34 literal)
m: (34 literal) literal
run: writing to oarg 34 => (1 integer)
setm: (1 integer) <= 34
sz: (1 integer)
setm: size of (1 integer) is 1
run: -- ((1 34))
run: test1 1: ((2 boolean) <- copy (nil literal))
sz: (nil literal)
m: (nil literal) literal
run: writing to oarg nil => (2 boolean)
setm: (2 boolean) <= nil
sz: (2 boolean)
setm: size of (2 boolean) is 1
run: -- ((1 34))
run: test1 2: ((4 boolean) <- copy (t literal))
sz: (t literal)
m: (t literal) literal
run: writing to oarg t => (4 boolean)
setm: (4 boolean) <= t
sz: (4 boolean)
setm: size of (4 boolean) is 1
run: -- ((1 34) (4 t))
run: test1 3: ((3 integer-boolean-pair) <- copy (1 integer-boolean-pair))
sz: (1 integer-boolean-pair)
m: (1 integer-boolean-pair) 2
sz: (1 integer-boolean-pair)
sz: (1 integer-boolean-pair)
run: writing to oarg #(tagged record (34 nil . nil)) => (3 integer-boolean-pair)
setm: (3 integer-boolean-pair) <= #(tagged record (34 nil . nil))
sz: (3 integer-boolean-pair)
setm: size of (3 integer-boolean-pair) is 2
