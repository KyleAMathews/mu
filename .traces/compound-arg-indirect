c{0: 0 ((4 integer-boolean-pair) <- arg) -- nil
c{1: 0 arg ((4 integer-boolean-pair))
cn0: ((4 integer-boolean-pair) <- arg) nil nil
cn0: checking (4 integer-boolean-pair)
maybe-add: (4 integer-boolean-pair)
cn1: update names nil nil
c{0: 0 ((1 integer) <- copy (34 literal)) -- nil
c{0: 1 ((2 boolean) <- copy (nil literal)) -- nil
c{0: 2 ((3 integer-boolean-pair-address) <- copy (1 literal)) -- nil
c{0: 3 (test1 (3 integer-boolean-pair-address deref)) -- nil
c{1: 0 copy ((1 integer))
c{1: 1 copy ((2 boolean))
c{1: 2 copy ((3 integer-boolean-pair-address))
c{1: 3 test1 nil
cn0: ((1 integer) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (1 integer)
maybe-add: (1 integer)
cn0: ((2 boolean) <- copy (nil literal)) nil nil
maybe-add: (nil literal)
cn0: checking (2 boolean)
maybe-add: (2 boolean)
cn0: ((3 integer-boolean-pair-address) <- copy (1 literal)) nil nil
maybe-add: (1 literal)
cn0: checking (3 integer-boolean-pair-address)
maybe-add: (3 integer-boolean-pair-address)
cn0: (test1 (3 integer-boolean-pair-address deref)) nil nil
maybe-add: (3 integer-boolean-pair-address deref)
cn1: update names nil nil
schedule: main
run: -- nil
run: 1 main 0: ((1 integer) <- copy (34 literal))
run: writing to oarg 34 => (1 integer)
setm: (1 integer) <= 34
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 34
run: -- ((1 34))
run: 2 main 1: ((2 boolean) <- copy (nil literal))
run: writing to oarg nil => (2 boolean)
setm: (2 boolean) <= nil
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
setm: size of (2 boolean) is 1
setm: (2 boolean): setting 2 to nil
run: -- ((1 34))
run: 3 main 2: ((3 integer-boolean-pair-address) <- copy (1 literal))
run: writing to oarg 1 => (3 integer-boolean-pair-address)
setm: (3 integer-boolean-pair-address) <= 1
sz: (3 integer-boolean-pair-address)
addr: (3 integer-boolean-pair-address)
addr: initial result: 3
setm: size of (3 integer-boolean-pair-address) is 1
setm: (3 integer-boolean-pair-address): setting 3 to 1
run: -- ((1 34) (3 1))
run: 4 main 3: (test1 (3 integer-boolean-pair-address deref))
m: (3 integer-boolean-pair-address deref)
sz: (3 integer-boolean-pair-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1 integer-boolean-pair)
addr: (3 integer-boolean-pair-address deref)
addr: initial result: 3
addr: deref 3 => 1
sz: (3 integer-boolean-pair-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1 integer-boolean-pair)
run: -- ((1 34) (3 1))
run: 5 test1 0: ((4 integer-boolean-pair) <- arg)
arg: nil 0 (#(tagged record (34 nil . nil)))
setm: (4 integer-boolean-pair) <= #(tagged record (34 nil . nil))
sz: (4 integer-boolean-pair)
addr: (4 integer-boolean-pair)
addr: initial result: 4
setm: size of (4 integer-boolean-pair) is 2
setm: (4 integer-boolean-pair): setting 4 to 34
setm: (4 integer-boolean-pair): setting 5 to nil
