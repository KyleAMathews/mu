cvt0: 0 ((default-scope scope-address) <- new (scope literal) (30 literal)) -- nil
cvt0: 1 ((nrows integer) <- arg) -- nil
cvt0: 2 ((ncols integer) <- arg) -- nil
cvt0: 3 ((result screen-address) <- new (screen literal) (nrows integer)) -- nil
cvt0: 4 ((rowidx integer) <- copy (0 literal)) -- nil
cvt0: 5 ((curr-line-address-address line-address-address) <- index-address (result screen-address deref) (rowidx integer)) -- ((open 5))
cvt0: 6 ((curr-line-address-address line-address-address deref) <- new (line literal) (ncols integer)) -- ((open 5))
cvt0: 7 ((curr-line-address line-address) <- copy (curr-line-address-address line-address-address deref)) -- ((open 5))
cvt0: 8 ((rowidx integer) <- add (rowidx integer) (1 literal)) -- ((open 5))
cvt0: 9 ((x boolean) <- neq (rowidx integer) (nrows integer)) -- ((open 5))
cvt0: 10 (continue-if (x boolean)) -- ((open 5))
cvt0: 11 (reply (result screen-address)) -- ((close 11) (open 5))
cvt1: 0 new ((default-scope scope-address))
cvt1: 1 arg ((nrows integer))
cvt1: 2 arg ((ncols integer))
cvt1: 3 new ((result screen-address))
cvt1: 4 copy ((rowidx integer))
cvt1: 5 begin nil
cvt1: 5 index-address ((curr-line-address-address line-address-address))
cvt1: 6 new ((curr-line-address-address line-address-address deref))
cvt1: 7 copy ((curr-line-address line-address))
cvt1: 8 add ((rowidx integer))
cvt1: 9 neq ((x boolean))
cvt1: 10 continue-if nil
cvt0: continue-if: (continue-if (x boolean)) => 4
cvt1: 11 reply nil
cvt0: 0 ((2001 screen-address) <- new-screen (5 literal) (5 literal)) -- nil
cvt1: 0 new-screen ((2001 screen-address))
schedule: test-new-screen
run: -- nil
run: test-new-screen 0: ((2001 screen-address) <- new-screen (5 literal) (5 literal))
run: -- nil
run: new-screen 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: new-screen 1: ((1 integer) <- arg)
arg: nil 0 (5 5)
setm: (1 integer) <= 5
sz: (1 integer)
setm: size of (1 integer) is 1
run: -- ((1000 30) (1001 5))
run: new-screen 2: ((2 integer) <- arg)
arg: nil 1 (5 5)
setm: (2 integer) <= 5
sz: (2 integer)
setm: size of (2 integer) is 1
run: -- ((1000 30) (1001 5) (1002 5))
run: new-screen 3: ((3 screen-address) <- new (screen literal) (1 integer))
m: (1 integer)
sz: (1 integer)
sizeof: line-address
run: writing to oarg 1031 => (3 screen-address)
setm: (3 screen-address) <= 1031
sz: (3 screen-address)
setm: size of (3 screen-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1031 5))
run: new-screen 4: ((4 integer) <- copy (0 literal))
run: writing to oarg 0 => (4 integer)
setm: (4 integer) <= 0
sz: (4 integer)
setm: size of (4 integer) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1031 5))
run: new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
m: (4 integer)
sz: (4 integer)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
sz: (1031 integer)
run: writing to oarg 1032 => (5 line-address-address)
setm: (5 line-address-address) <= 1032
sz: (5 line-address-address)
setm: size of (5 line-address-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1031 5))
run: new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
sizeof: character
run: writing to oarg 1037 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1037
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1032 line-address)
setm: size of (5 line-address-address deref) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1031 5) (1032 1037) (1037 5))
run: new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1032 line-address)
run: writing to oarg 1037 => (6 line-address)
setm: (6 line-address) <= 1037
sz: (6 line-address)
setm: size of (6 line-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 0) (1005 1032) (1006 1037) (1031 5) (1032 1037) (1037 5))
run: new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 0 1
m: (4 integer)
sz: (4 integer)
run: writing to oarg 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
setm: size of (4 integer) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1031 5) (1032 1037) (1037 5))
run: new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
neq: 1 5
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
run: writing to oarg t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
setm: size of (7 boolean) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1032) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
m: (4 integer)
sz: (4 integer)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
sz: (1031 integer)
run: writing to oarg 1033 => (5 line-address-address)
setm: (5 line-address-address) <= 1033
sz: (5 line-address-address)
setm: size of (5 line-address-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1037) (1007 t) (1031 5) (1032 1037) (1037 5))
run: new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
sizeof: character
run: writing to oarg 1043 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1043
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1033 line-address)
setm: size of (5 line-address-address deref) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1037) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1033 line-address)
run: writing to oarg 1043 => (6 line-address)
setm: (6 line-address) <= 1043
sz: (6 line-address)
setm: size of (6 line-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 1) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 1 1
m: (4 integer)
sz: (4 integer)
run: writing to oarg 2 => (4 integer)
setm: (4 integer) <= 2
sz: (4 integer)
setm: size of (4 integer) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
neq: 2 5
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
run: writing to oarg t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
setm: size of (7 boolean) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1033) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
m: (4 integer)
sz: (4 integer)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
sz: (1031 integer)
run: writing to oarg 1034 => (5 line-address-address)
setm: (5 line-address-address) <= 1034
sz: (5 line-address-address)
setm: size of (5 line-address-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1037 5) (1043 5))
run: new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
sizeof: character
run: writing to oarg 1049 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1049
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1034 line-address)
setm: size of (5 line-address-address deref) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1043) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1034 line-address)
run: writing to oarg 1049 => (6 line-address)
setm: (6 line-address) <= 1049
sz: (6 line-address)
setm: size of (6 line-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 2) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 2 1
m: (4 integer)
sz: (4 integer)
run: writing to oarg 3 => (4 integer)
setm: (4 integer) <= 3
sz: (4 integer)
setm: size of (4 integer) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
neq: 3 5
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
run: writing to oarg t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
setm: size of (7 boolean) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1034) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
m: (4 integer)
sz: (4 integer)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
sz: (1031 integer)
run: writing to oarg 1035 => (5 line-address-address)
setm: (5 line-address-address) <= 1035
sz: (5 line-address-address)
setm: size of (5 line-address-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1037 5) (1043 5) (1049 5))
run: new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
sizeof: character
run: writing to oarg 1055 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1055
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1035 line-address)
setm: size of (5 line-address-address deref) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1049) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1035 line-address)
run: writing to oarg 1055 => (6 line-address)
setm: (6 line-address) <= 1055
sz: (6 line-address)
setm: size of (6 line-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 3) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 3 1
m: (4 integer)
sz: (4 integer)
run: writing to oarg 4 => (4 integer)
setm: (4 integer) <= 4
sz: (4 integer)
setm: size of (4 integer) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
neq: 4 5
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
run: writing to oarg t => (7 boolean)
setm: (7 boolean) <= t
sz: (7 boolean)
setm: size of (7 boolean) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1035) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: new-screen 5: ((5 line-address-address) <- index-address (3 screen-address deref) (4 integer))
m: (4 integer)
sz: (4 integer)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
sz: (1031 integer)
run: writing to oarg 1036 => (5 line-address-address)
setm: (5 line-address-address) <= 1036
sz: (5 line-address-address)
setm: size of (5 line-address-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1037 5) (1043 5) (1049 5) (1055 5))
run: new-screen 6: ((5 line-address-address deref) <- new (line literal) (2 integer))
m: (2 integer)
sz: (2 integer)
sizeof: character
run: writing to oarg 1061 => (5 line-address-address deref)
setm: (5 line-address-address deref) <= 1061
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1036 line-address)
setm: size of (5 line-address-address deref) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1055) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: new-screen 7: ((6 line-address) <- copy (5 line-address-address deref))
m: (5 line-address-address deref)
sz: (5 line-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1036 line-address)
run: writing to oarg 1061 => (6 line-address)
setm: (6 line-address) <= 1061
sz: (6 line-address)
setm: size of (6 line-address) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 4) (1005 1036) (1006 1061) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: new-screen 8: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 4 1
m: (4 integer)
sz: (4 integer)
run: writing to oarg 5 => (4 integer)
setm: (4 integer) <= 5
sz: (4 integer)
setm: size of (4 integer) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1007 t) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: new-screen 9: ((7 boolean) <- neq (4 integer) (1 integer))
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
neq: 5 5
m: (4 integer)
sz: (4 integer)
m: (1 integer)
sz: (1 integer)
run: writing to oarg nil => (7 boolean)
setm: (7 boolean) <= nil
sz: (7 boolean)
setm: size of (7 boolean) is 1
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: new-screen 10: (jump-if (7 boolean) (-6 offset))
m: (7 boolean)
sz: (7 boolean)
run: -- ((1000 30) (1001 5) (1002 5) (1003 1031) (1004 5) (1005 1036) (1006 1061) (1031 5) (1032 1037) (1033 1043) (1034 1049) (1035 1055) (1036 1061) (1037 5) (1043 5) (1049 5) (1055 5) (1061 5))
run: new-screen 11: (reply (3 screen-address))
m: (3 screen-address)
sz: (3 screen-address)
reply: ((3 screen-address)) ((2001 screen-address))
reply: 1031 => (2001 screen-address)
setm: (2001 screen-address) <= 1031
sz: (2001 screen-address)
setm: size of (2001 screen-address) is 1
