c{0: 0 ((1 channel-address) <- new-channel (3 literal)) -- nil
c{0: 1 ((2 integer-address) <- new (integer literal)) -- nil
c{0: 2 ((2 integer-address deref) <- copy (34 literal)) -- nil
c{0: 3 ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) -- nil
c{0: 4 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{0: 5 ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) -- nil
c{0: 6 (_ (1 channel-address deref) <- read (1 channel-address deref)) -- nil
c{0: 7 ((4 boolean) <- empty? (1 channel-address deref)) -- nil
c{0: 8 ((5 boolean) <- full? (1 channel-address deref)) -- nil
c{1: 0 new-channel ((1 channel-address))
c{1: 1 new ((2 integer-address))
c{1: 2 copy ((2 integer-address deref))
c{1: 3 new-tagged-value ((3 tagged-value-address))
c{1: 4 write ((1 channel-address deref))
c{1: 5 write ((1 channel-address deref))
c{1: 6 read (_ (1 channel-address deref))
c{1: 7 empty? ((4 boolean))
c{1: 8 full? ((5 boolean))
cn0: ((1 channel-address) <- new-channel (3 literal)) nil nil
maybe-add: (3 literal)
cn0: checking (1 channel-address)
maybe-add: (1 channel-address)
cn0: ((2 integer-address) <- new (integer literal)) nil nil
maybe-add: (integer literal)
cn0: checking (2 integer-address)
maybe-add: (2 integer-address)
cn0: ((2 integer-address deref) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (2 integer-address deref)
maybe-add: (2 integer-address deref)
cn0: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address)) nil nil
maybe-add: (integer-address literal)
maybe-add: (2 integer-address)
cn0: checking (3 tagged-value-address)
maybe-add: (3 tagged-value-address)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) nil nil
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref)) nil nil
maybe-add: (1 channel-address deref)
maybe-add: (3 tagged-value-address deref)
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: (_ (1 channel-address deref) <- read (1 channel-address deref)) nil nil
maybe-add: (1 channel-address deref)
cn0: checking _
cn0: checking (1 channel-address deref)
maybe-add: (1 channel-address deref)
cn0: ((4 boolean) <- empty? (1 channel-address deref)) nil nil
maybe-add: (1 channel-address deref)
cn0: checking (4 boolean)
maybe-add: (4 boolean)
cn0: ((5 boolean) <- full? (1 channel-address deref)) nil nil
maybe-add: (1 channel-address deref)
cn0: checking (5 boolean)
maybe-add: (5 boolean)
cn1: update names nil nil
schedule: main
run: -- nil
run: 1 main 0: ((1 channel-address) <- new-channel (3 literal))
run: -- nil
run: 2 new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-channel 1: ((1 integer) <- arg)
arg: nil 0 (3)
setm: (1 integer) <= 3
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 integer) is 1
setm: (1 integer): setting 1001 to 3
run: -- ((1000 30) (1001 3))
run: 4 new-channel 2: ((1 integer) <- add (1 integer) (1 literal))
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
add: 3 1
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
run: writing to oarg 4 => (1 integer)
setm: (1 integer) <= 4
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 integer) is 1
setm: (1 integer): setting 1001 to 4
run: -- ((1000 30) (1001 4))
run: 5 new-channel 3: ((2 tagged-value-array-address) <- new (tagged-value-array literal) (1 integer))
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
addr: incrementing by 1000
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1031 => (2 tagged-value-array-address)
setm: (2 tagged-value-array-address) <= 1031
sz: (2 tagged-value-array-address)
addr: (2 tagged-value-array-address)
addr: initial result: 2
addr: incrementing by 1000
setm: size of (2 tagged-value-array-address) is 1
setm: (2 tagged-value-array-address): setting 1002 to 1031
run: -- ((1000 30) (1001 4) (1002 1031) (1031 4))
run: 6 new-channel 4: ((3 channel-address) <- new (channel literal))
sizeof: channel
sizeof: boolean
sizeof: boolean
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: writing to oarg 1040 => (3 channel-address)
setm: (3 channel-address) <= 1040
sz: (3 channel-address)
addr: (3 channel-address)
addr: initial result: 3
addr: incrementing by 1000
setm: size of (3 channel-address) is 1
setm: (3 channel-address): setting 1003 to 1040
run: -- ((1000 30) (1001 4) (1002 1031) (1003 1040) (1031 4))
run: 7 new-channel 5: ((4 integer-address) <- get-address (3 channel-address deref) (2 offset))
record-info: (3 channel-address deref) (2 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1040
record-info: initial base 1040 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (2 offset) => 1042
run: writing to oarg 1042 => (4 integer-address)
setm: (4 integer-address) <= 1042
sz: (4 integer-address)
addr: (4 integer-address)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 integer-address) is 1
setm: (4 integer-address): setting 1004 to 1042
run: -- ((1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1031 4))
run: 8 new-channel 6: ((4 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (4 integer-address deref)
setm: (4 integer-address deref) <= 0
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1000
sz: (1042 integer)
addr: (4 integer-address deref)
addr: initial result: 4
addr: incrementing by 1000
addr: deref 1004 => 1042
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1042 to 0
run: -- ((1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1031 4) (1042 0))
run: 9 new-channel 7: ((5 integer-address) <- get-address (3 channel-address deref) (3 offset))
record-info: (3 channel-address deref) (3 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1040
record-info: initial base 1040 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (3 offset) => 1043
run: writing to oarg 1043 => (5 integer-address)
setm: (5 integer-address) <= 1043
sz: (5 integer-address)
addr: (5 integer-address)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 integer-address) is 1
setm: (5 integer-address): setting 1005 to 1043
run: -- ((1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1031 4) (1042 0))
run: 10 new-channel 8: ((5 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (5 integer-address deref)
setm: (5 integer-address deref) <= 0
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1043 integer)
addr: (5 integer-address deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1043
setm: size of (5 integer-address deref) is 1
setm: (5 integer-address deref): setting 1043 to 0
run: -- ((1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1031 4) (1042 0) (1043 0))
run: 11 new-channel 9: ((6 tagged-value-array-address-address) <- get-address (3 channel-address deref) (4 offset))
record-info: (3 channel-address deref) (4 offset)
addr: (3 channel-address deref)
addr: initial result: 3
addr: incrementing by 1000
addr: deref 1003 => 1040
record-info: initial base 1040 type ((address t) (elem channel) (size 1))
record-info: (3 channel-address deref) requests deref => ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (3 channel-address deref) (4 offset) => 1044
run: writing to oarg 1044 => (6 tagged-value-array-address-address)
setm: (6 tagged-value-array-address-address) <= 1044
sz: (6 tagged-value-array-address-address)
addr: (6 tagged-value-array-address-address)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 tagged-value-array-address-address) is 1
setm: (6 tagged-value-array-address-address): setting 1006 to 1044
run: -- ((1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0))
run: 12 new-channel 10: ((6 tagged-value-array-address-address deref) <- copy (2 tagged-value-array-address))
m: (2 tagged-value-array-address)
sz: (2 tagged-value-array-address)
addr: (2 tagged-value-array-address)
addr: initial result: 2
addr: incrementing by 1000
run: writing to oarg 1031 => (6 tagged-value-array-address-address deref)
setm: (6 tagged-value-array-address-address deref) <= 1031
sz: (6 tagged-value-array-address-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1000
sz: (1044 tagged-value-array-address)
addr: (6 tagged-value-array-address-address deref)
addr: initial result: 6
addr: incrementing by 1000
addr: deref 1006 => 1044
setm: size of (6 tagged-value-array-address-address deref) is 1
setm: (6 tagged-value-array-address-address deref): setting 1044 to 1031
run: -- ((1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031))
run: 13 new-channel 11: (reply (3 channel-address))
m: (3 channel-address)
sz: (3 channel-address)
addr: (3 channel-address)
addr: initial result: 3
addr: incrementing by 1000
reply: ((3 channel-address)) ((1 channel-address))
reply: 1040 => (1 channel-address)
setm: (1 channel-address) <= 1040
sz: (1 channel-address)
addr: (1 channel-address)
addr: initial result: 1
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1 to 1040
run: -- ((1 1040) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031))
run: 14 main 1: ((2 integer-address) <- new (integer literal))
sizeof: integer
run: writing to oarg 1045 => (2 integer-address)
setm: (2 integer-address) <= 1045
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 2 to 1045
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031))
run: 15 main 2: ((2 integer-address deref) <- copy (34 literal))
run: writing to oarg 34 => (2 integer-address deref)
setm: (2 integer-address deref) <= 34
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
addr: (2 location)
addr: initial result: 2
sz: (1045 integer)
addr: (2 integer-address deref)
addr: initial result: 2
addr: deref 2 => 1045
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1045 to 34
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34))
run: 16 main 3: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address))
m: (2 integer-address)
sz: (2 integer-address)
addr: (2 integer-address)
addr: initial result: 2
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34))
run: 17 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1046 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30))
run: 18 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer-address 1045)
setm: (1 type) <= integer-address
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1046
setm: size of (1 type) is 1
setm: (1 type): setting 1047 to integer-address
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address))
run: 19 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1046
sizeof: integer-address
run: writing to oarg 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1046
setm: size of (2 integer) is 1
setm: (2 integer): setting 1048 to 1
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1))
run: 20 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1046
run: writing to oarg t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1046
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1049 to t
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t))
run: 21 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1046
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t))
run: 22 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1077 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1077
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1046
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1050 to 1077
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077))
run: 23 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1046
addr: deref 1050 => 1077
record-info: initial base 1077 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1077
run: writing to oarg 1077 => (5 location)
setm: (5 location) <= 1077
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1046
setm: size of (5 location) is 1
setm: (5 location): setting 1051 to 1077
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077))
run: 24 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1046
run: writing to oarg integer-address => (5 location deref)
setm: (5 location deref) <= integer-address
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1046
sz: (1077 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1046
addr: deref 1051 => 1077
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1077 to integer-address
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1077 integer-address))
run: 25 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1046
addr: deref 1050 => 1077
record-info: initial base 1077 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1078
run: writing to oarg 1078 => (6 location)
setm: (6 location) <= 1078
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1046
setm: size of (6 location) is 1
setm: (6 location): setting 1052 to 1078
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address))
run: 26 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer-address 1045)
setm: (6 location deref) <= 1045
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1046
sz: (1078 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1046
addr: deref 1052 => 1078
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1078 to 1045
run: -- ((1 1040) (2 1045) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045))
run: 27 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1046
reply: ((4 tagged-value-address)) ((3 tagged-value-address))
reply: 1077 => (3 tagged-value-address)
setm: (3 tagged-value-address) <= 1077
sz: (3 tagged-value-address)
addr: (3 tagged-value-address)
addr: initial result: 3
setm: size of (3 tagged-value-address) is 1
setm: (3 tagged-value-address): setting 3 to 1077
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045))
run: 28 main 4: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1077 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1077
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1077 tagged-value)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045))
run: 29 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1079 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30))
run: 30 write 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1031 . nil)) #(tagged record (integer-address 1045 . nil)))
setm: (1 channel) <= #(tagged record (nil nil 0 0 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1079
setm: size of (1 channel) is 5
setm: (1 channel): setting 1080 to nil
setm: (1 channel): setting 1081 to nil
setm: (1 channel): setting 1082 to 0
setm: (1 channel): setting 1083 to 0
setm: (1 channel): setting 1084 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031))
run: 31 write 2: ((6 tagged-value) <- arg)
arg: nil 1 (#(tagged record (nil nil 0 0 1031 . nil)) #(tagged record (integer-address 1045 . nil)))
setm: (6 tagged-value) <= #(tagged record (integer-address 1045 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1079
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1085 to integer-address
setm: (6 tagged-value): setting 1086 to 1045
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045))
run: 32 write 3: ((8 boolean) <- full? (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1079
sz: (1 channel)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045))
run: 33 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1110 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30))
run: 34 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (nil nil 0 0 1031 . nil)))
setm: (1 channel) <= #(tagged record (nil nil 0 0 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1110
setm: size of (1 channel) is 5
setm: (1 channel): setting 1111 to nil
setm: (1 channel): setting 1112 to nil
setm: (1 channel): setting 1113 to 0
setm: (1 channel): setting 1114 to 0
setm: (1 channel): setting 1115 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031))
run: 35 full? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1110
record-info: initial base 1111 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1113 integer
m: (1113 integer global)
sz: (1113 integer global)
addr: (1113 integer global)
addr: initial result: 1113
run: writing to oarg 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1110
setm: size of (6 integer) is 1
setm: (6 integer): setting 1116 to 0
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0))
run: 36 full? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1110
record-info: initial base 1111 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1114 integer
m: (1114 integer global)
sz: (1114 integer global)
addr: (1114 integer global)
addr: initial result: 1114
run: writing to oarg 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1110
setm: size of (7 integer) is 1
setm: (7 integer): setting 1117 to 0
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 0))
run: 37 full? 4: ((8 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1110
record-info: initial base 1111 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1115 tagged-value-array-address
m: (1115 tagged-value-array-address global)
sz: (1115 tagged-value-array-address global)
addr: (1115 tagged-value-array-address global)
addr: initial result: 1115
run: writing to oarg 1031 => (8 tagged-value-array-address)
setm: (8 tagged-value-array-address) <= 1031
sz: (8 tagged-value-array-address)
addr: (8 tagged-value-array-address)
addr: initial result: 8
addr: incrementing by 1110
setm: size of (8 tagged-value-array-address) is 1
setm: (8 tagged-value-array-address): setting 1118 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 0) (1118 1031))
run: 38 full? 5: ((9 integer) <- len (8 tagged-value-array-address deref))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1110
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1110
addr: deref 1118 => 1031
run: writing to oarg 4 => (9 integer)
setm: (9 integer) <= 4
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1110
setm: size of (9 integer) is 1
setm: (9 integer): setting 1119 to 4
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 0) (1118 1031) (1119 4))
run: 39 full? 6: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1110
add: 0 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1110
run: writing to oarg 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1110
setm: size of (7 integer) is 1
setm: (7 integer): setting 1117 to 1
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4))
run: 40 full? 7: ((10 boolean) <- lt (7 integer) (9 integer))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1110
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1110
run: writing to oarg t => (10 boolean)
setm: (10 boolean) <= t
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1110
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1120 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 41 full? 8: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1110
jump: checking that t is t
jump: jumping to 10
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 42 full? 10: ((11 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1110
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1110
run: writing to oarg nil => (11 boolean)
setm: (11 boolean) <= nil
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1110
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1121 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 43 full? 11: (reply (11 boolean))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1110
reply: ((11 boolean)) ((8 boolean))
reply: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1079
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1087 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 44 write 4: (jump-unless (8 boolean) (3 offset))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1079
jump: checking that nil is not t
jump: jumping to 8
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 45 write 8: ((10 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1079
record-info: initial base 1080 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1084 tagged-value-array-address
m: (1084 tagged-value-array-address global)
sz: (1084 tagged-value-array-address global)
addr: (1084 tagged-value-array-address global)
addr: initial result: 1084
run: writing to oarg 1031 => (10 tagged-value-array-address)
setm: (10 tagged-value-array-address) <= 1031
sz: (10 tagged-value-array-address)
addr: (10 tagged-value-array-address)
addr: initial result: 10
addr: incrementing by 1079
setm: size of (10 tagged-value-array-address) is 1
setm: (10 tagged-value-array-address): setting 1089 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 46 write 9: ((11 integer-address) <- get-address (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1079
record-info: initial base 1080 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (3 offset) => 1083
run: writing to oarg 1083 => (11 integer-address)
setm: (11 integer-address) <= 1083
sz: (11 integer-address)
addr: (11 integer-address)
addr: initial result: 11
addr: incrementing by 1079
setm: size of (11 integer-address) is 1
setm: (11 integer-address): setting 1090 to 1083
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1090 1083) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 47 write 10: ((12 tagged-value-address) <- index-address (10 tagged-value-array-address deref) (11 integer-address deref))
array-info: (10 tagged-value-array-address deref) (11 integer-address deref)
addr: (10 tagged-value-array-address deref)
addr: initial result: 10
addr: incrementing by 1079
addr: deref 1089 => 1031
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1079
sz: (1083 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1079
addr: deref 1090 => 1083
array-info: initial base 1031 type ((address t) (elem tagged-value-array) (size 1))
array-info: (10 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1079
sz: (1031 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1079
addr: deref 1089 => 1031
array-info: array-len of (10 tagged-value-array-address deref) is 4
index-address: (10 tagged-value-array-address deref) (11 integer-address deref) => 1032
run: writing to oarg 1032 => (12 tagged-value-address)
setm: (12 tagged-value-address) <= 1032
sz: (12 tagged-value-address)
addr: (12 tagged-value-address)
addr: initial result: 12
addr: incrementing by 1079
setm: size of (12 tagged-value-address) is 1
setm: (12 tagged-value-address): setting 1091 to 1032
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1090 1083) (1091 1032) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 48 write 11: ((12 tagged-value-address deref) <- copy (6 tagged-value))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1079
sz: (6 tagged-value)
run: writing to oarg #(tagged record (integer-address 1045 . nil)) => (12 tagged-value-address deref)
setm: (12 tagged-value-address deref) <= #(tagged record (integer-address 1045 . nil))
sz: (12 tagged-value-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1079
sz: (1032 tagged-value)
addr: (12 tagged-value-address deref)
addr: initial result: 12
addr: incrementing by 1079
addr: deref 1091 => 1032
setm: size of (12 tagged-value-address deref) is 2
setm: (12 tagged-value-address deref): setting 1032 to integer-address
setm: (12 tagged-value-address deref): setting 1033 to 1045
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 0) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1090 1083) (1091 1032) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 49 write 12: ((11 integer-address deref) <- add (11 integer-address deref) (1 literal))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1079
sz: (1083 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1079
addr: deref 1090 => 1083
add: 0 1
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1079
sz: (1083 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1079
addr: deref 1090 => 1083
run: writing to oarg 1 => (11 integer-address deref)
setm: (11 integer-address deref) <= 1
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1079
sz: (1083 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1079
addr: deref 1090 => 1083
setm: size of (11 integer-address deref) is 1
setm: (11 integer-address deref): setting 1083 to 1
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1090 1083) (1091 1032) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 50 write 13: ((13 integer) <- len (10 tagged-value-array-address deref))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1079
sz: (1031 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1079
addr: deref 1089 => 1031
run: writing to oarg 4 => (13 integer)
setm: (13 integer) <= 4
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1079
setm: size of (13 integer) is 1
setm: (13 integer): setting 1092 to 4
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 51 write 14: ((14 boolean) <- lt (11 integer-address deref) (13 integer))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1079
sz: (1083 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1079
addr: deref 1090 => 1083
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1079
run: writing to oarg t => (14 boolean)
setm: (14 boolean) <= t
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1079
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1093 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 52 write 15: (jump-if (14 boolean) (1 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1079
jump: checking that t is t
jump: jumping to 17
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 53 write 17: ((9 boolean-address) <- get-address (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1079
record-info: initial base 1080 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (0 offset) => 1080
run: writing to oarg 1080 => (9 boolean-address)
setm: (9 boolean-address) <= 1080
sz: (9 boolean-address)
addr: (9 boolean-address)
addr: initial result: 9
addr: incrementing by 1079
setm: size of (9 boolean-address) is 1
setm: (9 boolean-address): setting 1088 to 1080
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 54 write 18: ((9 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (9 boolean-address deref)
setm: (9 boolean-address deref) <= t
sz: (9 boolean-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1079
sz: (1080 boolean)
addr: (9 boolean-address deref)
addr: initial result: 9
addr: incrementing by 1079
addr: deref 1088 => 1080
setm: size of (9 boolean-address deref) is 1
setm: (9 boolean-address deref): setting 1080 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1042 0) (1043 0) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 55 write 19: (reply (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1079
sz: (1 channel)
reply: ((1 channel)) ((1 channel-address deref))
reply: #(tagged record (t nil 0 1 1031 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t nil 0 1 1031 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1040 to t
setm: (1 channel-address deref): setting 1041 to nil
setm: (1 channel-address deref): setting 1042 to 0
setm: (1 channel-address deref): setting 1043 to 1
setm: (1 channel-address deref): setting 1044 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 56 main 5: ((1 channel-address deref) <- write (1 channel-address deref) (3 tagged-value-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1077 tagged-value)
addr: (3 tagged-value-address deref)
addr: initial result: 3
addr: deref 3 => 1077
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
sz: (1077 tagged-value)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t))
run: 57 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1141 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30))
run: 58 write 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 1 1031 . nil)) #(tagged record (integer-address 1045 . nil)))
setm: (1 channel) <= #(tagged record (t nil 0 1 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1141
setm: size of (1 channel) is 5
setm: (1 channel): setting 1142 to t
setm: (1 channel): setting 1143 to nil
setm: (1 channel): setting 1144 to 0
setm: (1 channel): setting 1145 to 1
setm: (1 channel): setting 1146 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031))
run: 59 write 2: ((6 tagged-value) <- arg)
arg: nil 1 (#(tagged record (t nil 0 1 1031 . nil)) #(tagged record (integer-address 1045 . nil)))
setm: (6 tagged-value) <= #(tagged record (integer-address 1045 . nil))
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1141
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1147 to integer-address
setm: (6 tagged-value): setting 1148 to 1045
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045))
run: 60 write 3: ((8 boolean) <- full? (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1141
sz: (1 channel)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045))
run: 61 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1172 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30))
run: 62 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 1 1031 . nil)))
setm: (1 channel) <= #(tagged record (t nil 0 1 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1172
setm: size of (1 channel) is 5
setm: (1 channel): setting 1173 to t
setm: (1 channel): setting 1174 to nil
setm: (1 channel): setting 1175 to 0
setm: (1 channel): setting 1176 to 1
setm: (1 channel): setting 1177 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031))
run: 63 full? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1172
record-info: initial base 1173 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1175 integer
m: (1175 integer global)
sz: (1175 integer global)
addr: (1175 integer global)
addr: initial result: 1175
run: writing to oarg 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1172
setm: size of (6 integer) is 1
setm: (6 integer): setting 1178 to 0
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0))
run: 64 full? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1172
record-info: initial base 1173 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1176 integer
m: (1176 integer global)
sz: (1176 integer global)
addr: (1176 integer global)
addr: initial result: 1176
run: writing to oarg 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1172
setm: size of (7 integer) is 1
setm: (7 integer): setting 1179 to 1
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 1))
run: 65 full? 4: ((8 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1172
record-info: initial base 1173 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1177 tagged-value-array-address
m: (1177 tagged-value-array-address global)
sz: (1177 tagged-value-array-address global)
addr: (1177 tagged-value-array-address global)
addr: initial result: 1177
run: writing to oarg 1031 => (8 tagged-value-array-address)
setm: (8 tagged-value-array-address) <= 1031
sz: (8 tagged-value-array-address)
addr: (8 tagged-value-array-address)
addr: initial result: 8
addr: incrementing by 1172
setm: size of (8 tagged-value-array-address) is 1
setm: (8 tagged-value-array-address): setting 1180 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 1) (1180 1031))
run: 66 full? 5: ((9 integer) <- len (8 tagged-value-array-address deref))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1172
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1172
addr: deref 1180 => 1031
run: writing to oarg 4 => (9 integer)
setm: (9 integer) <= 4
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1172
setm: size of (9 integer) is 1
setm: (9 integer): setting 1181 to 4
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 1) (1180 1031) (1181 4))
run: 67 full? 6: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1172
add: 1 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1172
run: writing to oarg 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1172
setm: size of (7 integer) is 1
setm: (7 integer): setting 1179 to 2
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4))
run: 68 full? 7: ((10 boolean) <- lt (7 integer) (9 integer))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1172
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1172
run: writing to oarg t => (10 boolean)
setm: (10 boolean) <= t
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1172
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1182 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 69 full? 8: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1172
jump: checking that t is t
jump: jumping to 10
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 70 full? 10: ((11 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1172
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1172
run: writing to oarg nil => (11 boolean)
setm: (11 boolean) <= nil
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1172
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1183 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 71 full? 11: (reply (11 boolean))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1172
reply: ((11 boolean)) ((8 boolean))
reply: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1141
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1149 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 72 write 4: (jump-unless (8 boolean) (3 offset))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1141
jump: checking that nil is not t
jump: jumping to 8
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 73 write 8: ((10 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1141
record-info: initial base 1142 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1146 tagged-value-array-address
m: (1146 tagged-value-array-address global)
sz: (1146 tagged-value-array-address global)
addr: (1146 tagged-value-array-address global)
addr: initial result: 1146
run: writing to oarg 1031 => (10 tagged-value-array-address)
setm: (10 tagged-value-array-address) <= 1031
sz: (10 tagged-value-array-address)
addr: (10 tagged-value-array-address)
addr: initial result: 10
addr: incrementing by 1141
setm: size of (10 tagged-value-array-address) is 1
setm: (10 tagged-value-array-address): setting 1151 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 74 write 9: ((11 integer-address) <- get-address (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1141
record-info: initial base 1142 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (3 offset) => 1145
run: writing to oarg 1145 => (11 integer-address)
setm: (11 integer-address) <= 1145
sz: (11 integer-address)
addr: (11 integer-address)
addr: initial result: 11
addr: incrementing by 1141
setm: size of (11 integer-address) is 1
setm: (11 integer-address): setting 1152 to 1145
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1152 1145) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 75 write 10: ((12 tagged-value-address) <- index-address (10 tagged-value-array-address deref) (11 integer-address deref))
array-info: (10 tagged-value-array-address deref) (11 integer-address deref)
addr: (10 tagged-value-array-address deref)
addr: initial result: 10
addr: incrementing by 1141
addr: deref 1151 => 1031
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1141
sz: (1145 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1141
addr: deref 1152 => 1145
array-info: initial base 1031 type ((address t) (elem tagged-value-array) (size 1))
array-info: (10 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1141
sz: (1031 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1141
addr: deref 1151 => 1031
array-info: array-len of (10 tagged-value-array-address deref) is 4
index-address: (10 tagged-value-array-address deref) (11 integer-address deref) => 1034
run: writing to oarg 1034 => (12 tagged-value-address)
setm: (12 tagged-value-address) <= 1034
sz: (12 tagged-value-address)
addr: (12 tagged-value-address)
addr: initial result: 12
addr: incrementing by 1141
setm: size of (12 tagged-value-address) is 1
setm: (12 tagged-value-address): setting 1153 to 1034
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1152 1145) (1153 1034) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 76 write 11: ((12 tagged-value-address deref) <- copy (6 tagged-value))
m: (6 tagged-value)
sz: (6 tagged-value)
addr: (6 tagged-value)
addr: initial result: 6
addr: incrementing by 1141
sz: (6 tagged-value)
run: writing to oarg #(tagged record (integer-address 1045 . nil)) => (12 tagged-value-address deref)
setm: (12 tagged-value-address deref) <= #(tagged record (integer-address 1045 . nil))
sz: (12 tagged-value-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1141
sz: (1034 tagged-value)
addr: (12 tagged-value-address deref)
addr: initial result: 12
addr: incrementing by 1141
addr: deref 1153 => 1034
setm: size of (12 tagged-value-address deref) is 2
setm: (12 tagged-value-address deref): setting 1034 to integer-address
setm: (12 tagged-value-address deref): setting 1035 to 1045
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 1) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1152 1145) (1153 1034) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 77 write 12: ((11 integer-address deref) <- add (11 integer-address deref) (1 literal))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1141
sz: (1145 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1141
addr: deref 1152 => 1145
add: 1 1
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1141
sz: (1145 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1141
addr: deref 1152 => 1145
run: writing to oarg 2 => (11 integer-address deref)
setm: (11 integer-address deref) <= 2
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1141
sz: (1145 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1141
addr: deref 1152 => 1145
setm: size of (11 integer-address deref) is 1
setm: (11 integer-address deref): setting 1145 to 2
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1152 1145) (1153 1034) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 78 write 13: ((13 integer) <- len (10 tagged-value-array-address deref))
array-len: (10 tagged-value-array-address deref)
m: (10 integer-address deref)
sz: (10 integer-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1141
sz: (1031 integer)
addr: (10 integer-address deref)
addr: initial result: 10
addr: incrementing by 1141
addr: deref 1151 => 1031
run: writing to oarg 4 => (13 integer)
setm: (13 integer) <= 4
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1141
setm: size of (13 integer) is 1
setm: (13 integer): setting 1154 to 4
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 79 write 14: ((14 boolean) <- lt (11 integer-address deref) (13 integer))
m: (11 integer-address deref)
sz: (11 integer-address deref)
m: (11 location)
sz: (11 location)
addr: (11 location)
addr: initial result: 11
addr: incrementing by 1141
sz: (1145 integer)
addr: (11 integer-address deref)
addr: initial result: 11
addr: incrementing by 1141
addr: deref 1152 => 1145
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1141
run: writing to oarg t => (14 boolean)
setm: (14 boolean) <= t
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1141
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1155 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 80 write 15: (jump-if (14 boolean) (1 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1141
jump: checking that t is t
jump: jumping to 17
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 81 write 17: ((9 boolean-address) <- get-address (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1141
record-info: initial base 1142 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (0 offset) => 1142
run: writing to oarg 1142 => (9 boolean-address)
setm: (9 boolean-address) <= 1142
sz: (9 boolean-address)
addr: (9 boolean-address)
addr: initial result: 9
addr: incrementing by 1141
setm: size of (9 boolean-address) is 1
setm: (9 boolean-address): setting 1150 to 1142
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 82 write 18: ((9 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (9 boolean-address deref)
setm: (9 boolean-address deref) <= t
sz: (9 boolean-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1141
sz: (1142 boolean)
addr: (9 boolean-address deref)
addr: initial result: 9
addr: incrementing by 1141
addr: deref 1150 => 1142
setm: size of (9 boolean-address deref) is 1
setm: (9 boolean-address deref): setting 1142 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 1) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 83 write 19: (reply (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1141
sz: (1 channel)
reply: ((1 channel)) ((1 channel-address deref))
reply: #(tagged record (t nil 0 2 1031 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t nil 0 2 1031 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1040 to t
setm: (1 channel-address deref): setting 1041 to nil
setm: (1 channel-address deref): setting 1042 to 0
setm: (1 channel-address deref): setting 1043 to 2
setm: (1 channel-address deref): setting 1044 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 84 main 6: (_ (1 channel-address deref) <- read (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t))
run: 85 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1203 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30))
run: 86 read 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 2 1031 . nil)))
setm: (1 channel) <= #(tagged record (t nil 0 2 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1203
setm: size of (1 channel) is 5
setm: (1 channel): setting 1204 to t
setm: (1 channel): setting 1205 to nil
setm: (1 channel): setting 1206 to 0
setm: (1 channel): setting 1207 to 2
setm: (1 channel): setting 1208 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031))
run: 87 read 2: ((6 boolean) <- empty? (1 channel))
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1203
sz: (1 channel)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031))
run: 88 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1234 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1234 30))
run: 89 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t nil 0 2 1031 . nil)))
setm: (1 channel) <= #(tagged record (t nil 0 2 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1234
setm: size of (1 channel) is 5
setm: (1 channel): setting 1235 to t
setm: (1 channel): setting 1236 to nil
setm: (1 channel): setting 1237 to 0
setm: (1 channel): setting 1238 to 2
setm: (1 channel): setting 1239 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031))
run: 90 empty? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1234
record-info: initial base 1235 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1237 integer
m: (1237 integer global)
sz: (1237 integer global)
addr: (1237 integer global)
addr: initial result: 1237
run: writing to oarg 0 => (6 integer)
setm: (6 integer) <= 0
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1234
setm: size of (6 integer) is 1
setm: (6 integer): setting 1240 to 0
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0))
run: 91 empty? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1234
record-info: initial base 1235 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1238 integer
m: (1238 integer global)
sz: (1238 integer global)
addr: (1238 integer global)
addr: initial result: 1238
run: writing to oarg 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1234
setm: size of (7 integer) is 1
setm: (7 integer): setting 1241 to 2
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 92 empty? 4: ((8 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1234
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1234
run: writing to oarg nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1234
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1242 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 93 empty? 5: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1234
reply: ((8 boolean)) ((6 boolean))
reply: nil => (6 boolean)
setm: (6 boolean) <= nil
sz: (6 boolean)
addr: (6 boolean)
addr: initial result: 6
addr: incrementing by 1203
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1209 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 94 read 3: (jump-unless (6 boolean) (3 offset))
m: (6 boolean)
sz: (6 boolean)
addr: (6 boolean)
addr: initial result: 6
addr: incrementing by 1203
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 95 read 7: ((8 integer-address) <- get-address (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1203
record-info: initial base 1204 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (2 offset) => 1206
run: writing to oarg 1206 => (8 integer-address)
setm: (8 integer-address) <= 1206
sz: (8 integer-address)
addr: (8 integer-address)
addr: initial result: 8
addr: incrementing by 1203
setm: size of (8 integer-address) is 1
setm: (8 integer-address): setting 1211 to 1206
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1211 1206) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 96 read 8: ((9 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1203
record-info: initial base 1204 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1208 tagged-value-array-address
m: (1208 tagged-value-array-address global)
sz: (1208 tagged-value-array-address global)
addr: (1208 tagged-value-array-address global)
addr: initial result: 1208
run: writing to oarg 1031 => (9 tagged-value-array-address)
setm: (9 tagged-value-array-address) <= 1031
sz: (9 tagged-value-array-address)
addr: (9 tagged-value-array-address)
addr: initial result: 9
addr: incrementing by 1203
setm: size of (9 tagged-value-array-address) is 1
setm: (9 tagged-value-array-address): setting 1212 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1211 1206) (1212 1031) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 97 read 9: ((10 tagged-value) <- index (9 tagged-value-array-address deref) (8 integer-address deref))
array-info: (9 tagged-value-array-address deref) (8 integer-address deref)
addr: (9 tagged-value-array-address deref)
addr: initial result: 9
addr: incrementing by 1203
addr: deref 1212 => 1031
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1203
sz: (1206 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1203
addr: deref 1211 => 1206
array-info: initial base 1031 type ((address t) (elem tagged-value-array) (size 1))
array-info: (9 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (9 tagged-value-array-address deref)
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1203
sz: (1031 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1203
addr: deref 1212 => 1031
array-info: array-len of (9 tagged-value-array-address deref) is 4
index: (9 tagged-value-array-address deref) (8 integer-address deref) => 1032 tagged-value
m: (1032 tagged-value global)
sz: (1032 tagged-value global)
addr: (1032 tagged-value global)
addr: initial result: 1032
sz: (1032 tagged-value global)
run: writing to oarg #(tagged record (integer-address 1045 . nil)) => (10 tagged-value)
setm: (10 tagged-value) <= #(tagged record (integer-address 1045 . nil))
sz: (10 tagged-value)
addr: (10 tagged-value)
addr: initial result: 10
addr: incrementing by 1203
setm: size of (10 tagged-value) is 2
setm: (10 tagged-value): setting 1213 to integer-address
setm: (10 tagged-value): setting 1214 to 1045
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 0) (1207 2) (1208 1031) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 98 read 10: ((8 integer-address deref) <- add (8 integer-address deref) (1 literal))
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1203
sz: (1206 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1203
addr: deref 1211 => 1206
add: 0 1
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1203
sz: (1206 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1203
addr: deref 1211 => 1206
run: writing to oarg 1 => (8 integer-address deref)
setm: (8 integer-address deref) <= 1
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1203
sz: (1206 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1203
addr: deref 1211 => 1206
setm: size of (8 integer-address deref) is 1
setm: (8 integer-address deref): setting 1206 to 1
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 1) (1207 2) (1208 1031) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 99 read 11: ((12 integer) <- len (9 tagged-value-array-address deref))
array-len: (9 tagged-value-array-address deref)
m: (9 integer-address deref)
sz: (9 integer-address deref)
m: (9 location)
sz: (9 location)
addr: (9 location)
addr: initial result: 9
addr: incrementing by 1203
sz: (1031 integer)
addr: (9 integer-address deref)
addr: initial result: 9
addr: incrementing by 1203
addr: deref 1212 => 1031
run: writing to oarg 4 => (12 integer)
setm: (12 integer) <= 4
sz: (12 integer)
addr: (12 integer)
addr: initial result: 12
addr: incrementing by 1203
setm: size of (12 integer) is 1
setm: (12 integer): setting 1215 to 4
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 1) (1207 2) (1208 1031) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 100 read 12: ((13 boolean) <- lt (8 integer-address deref) (12 integer))
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1203
sz: (1206 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1203
addr: deref 1211 => 1206
m: (12 integer)
sz: (12 integer)
addr: (12 integer)
addr: initial result: 12
addr: incrementing by 1203
run: writing to oarg t => (13 boolean)
setm: (13 boolean) <= t
sz: (13 boolean)
addr: (13 boolean)
addr: initial result: 13
addr: incrementing by 1203
setm: size of (13 boolean) is 1
setm: (13 boolean): setting 1216 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 1) (1207 2) (1208 1031) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 101 read 13: (jump-if (13 boolean) (1 offset))
m: (13 boolean)
sz: (13 boolean)
addr: (13 boolean)
addr: initial result: 13
addr: incrementing by 1203
jump: checking that t is t
jump: jumping to 15
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 1) (1207 2) (1208 1031) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 102 read 15: ((7 boolean-address) <- get-address (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1203
record-info: initial base 1204 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get-address: (1 channel) (1 offset) => 1205
run: writing to oarg 1205 => (7 boolean-address)
setm: (7 boolean-address) <= 1205
sz: (7 boolean-address)
addr: (7 boolean-address)
addr: initial result: 7
addr: incrementing by 1203
setm: size of (7 boolean-address) is 1
setm: (7 boolean-address): setting 1210 to 1205
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 103 read 16: ((7 boolean-address deref) <- copy (t literal))
run: writing to oarg t => (7 boolean-address deref)
setm: (7 boolean-address deref) <= t
sz: (7 boolean-address deref)
m: (7 location)
sz: (7 location)
addr: (7 location)
addr: initial result: 7
addr: incrementing by 1203
sz: (1205 boolean)
addr: (7 boolean-address deref)
addr: initial result: 7
addr: incrementing by 1203
addr: deref 1210 => 1205
setm: size of (7 boolean-address deref) is 1
setm: (7 boolean-address deref): setting 1205 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1042 0) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 104 read 17: (reply (10 tagged-value) (1 channel))
m: (10 tagged-value)
sz: (10 tagged-value)
addr: (10 tagged-value)
addr: initial result: 10
addr: incrementing by 1203
sz: (10 tagged-value)
m: (1 channel)
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1203
sz: (1 channel)
reply: ((10 tagged-value) (1 channel)) (_ (1 channel-address deref))
reply: #(tagged record (t t 1 2 1031 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (t t 1 2 1031 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
setm: size of (1 channel-address deref) is 5
setm: (1 channel-address deref): setting 1040 to t
setm: (1 channel-address deref): setting 1041 to t
setm: (1 channel-address deref): setting 1042 to 1
setm: (1 channel-address deref): setting 1043 to 2
setm: (1 channel-address deref): setting 1044 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 105 main 7: ((4 boolean) <- empty? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2))
run: 106 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1265 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30))
run: 107 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 2 1031 . nil)))
setm: (1 channel) <= #(tagged record (t t 1 2 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1265
setm: size of (1 channel) is 5
setm: (1 channel): setting 1266 to t
setm: (1 channel): setting 1267 to t
setm: (1 channel): setting 1268 to 1
setm: (1 channel): setting 1269 to 2
setm: (1 channel): setting 1270 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031))
run: 108 empty? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1265
record-info: initial base 1266 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1268 integer
m: (1268 integer global)
sz: (1268 integer global)
addr: (1268 integer global)
addr: initial result: 1268
run: writing to oarg 1 => (6 integer)
setm: (6 integer) <= 1
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1265
setm: size of (6 integer) is 1
setm: (6 integer): setting 1271 to 1
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1))
run: 109 empty? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1265
record-info: initial base 1266 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1269 integer
m: (1269 integer global)
sz: (1269 integer global)
addr: (1269 integer global)
addr: initial result: 1269
run: writing to oarg 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1265
setm: size of (7 integer) is 1
setm: (7 integer): setting 1272 to 2
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2))
run: 110 empty? 4: ((8 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1265
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1265
run: writing to oarg nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1265
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1273 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2))
run: 111 empty? 5: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
addr: (8 boolean)
addr: initial result: 8
addr: incrementing by 1265
reply: ((8 boolean)) ((4 boolean))
reply: nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 4 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2))
run: 112 main 8: ((5 boolean) <- full? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
addr: (1 channel-address deref)
addr: initial result: 1
addr: deref 1 => 1040
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
sz: (1040 channel)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2))
run: 113 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1296 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30))
run: 114 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (t t 1 2 1031 . nil)))
setm: (1 channel) <= #(tagged record (t t 1 2 1031 . nil))
sz: (1 channel)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1296
setm: size of (1 channel) is 5
setm: (1 channel): setting 1297 to t
setm: (1 channel): setting 1298 to t
setm: (1 channel): setting 1299 to 1
setm: (1 channel): setting 1300 to 2
setm: (1 channel): setting 1301 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031))
run: 115 full? 2: ((6 integer) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1296
record-info: initial base 1297 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (2 offset) => 1299 integer
m: (1299 integer global)
sz: (1299 integer global)
addr: (1299 integer global)
addr: initial result: 1299
run: writing to oarg 1 => (6 integer)
setm: (6 integer) <= 1
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1296
setm: size of (6 integer) is 1
setm: (6 integer): setting 1302 to 1
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1))
run: 116 full? 3: ((7 integer) <- get (1 channel) (3 offset))
record-info: (1 channel) (3 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1296
record-info: initial base 1297 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (3 offset) => 1300 integer
m: (1300 integer global)
sz: (1300 integer global)
addr: (1300 integer global)
addr: initial result: 1300
run: writing to oarg 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1296
setm: size of (7 integer) is 1
setm: (7 integer): setting 1303 to 2
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1) (1303 2))
run: 117 full? 4: ((8 tagged-value-array-address) <- get (1 channel) (4 offset))
record-info: (1 channel) (4 offset)
addr: (1 channel)
addr: initial result: 1
addr: incrementing by 1296
record-info: initial base 1297 type ((elems (boolean boolean integer integer tagged-value-array-address)) (fields (write-watch read-watch first-full first-free circular-buffer)) (record t) (size 5))
get: (1 channel) (4 offset) => 1301 tagged-value-array-address
m: (1301 tagged-value-array-address global)
sz: (1301 tagged-value-array-address global)
addr: (1301 tagged-value-array-address global)
addr: initial result: 1301
run: writing to oarg 1031 => (8 tagged-value-array-address)
setm: (8 tagged-value-array-address) <= 1031
sz: (8 tagged-value-array-address)
addr: (8 tagged-value-array-address)
addr: initial result: 8
addr: incrementing by 1296
setm: size of (8 tagged-value-array-address) is 1
setm: (8 tagged-value-array-address): setting 1304 to 1031
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1) (1303 2) (1304 1031))
run: 118 full? 5: ((9 integer) <- len (8 tagged-value-array-address deref))
array-len: (8 tagged-value-array-address deref)
m: (8 integer-address deref)
sz: (8 integer-address deref)
m: (8 location)
sz: (8 location)
addr: (8 location)
addr: initial result: 8
addr: incrementing by 1296
sz: (1031 integer)
addr: (8 integer-address deref)
addr: initial result: 8
addr: incrementing by 1296
addr: deref 1304 => 1031
run: writing to oarg 4 => (9 integer)
setm: (9 integer) <= 4
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1296
setm: size of (9 integer) is 1
setm: (9 integer): setting 1305 to 4
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1) (1303 2) (1304 1031) (1305 4))
run: 119 full? 6: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1296
add: 2 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1296
run: writing to oarg 3 => (7 integer)
setm: (7 integer) <= 3
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1296
setm: size of (7 integer) is 1
setm: (7 integer): setting 1303 to 3
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1) (1303 3) (1304 1031) (1305 4))
run: 120 full? 7: ((10 boolean) <- lt (7 integer) (9 integer))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1296
m: (9 integer)
sz: (9 integer)
addr: (9 integer)
addr: initial result: 9
addr: incrementing by 1296
run: writing to oarg t => (10 boolean)
setm: (10 boolean) <= t
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1296
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1306 to t
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1) (1303 3) (1304 1031) (1305 4) (1306 t))
run: 121 full? 8: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
addr: (10 boolean)
addr: initial result: 10
addr: incrementing by 1296
jump: checking that t is t
jump: jumping to 10
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1) (1303 3) (1304 1031) (1305 4) (1306 t))
run: 122 full? 10: ((11 boolean) <- eq (6 integer) (7 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1296
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1296
run: writing to oarg nil => (11 boolean)
setm: (11 boolean) <= nil
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1296
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1307 to nil
run: -- ((1 1040) (2 1045) (3 1077) (1000 30) (1001 4) (1002 1031) (1003 1040) (1004 1042) (1005 1043) (1006 1044) (1031 4) (1032 integer-address) (1033 1045) (1034 integer-address) (1035 1045) (1040 t) (1041 t) (1042 1) (1043 2) (1044 1031) (1045 34) (1046 30) (1047 integer-address) (1048 1) (1049 t) (1050 1077) (1051 1077) (1052 1078) (1077 integer-address) (1078 1045) (1079 30) (1080 t) (1082 0) (1083 1) (1084 1031) (1085 integer-address) (1086 1045) (1088 1080) (1089 1031) (1090 1083) (1091 1032) (1092 4) (1093 t) (1110 30) (1113 0) (1114 0) (1115 1031) (1116 0) (1117 1) (1118 1031) (1119 4) (1120 t) (1141 30) (1142 t) (1144 0) (1145 2) (1146 1031) (1147 integer-address) (1148 1045) (1150 1142) (1151 1031) (1152 1145) (1153 1034) (1154 4) (1155 t) (1172 30) (1173 t) (1175 0) (1176 1) (1177 1031) (1178 0) (1179 2) (1180 1031) (1181 4) (1182 t) (1203 30) (1204 t) (1205 t) (1206 1) (1207 2) (1208 1031) (1210 1205) (1211 1206) (1212 1031) (1213 integer-address) (1214 1045) (1215 4) (1216 t) (1234 30) (1235 t) (1237 0) (1238 2) (1239 1031) (1240 0) (1241 2) (1265 30) (1266 t) (1267 t) (1268 1) (1269 2) (1270 1031) (1271 1) (1272 2) (1296 30) (1297 t) (1298 t) (1299 1) (1300 2) (1301 1031) (1302 1) (1303 3) (1304 1031) (1305 4) (1306 t))
run: 123 full? 11: (reply (11 boolean))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1296
reply: ((11 boolean)) ((5 boolean))
reply: nil => (5 boolean)
setm: (5 boolean) <= nil
sz: (5 boolean)
addr: (5 boolean)
addr: initial result: 5
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 5 to nil
