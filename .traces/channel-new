cvt0: 0 ((1 channel-address) <- new-channel (3 literal)) -- nil
cvt1: 0 new-channel ((1 channel-address))
schedule: main
run: -- nil
run: main 0: ((1 channel-address) <- new-channel (3 literal))
run: -- nil
run: new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: writing to oarg 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: new-channel 1: ((1 integer) <- arg)
arg: nil 0 (3)
setm: (1 integer) <= 3
sz: (1 integer)
setm: size of (1 integer) is 1
run: -- ((1000 30) (1001 3))
run: new-channel 2: ((2 tagged-value-array-address) <- new (tagged-value-array literal) (1 integer))
m: (1 integer)
sz: (1 integer)
sizeof: tagged-value
sizeof: type
sizeof: location
run: writing to oarg 1031 => (2 tagged-value-array-address)
setm: (2 tagged-value-array-address) <= 1031
sz: (2 tagged-value-array-address)
setm: size of (2 tagged-value-array-address) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1031 3))
run: new-channel 3: ((3 channel-address) <- new (channel literal))
sizeof: channel
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: writing to oarg 1038 => (3 channel-address)
setm: (3 channel-address) <= 1038
sz: (3 channel-address)
setm: size of (3 channel-address) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1003 1038) (1031 3))
run: new-channel 4: ((4 integer-address) <- get-address (3 channel-address deref) (0 offset))
run: writing to oarg 1038 => (4 integer-address)
setm: (4 integer-address) <= 1038
sz: (4 integer-address)
setm: size of (4 integer-address) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1003 1038) (1004 1038) (1031 3))
run: new-channel 5: ((4 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (4 integer-address deref)
setm: (4 integer-address deref) <= 0
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1038 integer)
setm: size of (4 integer-address deref) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1003 1038) (1004 1038) (1031 3) (1038 0))
run: new-channel 6: ((5 integer-address) <- get-address (3 channel-address deref) (1 offset))
run: writing to oarg 1039 => (5 integer-address)
setm: (5 integer-address) <= 1039
sz: (5 integer-address)
setm: size of (5 integer-address) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1003 1038) (1004 1038) (1005 1039) (1031 3) (1038 0))
run: new-channel 7: ((5 integer-address deref) <- copy (0 literal))
run: writing to oarg 0 => (5 integer-address deref)
setm: (5 integer-address deref) <= 0
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
sz: (1039 integer)
setm: size of (5 integer-address deref) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1003 1038) (1004 1038) (1005 1039) (1031 3) (1038 0) (1039 0))
run: new-channel 8: ((6 tagged-value-array-address-address) <- get-address (3 channel-address deref) (2 offset))
run: writing to oarg 1040 => (6 tagged-value-array-address-address)
setm: (6 tagged-value-array-address-address) <= 1040
sz: (6 tagged-value-array-address-address)
setm: size of (6 tagged-value-array-address-address) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1003 1038) (1004 1038) (1005 1039) (1006 1040) (1031 3) (1038 0) (1039 0))
run: new-channel 9: ((6 tagged-value-array-address-address deref) <- copy (2 tagged-value-array-address))
m: (2 tagged-value-array-address)
sz: (2 tagged-value-array-address)
run: writing to oarg 1031 => (6 tagged-value-array-address-address deref)
setm: (6 tagged-value-array-address-address deref) <= 1031
sz: (6 tagged-value-array-address-address deref)
m: (6 location)
sz: (6 location)
sz: (1040 tagged-value-array-address)
setm: size of (6 tagged-value-array-address-address deref) is 1
run: -- ((1000 30) (1001 3) (1002 1031) (1003 1038) (1004 1038) (1005 1039) (1006 1040) (1031 3) (1038 0) (1039 0) (1040 1031))
run: new-channel 10: (reply (3 channel-address))
m: (3 channel-address)
sz: (3 channel-address)
reply: ((3 channel-address)) ((1 channel-address))
reply: 1038 => (1 channel-address)
setm: (1 channel-address) <= 1038
sz: (1 channel-address)
setm: size of (1 channel-address) is 1
