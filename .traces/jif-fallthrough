cvt0: 0 ((1 boolean) <- eq (1 literal) (2 literal)) -- nil
cvt0: 1 (jif (3 boolean) (1 offset)) -- nil
cvt0: 2 ((2 integer) <- copy (3 literal)) -- nil
cvt0: 3 (reply) -- nil
cvt0: 4 ((3 integer) <- copy (34 literal)) -- nil
cvt1: 0 eq ((1 boolean))
cvt1: 1 jif nil
cvt1: 2 copy ((2 integer))
cvt1: 3 reply nil
cvt1: 4 copy ((3 integer))
schedule: test1
run: -- #hash()
run: test1 0: ((1 boolean) <- eq (1 literal) (2 literal))
sz: (1 literal)
m: (1 literal) literal
sz: (2 literal)
m: (2 literal) literal
run: writing to oarg nil => (1 boolean)
setm: (1 boolean) <= nil
sz: (1 boolean)
size of : (1 boolean) is 1
run: -- #hash()
run: test1 1: (jif (3 boolean) (1 offset))
sz: (3 boolean)
m: (3 boolean) 1
sz: (3 boolean)
run: -- #hash()
run: test1 2: ((2 integer) <- copy (3 literal))
sz: (3 literal)
m: (3 literal) literal
run: writing to oarg 3 => (2 integer)
setm: (2 integer) <= 3
sz: (2 integer)
size of : (2 integer) is 1
run: -- #hash((2 . 3))
run: test1 3: (reply)
