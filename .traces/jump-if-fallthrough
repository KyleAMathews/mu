c{0: 0 ((1 boolean) <- eq (1 literal) (2 literal)) -- nil
c{0: 1 (jump-if (3 boolean) (1 offset)) -- nil
c{0: 2 ((2 integer) <- copy (3 literal)) -- nil
c{0: 3 (reply) -- nil
c{0: 4 ((3 integer) <- copy (34 literal)) -- nil
c{1: 0 eq ((1 boolean))
c{1: 1 jump-if nil
c{1: 2 copy ((2 integer))
c{1: 3 reply nil
c{1: 4 copy ((3 integer))
schedule: main
run: -- nil
run: 1 main 0: ((1 boolean) <- eq (1 literal) (2 literal))
run: writing to oarg nil => (1 boolean)
setm: (1 boolean) <= nil
sz: (1 boolean)
addr: (1 boolean)
addr: initial result: 1
setm: size of (1 boolean) is 1
setm: (1 boolean): setting 1 to nil
run: -- nil
run: 2 main 1: (jump-if (3 boolean) (1 offset))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
run: -- nil
run: 3 main 2: ((2 integer) <- copy (3 literal))
run: writing to oarg 3 => (2 integer)
setm: (2 integer) <= 3
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 3
run: -- ((2 3))
run: 4 main 3: (reply)
