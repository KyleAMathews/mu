cvt0: 0 ((1 integer) <- copy (5 literal)) -- nil
cvt0: 1 ((2 type-array-address) <- new (type-array literal) (1 integer)) -- nil
cvt1: 0 copy ((1 integer))
cvt1: 1 new ((2 type-array-address))
schedule: main
run: -- nil
run: main 0: ((1 integer) <- copy (5 literal))
run: writing to oarg 5 => (1 integer)
setm: (1 integer) <= 5
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 5
run: -- ((1 5))
run: main 1: ((2 type-array-address) <- new (type-array literal) (1 integer))
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
sizeof: type
run: writing to oarg 1000 => (2 type-array-address)
setm: (2 type-array-address) <= 1000
sz: (2 type-array-address)
addr: (2 type-array-address)
addr: initial result: 2
setm: size of (2 type-array-address) is 1
setm: (2 type-array-address): setting 2 to 1000
