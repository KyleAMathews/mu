cvt0: 0 ((1 integer) <- copy (1 literal)) -- nil
cvt0: 1 ((2 integer) <- copy (3 literal)) -- nil
cvt0: 2 ((3 integer) <- add (1 integer) (2 integer)) -- nil
cvt1: 0 copy ((1 integer))
cvt1: 1 copy ((2 integer))
cvt1: 2 add ((3 integer))
schedule: main
run: -- nil
run: main 0: ((1 integer) <- copy (1 literal))
run: writing to oarg 1 => (1 integer)
setm: (1 integer) <= 1
sz: (1 integer)
setm: size of (1 integer) is 1
run: -- ((1 1))
run: main 1: ((2 integer) <- copy (3 literal))
run: writing to oarg 3 => (2 integer)
setm: (2 integer) <= 3
sz: (2 integer)
setm: size of (2 integer) is 1
run: -- ((1 1) (2 3))
run: main 2: ((3 integer) <- add (1 integer) (2 integer))
m: (1 integer)
sz: (1 integer)
m: (2 integer)
sz: (2 integer)
add: 1 3
m: (1 integer)
sz: (1 integer)
m: (2 integer)
sz: (2 integer)
run: writing to oarg 4 => (3 integer)
setm: (3 integer) <= 4
sz: (3 integer)
setm: size of (3 integer) is 1
