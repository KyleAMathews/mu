c{0: 0 ((3 integer) <- test2) -- nil
c{1: 0 test2 ((3 integer))
cn0: ((3 integer) <- test2) nil nil
cn0: checking (3 integer)
maybe-add: (3 integer)
cn1: update names nil nil
c{0: 0 (reply (2 integer)) -- nil
c{1: 0 reply nil
cn0: (reply (2 integer)) nil nil
maybe-add: (2 integer)
cn1: update names nil nil
c{0: 0 ((2 integer) <- copy (34 literal)) -- nil
c{0: 1 (test1) -- nil
c{1: 0 copy ((2 integer))
c{1: 1 test1 nil
cn0: ((2 integer) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (2 integer)
maybe-add: (2 integer)
cn0: (test1) nil nil
cn1: update names nil nil
schedule: main
run: -- nil
run: 1 main 0: ((2 integer) <- copy (34 literal))
run: 34 => (2 integer)
setm: (2 integer) <= 34
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 34
run: -- ((2 34))
run: 2 main 1: (test1)
run: -- ((2 34))
run: 3 test1 0: ((3 integer) <- test2)
run: -- ((2 34))
run: 4 test2 0: (reply (2 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
reply: ((2 integer)) ((3 integer))
reply: 34 => (3 integer)
setm: (3 integer) <= 34
sz: (3 integer)
addr: (3 integer)
addr: initial result: 3
setm: size of (3 integer) is 1
setm: (3 integer): setting 3 to 34
schedule: done with routine
