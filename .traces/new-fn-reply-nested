cvt0: 0 ((3 integer) <- test2) -- nil
cvt1: 0 test2 ((3 integer))
cvt0: 0 (reply (2 integer)) -- nil
cvt1: 0 reply nil
cvt0: 0 ((2 integer) <- copy (34 literal)) -- nil
cvt0: 1 (test1) -- nil
cvt1: 0 copy ((2 integer))
cvt1: 1 test1 nil
schedule: main
run: -- nil
run: main 0: ((2 integer) <- copy (34 literal))
run: writing to oarg 34 => (2 integer)
setm: (2 integer) <= 34
sz: (2 integer)
setm: size of (2 integer) is 1
run: -- ((2 34))
run: main 1: (test1)
run: -- ((2 34))
run: test1 0: ((3 integer) <- test2)
run: -- ((2 34))
run: test2 0: (reply (2 integer))
reply: ((2 integer)) ((3 integer))
reply: (2 integer) => (3 integer)
sz: (2 integer)
m: (2 integer) 1
sz: (2 integer)
setm: (3 integer) <= 34
sz: (3 integer)
setm: size of (3 integer) is 1
