cvt0: 0 ((1 integer) <- new-list (3 literal) (4 literal) (5 literal)) -- nil
cvt1: 0 new-list ((1 integer))
schedule: main
run: -- nil
run: main 0: ((1 integer) <- new-list (3 literal) (4 literal) (5 literal))
run: -- nil
run: new-list 0: ((501 list-address) <- new (list type))
sizeof: list
sizeof: tagged-value
sizeof: type
sizeof: location
sizeof: list-address
run: writing to oarg 1000 => (501 list-address)
setm: (501 list-address) <= 1000
sz: (501 list-address)
setm: size of (501 list-address) is 1
run: -- ((501 1000))
run: new-list 1: ((502 list-address) <- copy (501 list-address))
sz: (501 list-address)
m: (501 list-address) 1
sz: (501 list-address)
run: writing to oarg 1000 => (502 list-address)
setm: (502 list-address) <= 1000
sz: (502 list-address)
setm: size of (502 list-address) is 1
run: -- ((501 1000) (502 1000))
run: new-list 2: ((503 integer) (504 boolean) <- arg)
arg: nil 0 ((3 literal) (4 literal) (5 literal))
sz: (3 literal)
m: (3 literal) literal
setm: (503 integer) <= 3
sz: (503 integer)
setm: size of (503 integer) is 1
setm: (504 boolean) <= t
sz: (504 boolean)
setm: size of (504 boolean) is 1
run: -- ((501 1000) (502 1000) (503 3) (504 t))
run: new-list 3: (jump-unless (504 boolean) (6 offset))
sz: (504 boolean)
m: (504 boolean) 1
sz: (504 boolean)
run: -- ((501 1000) (502 1000) (503 3) (504 t))
run: new-list 4: ((505 list-address-address) <- get-address (502 list-address deref) (1 offset))
get-address: (502 list-address deref).1
get-address: after: (1000 list)
run: writing to oarg 1002 => (505 list-address-address)
setm: (505 list-address-address) <= 1002
sz: (505 list-address-address)
setm: size of (505 list-address-address) is 1
run: -- ((501 1000) (502 1000) (503 3) (504 t) (505 1002))
run: new-list 5: ((505 list-address-address deref) <- new (list type))
sizeof: list
sizeof: tagged-value
sizeof: type
sizeof: location
sizeof: list-address
run: writing to oarg 1003 => (505 list-address-address deref)
setm: (505 list-address-address deref) <= 1003
sz: (505 list-address-address deref)
sz: (505 location)
m: (505 location) 1
sz: (505 location)
sz: (1002 list-address)
setm: size of (505 list-address-address deref) is 1
run: -- ((1002 1003) (501 1000) (502 1000) (503 3) (504 t) (505 1002))
run: new-list 6: ((502 list-address) <- list-next (502 list-address))
run: -- ((1002 1003) (501 1000) (502 1000) (503 3) (504 t) (505 1002))
run: list-next 0: ((301 list-address) <- arg)
arg: nil 0 ((502 list-address))
sz: (502 list-address)
m: (502 list-address) 1
sz: (502 list-address)
setm: (301 list-address) <= 1000
sz: (301 list-address)
setm: size of (301 list-address) is 1
run: -- ((1002 1003) (301 1000) (501 1000) (502 1000) (503 3) (504 t) (505 1002))
run: list-next 1: ((302 list-address) <- get (301 list-address deref) (1 offset))
sz: (1002 list-address)
m: (1002 list-address) 1
sz: (1002 list-address)
run: writing to oarg 1003 => (302 list-address)
setm: (302 list-address) <= 1003
sz: (302 list-address)
setm: size of (302 list-address) is 1
run: -- ((1002 1003) (301 1000) (302 1003) (501 1000) (502 1000) (503 3) (504 t) (505 1002))
run: list-next 2: (reply (302 list-address))
reply: ((302 list-address)) ((502 list-address))
reply: (302 list-address) => (502 list-address)
sz: (302 list-address)
m: (302 list-address) 1
sz: (302 list-address)
setm: (502 list-address) <= 1003
sz: (502 list-address)
setm: size of (502 list-address) is 1
run: -- ((1002 1003) (301 1000) (302 1003) (501 1000) (502 1003) (503 3) (504 t) (505 1002))
run: new-list 7: ((506 tagged-value-address) <- list-value-address (502 list-address))
run: -- ((1002 1003) (301 1000) (302 1003) (501 1000) (502 1003) (503 3) (504 t) (505 1002))
run: list-value-address 0: ((401 list-address) <- arg)
arg: nil 0 ((502 list-address))
sz: (502 list-address)
m: (502 list-address) 1
sz: (502 list-address)
setm: (401 list-address) <= 1003
sz: (401 list-address)
setm: size of (401 list-address) is 1
run: -- ((1002 1003) (301 1000) (302 1003) (401 1003) (501 1000) (502 1003) (503 3) (504 t) (505 1002))
run: list-value-address 1: ((402 tagged-value-address) <- get-address (401 list-address deref) (0 offset))
get-address: (401 list-address deref).0
get-address: after: (1003 list)
run: writing to oarg 1003 => (402 tagged-value-address)
setm: (402 tagged-value-address) <= 1003
sz: (402 tagged-value-address)
setm: size of (402 tagged-value-address) is 1
run: -- ((1002 1003) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 3) (504 t) (505 1002))
run: list-value-address 2: (reply (402 tagged-value-address))
reply: ((402 tagged-value-address)) ((506 tagged-value-address))
reply: (402 tagged-value-address) => (506 tagged-value-address)
sz: (402 tagged-value-address)
m: (402 tagged-value-address) 1
sz: (402 tagged-value-address)
setm: (506 tagged-value-address) <= 1003
sz: (506 tagged-value-address)
setm: size of (506 tagged-value-address) is 1
run: -- ((1002 1003) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 3) (504 t) (505 1002) (506 1003))
run: new-list 8: ((506 tagged-value-address deref) <- save-type (503 integer))
sz: (503 integer)
m: (503 integer) 1
sz: (503 integer)
run: writing to oarg #(tagged record (integer 3)) => (506 tagged-value-address deref)
setm: (506 tagged-value-address deref) <= #(tagged record (integer 3))
sz: (506 tagged-value-address deref)
sz: (506 location)
m: (506 location) 1
sz: (506 location)
sz: (1003 tagged-value)
setm: size of (506 tagged-value-address deref) is 2
run: -- ((1002 1003) (1003 integer) (1004 3) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 3) (504 t) (505 1002) (506 1003))
run: new-list 9: (jump (-8 offset))
run: -- ((1002 1003) (1003 integer) (1004 3) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 3) (504 t) (505 1002) (506 1003))
run: new-list 2: ((503 integer) (504 boolean) <- arg)
arg: nil 1 ((3 literal) (4 literal) (5 literal))
sz: (4 literal)
m: (4 literal) literal
setm: (503 integer) <= 4
sz: (503 integer)
setm: size of (503 integer) is 1
setm: (504 boolean) <= t
sz: (504 boolean)
setm: size of (504 boolean) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 4) (504 t) (505 1002) (506 1003))
run: new-list 3: (jump-unless (504 boolean) (6 offset))
sz: (504 boolean)
m: (504 boolean) 1
sz: (504 boolean)
run: -- ((1002 1003) (1003 integer) (1004 3) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 4) (504 t) (505 1002) (506 1003))
run: new-list 4: ((505 list-address-address) <- get-address (502 list-address deref) (1 offset))
get-address: (502 list-address deref).1
get-address: after: (1003 list)
run: writing to oarg 1005 => (505 list-address-address)
setm: (505 list-address-address) <= 1005
sz: (505 list-address-address)
setm: size of (505 list-address-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 4) (504 t) (505 1005) (506 1003))
run: new-list 5: ((505 list-address-address deref) <- new (list type))
sizeof: list
sizeof: tagged-value
sizeof: type
sizeof: location
sizeof: list-address
run: writing to oarg 1006 => (505 list-address-address deref)
setm: (505 list-address-address deref) <= 1006
sz: (505 list-address-address deref)
sz: (505 location)
m: (505 location) 1
sz: (505 location)
sz: (1005 list-address)
setm: size of (505 list-address-address deref) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 4) (504 t) (505 1005) (506 1003))
run: new-list 6: ((502 list-address) <- list-next (502 list-address))
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1000) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 4) (504 t) (505 1005) (506 1003))
run: list-next 0: ((301 list-address) <- arg)
arg: nil 0 ((502 list-address))
sz: (502 list-address)
m: (502 list-address) 1
sz: (502 list-address)
setm: (301 list-address) <= 1003
sz: (301 list-address)
setm: size of (301 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1003) (302 1003) (401 1003) (402 1003) (501 1000) (502 1003) (503 4) (504 t) (505 1005) (506 1003))
run: list-next 1: ((302 list-address) <- get (301 list-address deref) (1 offset))
sz: (1005 list-address)
m: (1005 list-address) 1
sz: (1005 list-address)
run: writing to oarg 1006 => (302 list-address)
setm: (302 list-address) <= 1006
sz: (302 list-address)
setm: size of (302 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1003) (302 1006) (401 1003) (402 1003) (501 1000) (502 1003) (503 4) (504 t) (505 1005) (506 1003))
run: list-next 2: (reply (302 list-address))
reply: ((302 list-address)) ((502 list-address))
reply: (302 list-address) => (502 list-address)
sz: (302 list-address)
m: (302 list-address) 1
sz: (302 list-address)
setm: (502 list-address) <= 1006
sz: (502 list-address)
setm: size of (502 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1003) (302 1006) (401 1003) (402 1003) (501 1000) (502 1006) (503 4) (504 t) (505 1005) (506 1003))
run: new-list 7: ((506 tagged-value-address) <- list-value-address (502 list-address))
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1003) (302 1006) (401 1003) (402 1003) (501 1000) (502 1006) (503 4) (504 t) (505 1005) (506 1003))
run: list-value-address 0: ((401 list-address) <- arg)
arg: nil 0 ((502 list-address))
sz: (502 list-address)
m: (502 list-address) 1
sz: (502 list-address)
setm: (401 list-address) <= 1006
sz: (401 list-address)
setm: size of (401 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1003) (302 1006) (401 1006) (402 1003) (501 1000) (502 1006) (503 4) (504 t) (505 1005) (506 1003))
run: list-value-address 1: ((402 tagged-value-address) <- get-address (401 list-address deref) (0 offset))
get-address: (401 list-address deref).0
get-address: after: (1006 list)
run: writing to oarg 1006 => (402 tagged-value-address)
setm: (402 tagged-value-address) <= 1006
sz: (402 tagged-value-address)
setm: size of (402 tagged-value-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 4) (504 t) (505 1005) (506 1003))
run: list-value-address 2: (reply (402 tagged-value-address))
reply: ((402 tagged-value-address)) ((506 tagged-value-address))
reply: (402 tagged-value-address) => (506 tagged-value-address)
sz: (402 tagged-value-address)
m: (402 tagged-value-address) 1
sz: (402 tagged-value-address)
setm: (506 tagged-value-address) <= 1006
sz: (506 tagged-value-address)
setm: size of (506 tagged-value-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 4) (504 t) (505 1005) (506 1006))
run: new-list 8: ((506 tagged-value-address deref) <- save-type (503 integer))
sz: (503 integer)
m: (503 integer) 1
sz: (503 integer)
run: writing to oarg #(tagged record (integer 4)) => (506 tagged-value-address deref)
setm: (506 tagged-value-address deref) <= #(tagged record (integer 4))
sz: (506 tagged-value-address deref)
sz: (506 location)
m: (506 location) 1
sz: (506 location)
sz: (1006 tagged-value)
setm: size of (506 tagged-value-address deref) is 2
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 4) (504 t) (505 1005) (506 1006))
run: new-list 9: (jump (-8 offset))
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 4) (504 t) (505 1005) (506 1006))
run: new-list 2: ((503 integer) (504 boolean) <- arg)
arg: nil 2 ((3 literal) (4 literal) (5 literal))
sz: (5 literal)
m: (5 literal) literal
setm: (503 integer) <= 5
sz: (503 integer)
setm: size of (503 integer) is 1
setm: (504 boolean) <= t
sz: (504 boolean)
setm: size of (504 boolean) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 5) (504 t) (505 1005) (506 1006))
run: new-list 3: (jump-unless (504 boolean) (6 offset))
sz: (504 boolean)
m: (504 boolean) 1
sz: (504 boolean)
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 5) (504 t) (505 1005) (506 1006))
run: new-list 4: ((505 list-address-address) <- get-address (502 list-address deref) (1 offset))
get-address: (502 list-address deref).1
get-address: after: (1006 list)
run: writing to oarg 1008 => (505 list-address-address)
setm: (505 list-address-address) <= 1008
sz: (505 list-address-address)
setm: size of (505 list-address-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 5) (504 t) (505 1008) (506 1006))
run: new-list 5: ((505 list-address-address deref) <- new (list type))
sizeof: list
sizeof: tagged-value
sizeof: type
sizeof: location
sizeof: list-address
run: writing to oarg 1009 => (505 list-address-address deref)
setm: (505 list-address-address deref) <= 1009
sz: (505 list-address-address deref)
sz: (505 location)
m: (505 location) 1
sz: (505 location)
sz: (1008 list-address)
setm: size of (505 list-address-address deref) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 5) (504 t) (505 1008) (506 1006))
run: new-list 6: ((502 list-address) <- list-next (502 list-address))
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1003) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 5) (504 t) (505 1008) (506 1006))
run: list-next 0: ((301 list-address) <- arg)
arg: nil 0 ((502 list-address))
sz: (502 list-address)
m: (502 list-address) 1
sz: (502 list-address)
setm: (301 list-address) <= 1006
sz: (301 list-address)
setm: size of (301 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1006) (302 1006) (401 1006) (402 1006) (501 1000) (502 1006) (503 5) (504 t) (505 1008) (506 1006))
run: list-next 1: ((302 list-address) <- get (301 list-address deref) (1 offset))
sz: (1008 list-address)
m: (1008 list-address) 1
sz: (1008 list-address)
run: writing to oarg 1009 => (302 list-address)
setm: (302 list-address) <= 1009
sz: (302 list-address)
setm: size of (302 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1006) (302 1009) (401 1006) (402 1006) (501 1000) (502 1006) (503 5) (504 t) (505 1008) (506 1006))
run: list-next 2: (reply (302 list-address))
reply: ((302 list-address)) ((502 list-address))
reply: (302 list-address) => (502 list-address)
sz: (302 list-address)
m: (302 list-address) 1
sz: (302 list-address)
setm: (502 list-address) <= 1009
sz: (502 list-address)
setm: size of (502 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1006) (302 1009) (401 1006) (402 1006) (501 1000) (502 1009) (503 5) (504 t) (505 1008) (506 1006))
run: new-list 7: ((506 tagged-value-address) <- list-value-address (502 list-address))
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1006) (302 1009) (401 1006) (402 1006) (501 1000) (502 1009) (503 5) (504 t) (505 1008) (506 1006))
run: list-value-address 0: ((401 list-address) <- arg)
arg: nil 0 ((502 list-address))
sz: (502 list-address)
m: (502 list-address) 1
sz: (502 list-address)
setm: (401 list-address) <= 1009
sz: (401 list-address)
setm: size of (401 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1006) (302 1009) (401 1009) (402 1006) (501 1000) (502 1009) (503 5) (504 t) (505 1008) (506 1006))
run: list-value-address 1: ((402 tagged-value-address) <- get-address (401 list-address deref) (0 offset))
get-address: (401 list-address deref).0
get-address: after: (1009 list)
run: writing to oarg 1009 => (402 tagged-value-address)
setm: (402 tagged-value-address) <= 1009
sz: (402 tagged-value-address)
setm: size of (402 tagged-value-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1006) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (503 5) (504 t) (505 1008) (506 1006))
run: list-value-address 2: (reply (402 tagged-value-address))
reply: ((402 tagged-value-address)) ((506 tagged-value-address))
reply: (402 tagged-value-address) => (506 tagged-value-address)
sz: (402 tagged-value-address)
m: (402 tagged-value-address) 1
sz: (402 tagged-value-address)
setm: (506 tagged-value-address) <= 1009
sz: (506 tagged-value-address)
setm: size of (506 tagged-value-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (301 1006) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (503 5) (504 t) (505 1008) (506 1009))
run: new-list 8: ((506 tagged-value-address deref) <- save-type (503 integer))
sz: (503 integer)
m: (503 integer) 1
sz: (503 integer)
run: writing to oarg #(tagged record (integer 5)) => (506 tagged-value-address deref)
setm: (506 tagged-value-address deref) <= #(tagged record (integer 5))
sz: (506 tagged-value-address deref)
sz: (506 location)
m: (506 location) 1
sz: (506 location)
sz: (1009 tagged-value)
setm: size of (506 tagged-value-address deref) is 2
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1006) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (503 5) (504 t) (505 1008) (506 1009))
run: new-list 9: (jump (-8 offset))
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1006) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (503 5) (504 t) (505 1008) (506 1009))
run: new-list 2: ((503 integer) (504 boolean) <- arg)
arg: nil 3 ((3 literal) (4 literal) (5 literal))
setm: (503 integer) <= nil
sz: (503 integer)
setm: size of (503 integer) is 1
setm: (504 boolean) <= nil
sz: (504 boolean)
setm: size of (504 boolean) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1006) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (505 1008) (506 1009))
run: new-list 3: (jump-unless (504 boolean) (6 offset))
sz: (504 boolean)
m: (504 boolean) 1
sz: (504 boolean)
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1006) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (505 1008) (506 1009))
run: new-list 10: ((501 list-address) <- list-next (501 list-address))
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1006) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (505 1008) (506 1009))
run: list-next 0: ((301 list-address) <- arg)
arg: nil 0 ((501 list-address))
sz: (501 list-address)
m: (501 list-address) 1
sz: (501 list-address)
setm: (301 list-address) <= 1000
sz: (301 list-address)
setm: size of (301 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1000) (302 1009) (401 1009) (402 1009) (501 1000) (502 1009) (505 1008) (506 1009))
run: list-next 1: ((302 list-address) <- get (301 list-address deref) (1 offset))
sz: (1002 list-address)
m: (1002 list-address) 1
sz: (1002 list-address)
run: writing to oarg 1003 => (302 list-address)
setm: (302 list-address) <= 1003
sz: (302 list-address)
setm: size of (302 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1000) (302 1003) (401 1009) (402 1009) (501 1000) (502 1009) (505 1008) (506 1009))
run: list-next 2: (reply (302 list-address))
reply: ((302 list-address)) ((501 list-address))
reply: (302 list-address) => (501 list-address)
sz: (302 list-address)
m: (302 list-address) 1
sz: (302 list-address)
setm: (501 list-address) <= 1003
sz: (501 list-address)
setm: size of (501 list-address) is 1
run: -- ((1002 1003) (1003 integer) (1004 3) (1005 1006) (1006 integer) (1007 4) (1008 1009) (1009 integer) (1010 5) (301 1000) (302 1003) (401 1009) (402 1009) (501 1003) (502 1009) (505 1008) (506 1009))
run: new-list 11: (reply (501 list-address))
reply: ((501 list-address)) ((1 integer))
reply: (501 list-address) => (1 integer)
sz: (501 list-address)
m: (501 list-address) 1
sz: (501 list-address)
setm: (1 integer) <= 1003
sz: (1 integer)
setm: size of (1 integer) is 1
