c{0: 0 ((1 integer) <- copy (2 literal)) -- nil
c{0: 1 ((2 integer) <- copy (23 literal)) -- nil
c{0: 2 ((3 boolean) <- copy (nil literal)) -- nil
c{0: 3 ((4 integer) <- copy (24 literal)) -- nil
c{0: 4 ((5 boolean) <- copy (t literal)) -- nil
c{0: 5 ((6 integer) <- len (1 integer-boolean-pair-array)) -- nil
c{1: 0 copy ((1 integer))
c{1: 1 copy ((2 integer))
c{1: 2 copy ((3 boolean))
c{1: 3 copy ((4 integer))
c{1: 4 copy ((5 boolean))
c{1: 5 len ((6 integer))
cn0: ((1 integer) <- copy (2 literal)) nil nil
maybe-add: (2 literal)
cn0: checking (1 integer)
maybe-add: (1 integer)
cn0: ((2 integer) <- copy (23 literal)) nil nil
maybe-add: (23 literal)
cn0: checking (2 integer)
maybe-add: (2 integer)
cn0: ((3 boolean) <- copy (nil literal)) nil nil
maybe-add: (nil literal)
cn0: checking (3 boolean)
maybe-add: (3 boolean)
cn0: ((4 integer) <- copy (24 literal)) nil nil
maybe-add: (24 literal)
cn0: checking (4 integer)
maybe-add: (4 integer)
cn0: ((5 boolean) <- copy (t literal)) nil nil
maybe-add: (t literal)
cn0: checking (5 boolean)
maybe-add: (5 boolean)
cn0: ((6 integer) <- len (1 integer-boolean-pair-array)) nil nil
maybe-add: (1 integer-boolean-pair-array)
cn0: checking (6 integer)
maybe-add: (6 integer)
cn1: update names nil nil
schedule: main
run: -- nil
run: 1 main 0: ((1 integer) <- copy (2 literal))
run: 2 => (1 integer)
setm: (1 integer) <= 2
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 2
run: -- ((1 2))
run: 2 main 1: ((2 integer) <- copy (23 literal))
run: 23 => (2 integer)
setm: (2 integer) <= 23
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 23
run: -- ((1 2) (2 23))
run: 3 main 2: ((3 boolean) <- copy (nil literal))
run: nil => (3 boolean)
setm: (3 boolean) <= nil
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 3 to nil
run: -- ((1 2) (2 23))
run: 4 main 3: ((4 integer) <- copy (24 literal))
run: 24 => (4 integer)
setm: (4 integer) <= 24
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
setm: size of (4 integer) is 1
setm: (4 integer): setting 4 to 24
run: -- ((1 2) (2 23) (4 24))
run: 5 main 4: ((5 boolean) <- copy (t literal))
run: t => (5 boolean)
setm: (5 boolean) <= t
sz: (5 boolean)
addr: (5 boolean)
addr: initial result: 5
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 5 to t
run: -- ((1 2) (2 23) (4 24) (5 t))
run: 6 main 5: ((6 integer) <- len (1 integer-boolean-pair-array))
array-len: (1 integer-boolean-pair-array)
m: (1 integer)
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
run: 2 => (6 integer)
setm: (6 integer) <= 2
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
setm: size of (6 integer) is 1
setm: (6 integer): setting 6 to 2
