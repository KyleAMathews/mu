c{0: 0 ((1 integer) <- copy (34 literal)) -- nil
c{0: 1 ((2 boolean) <- copy (t literal)) -- nil
c{0: 2 ((3 boolean-address) <- get-address (1 integer-boolean-pair) (1 offset)) -- nil
c{1: 0 copy ((1 integer))
c{1: 1 copy ((2 boolean))
c{1: 2 get-address ((3 boolean-address))
cn0: ((1 integer) <- copy (34 literal)) nil nil
maybe-add: (34 literal)
cn0: checking (1 integer)
maybe-add: (1 integer)
cn0: ((2 boolean) <- copy (t literal)) nil nil
maybe-add: (t literal)
cn0: checking (2 boolean)
maybe-add: (2 boolean)
cn0: ((3 boolean-address) <- get-address (1 integer-boolean-pair) (1 offset)) nil nil
cn0: field-access 1
cn0: checking (3 boolean-address)
maybe-add: (3 boolean-address)
cn1: update names nil nil
schedule: main
run: -- nil
run: 1 main 0: ((1 integer) <- copy (34 literal))
run: writing to oarg 34 => (1 integer)
setm: (1 integer) <= 34
sz: (1 integer)
addr: (1 integer)
addr: initial result: 1
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 34
run: -- ((1 34))
run: 2 main 1: ((2 boolean) <- copy (t literal))
run: writing to oarg t => (2 boolean)
setm: (2 boolean) <= t
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
setm: size of (2 boolean) is 1
setm: (2 boolean): setting 2 to t
run: -- ((1 34) (2 t))
run: 3 main 2: ((3 boolean-address) <- get-address (1 integer-boolean-pair) (1 offset))
record-info: (1 integer-boolean-pair) (1 offset)
addr: (1 integer-boolean-pair)
addr: initial result: 1
record-info: initial base 1 type ((elems (integer boolean)) (fields (int bool)) (record t) (size 2))
get-address: (1 integer-boolean-pair) (1 offset) => 2
run: writing to oarg 2 => (3 boolean-address)
setm: (3 boolean-address) <= 2
sz: (3 boolean-address)
addr: (3 boolean-address)
addr: initial result: 3
setm: size of (3 boolean-address) is 1
setm: (3 boolean-address): setting 3 to 2
